{
  "version": 3,
  "sources": ["../node_modules/howler/dist/howler.js", "../node_modules/earcut/src/earcut.js", "../node_modules/@wonderlandengine/api/dist/index.js", "../node_modules/wasm-feature-detect/dist/esm/index.js", "../node_modules/@wonderlandengine/api/dist/property.js", "../node_modules/@wonderlandengine/api/dist/decorators.js", "../node_modules/@wonderlandengine/api/dist/utils/object.js", "../node_modules/@wonderlandengine/api/dist/utils/event.js", "../node_modules/@wonderlandengine/api/dist/wonderland.js", "../node_modules/@wonderlandengine/api/dist/utils/fetch.js", "../node_modules/@wonderlandengine/api/dist/utils/misc.js", "../node_modules/@wonderlandengine/api/dist/scene.js", "../node_modules/@wonderlandengine/api/dist/texture-manager.js", "../node_modules/@wonderlandengine/api/dist/engine.js", "../node_modules/@wonderlandengine/api/dist/utils/bitset.js", "../node_modules/@wonderlandengine/api/dist/utils/logger.js", "../node_modules/@wonderlandengine/api/dist/wasm.js", "../node_modules/@wonderlandengine/api/dist/version.js", "../node_modules/@wonderlandengine/components/dist/8thwall-camera.js", "../node_modules/@wonderlandengine/components/dist/utils/webxr.js", "../node_modules/@wonderlandengine/components/dist/anchor.js", "../node_modules/@wonderlandengine/components/dist/cursor-target.js", "../node_modules/gl-matrix/esm/common.js", "../node_modules/gl-matrix/esm/mat3.js", "../node_modules/gl-matrix/esm/mat4.js", "../node_modules/gl-matrix/esm/quat.js", "../node_modules/gl-matrix/esm/vec3.js", "../node_modules/gl-matrix/esm/vec4.js", "../node_modules/gl-matrix/esm/quat2.js", "../node_modules/@wonderlandengine/components/dist/hit-test-location.js", "../node_modules/@wonderlandengine/components/dist/cursor.js", "../node_modules/@wonderlandengine/components/dist/debug-object.js", "../node_modules/@wonderlandengine/components/dist/finger-cursor.js", "../node_modules/@wonderlandengine/components/dist/fixed-foveation.js", "../node_modules/@wonderlandengine/components/dist/hand-tracking.js", "../node_modules/@wonderlandengine/components/dist/howler-audio-listener.js", "../node_modules/@wonderlandengine/components/dist/howler-audio-source.js", "../node_modules/@wonderlandengine/components/dist/utils/utils.js", "../node_modules/@wonderlandengine/components/dist/image-texture.js", "../node_modules/@wonderlandengine/components/dist/mouse-look.js", "../node_modules/@wonderlandengine/components/dist/player-height.js", "../node_modules/@wonderlandengine/components/dist/target-framerate.js", "../node_modules/@wonderlandengine/components/dist/teleport.js", "../node_modules/@wonderlandengine/components/dist/trail.js", "../node_modules/@wonderlandengine/components/dist/two-joint-ik-solver.js", "../node_modules/@wonderlandengine/components/dist/video-texture.js", "../node_modules/@wonderlandengine/components/dist/vr-mode-active-switch.js", "../node_modules/@wonderlandengine/components/dist/plane-detection.js", "../node_modules/@wonderlandengine/components/dist/vrm.js", "../node_modules/@wonderlandengine/components/dist/wasd-controls.js", "../js/button.js", "../js/index.js"],
  "sourcesContent": ["/*!\r\n *  howler.js v2.2.4\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2020, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create the global controller. All contained methods and properties apply\r\n   * to all sounds that are currently playing or will be in the future.\r\n   */\r\n  var HowlerGlobal = function() {\r\n    this.init();\r\n  };\r\n  HowlerGlobal.prototype = {\r\n    /**\r\n     * Initialize the global Howler object.\r\n     * @return {Howler}\r\n     */\r\n    init: function() {\r\n      var self = this || Howler;\r\n\r\n      // Create a global ID counter.\r\n      self._counter = 1000;\r\n\r\n      // Pool of unlocked HTML5 Audio objects.\r\n      self._html5AudioPool = [];\r\n      self.html5PoolSize = 10;\r\n\r\n      // Internal properties.\r\n      self._codecs = {};\r\n      self._howls = [];\r\n      self._muted = false;\r\n      self._volume = 1;\r\n      self._canPlayEvent = 'canplaythrough';\r\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\r\n\r\n      // Public properties.\r\n      self.masterGain = null;\r\n      self.noAudio = false;\r\n      self.usingWebAudio = true;\r\n      self.autoSuspend = true;\r\n      self.ctx = null;\r\n\r\n      // Set to false to disable the auto audio unlocker.\r\n      self.autoUnlock = true;\r\n\r\n      // Setup the various state values for global tracking.\r\n      self._setup();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the global volume for all sounds.\r\n     * @param  {Float} vol Volume from 0.0 to 1.0.\r\n     * @return {Howler/Float}     Returns self or current volume.\r\n     */\r\n    volume: function(vol) {\r\n      var self = this || Howler;\r\n      vol = parseFloat(vol);\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        self._volume = vol;\r\n\r\n        // Don't update any of the nodes if we are muted.\r\n        if (self._muted) {\r\n          return self;\r\n        }\r\n\r\n        // When using Web Audio, we just need to adjust the master gain.\r\n        if (self.usingWebAudio) {\r\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n        }\r\n\r\n        // Loop through and change volume for all HTML5 audio nodes.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and change the volumes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node) {\r\n                sound._node.volume = sound._volume * vol;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return self;\r\n      }\r\n\r\n      return self._volume;\r\n    },\r\n\r\n    /**\r\n     * Handle muting and unmuting globally.\r\n     * @param  {Boolean} muted Is muted or not.\r\n     */\r\n    mute: function(muted) {\r\n      var self = this || Howler;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!self.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      self._muted = muted;\r\n\r\n      // With Web Audio, we just need to mute the master gain.\r\n      if (self.usingWebAudio) {\r\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\r\n      }\r\n\r\n      // Loop through and mute all HTML5 Audio nodes.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (!self._howls[i]._webAudio) {\r\n          // Get all of the sounds in this Howl group.\r\n          var ids = self._howls[i]._getSoundIds();\r\n\r\n          // Loop through all sounds and mark the audio node as muted.\r\n          for (var j=0; j<ids.length; j++) {\r\n            var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n            if (sound && sound._node) {\r\n              sound._node.muted = (muted) ? true : sound._muted;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Handle stopping all sounds globally.\r\n     */\r\n    stop: function() {\r\n      var self = this || Howler;\r\n\r\n      // Loop through all Howls and stop them.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        self._howls[i].stop();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy all currently loaded Howl objects.\r\n     * @return {Howler}\r\n     */\r\n    unload: function() {\r\n      var self = this || Howler;\r\n\r\n      for (var i=self._howls.length-1; i>=0; i--) {\r\n        self._howls[i].unload();\r\n      }\r\n\r\n      // Create a new AudioContext to make sure it is fully reset.\r\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\r\n        self.ctx.close();\r\n        self.ctx = null;\r\n        setupAudioContext();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for codec support of specific extension.\r\n     * @param  {String} ext Audio file extention.\r\n     * @return {Boolean}\r\n     */\r\n    codecs: function(ext) {\r\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\r\n    },\r\n\r\n    /**\r\n     * Setup various state values for global tracking.\r\n     * @return {Howler}\r\n     */\r\n    _setup: function() {\r\n      var self = this || Howler;\r\n\r\n      // Keeps track of the suspend/resume state of the AudioContext.\r\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\r\n\r\n      // Automatically begin the 30-second suspend process\r\n      self._autoSuspend();\r\n\r\n      // Check if audio is available.\r\n      if (!self.usingWebAudio) {\r\n        // No audio is available on this system if noAudio is set to true.\r\n        if (typeof Audio !== 'undefined') {\r\n          try {\r\n            var test = new Audio();\r\n\r\n            // Check if the canplaythrough event is available.\r\n            if (typeof test.oncanplaythrough === 'undefined') {\r\n              self._canPlayEvent = 'canplay';\r\n            }\r\n          } catch(e) {\r\n            self.noAudio = true;\r\n          }\r\n        } else {\r\n          self.noAudio = true;\r\n        }\r\n      }\r\n\r\n      // Test to make sure audio isn't disabled in Internet Explorer.\r\n      try {\r\n        var test = new Audio();\r\n        if (test.muted) {\r\n          self.noAudio = true;\r\n        }\r\n      } catch (e) {}\r\n\r\n      // Check for supported codecs.\r\n      if (!self.noAudio) {\r\n        self._setupCodecs();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check for browser support for various codecs and cache the results.\r\n     * @return {Howler}\r\n     */\r\n    _setupCodecs: function() {\r\n      var self = this || Howler;\r\n      var audioTest = null;\r\n\r\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\r\n      try {\r\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\r\n      } catch (err) {\r\n        return self;\r\n      }\r\n\r\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\r\n        return self;\r\n      }\r\n\r\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\r\n\r\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\r\n      var ua = self._navigator ? self._navigator.userAgent : '';\r\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\r\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\r\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\r\n      var safariVersion = ua.match(/Version\\/(.*?) /);\r\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\r\n\r\n      self._codecs = {\r\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\r\n        mpeg: !!mpegTest,\r\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\r\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\r\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\r\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\r\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\r\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\r\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\r\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\r\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\r\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\r\n      };\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Some browsers/devices will only allow audio to be played after a user interaction.\r\n     * Attempt to automatically unlock audio on the first user interaction.\r\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\r\n     * @return {Howler}\r\n     */\r\n    _unlockAudio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\r\n      if (self._audioUnlocked || !self.ctx) {\r\n        return;\r\n      }\r\n\r\n      self._audioUnlocked = false;\r\n      self.autoUnlock = false;\r\n\r\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\r\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\r\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\r\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\r\n        self._mobileUnloaded = true;\r\n        self.unload();\r\n      }\r\n\r\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\r\n      // http://stackoverflow.com/questions/24119684\r\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\r\n\r\n      // Call this method on touch start to create and play a buffer,\r\n      // then check if the audio actually played to determine if\r\n      // audio has now been unlocked on iOS, Android, etc.\r\n      var unlock = function(e) {\r\n        // Create a pool of unlocked HTML5 Audio objects that can\r\n        // be used for playing sounds without user interaction. HTML5\r\n        // Audio objects must be individually unlocked, as opposed\r\n        // to the WebAudio API which only needs a single activation.\r\n        // This must occur before WebAudio setup or the source.onended\r\n        // event will not fire.\r\n        while (self._html5AudioPool.length < self.html5PoolSize) {\r\n          try {\r\n            var audioNode = new Audio();\r\n\r\n            // Mark this Audio object as unlocked to ensure it can get returned\r\n            // to the unlocked pool when released.\r\n            audioNode._unlocked = true;\r\n\r\n            // Add the audio node to the pool.\r\n            self._releaseHtml5Audio(audioNode);\r\n          } catch (e) {\r\n            self.noAudio = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        // Loop through any assigned audio nodes and unlock them.\r\n        for (var i=0; i<self._howls.length; i++) {\r\n          if (!self._howls[i]._webAudio) {\r\n            // Get all of the sounds in this Howl group.\r\n            var ids = self._howls[i]._getSoundIds();\r\n\r\n            // Loop through all sounds and unlock the audio nodes.\r\n            for (var j=0; j<ids.length; j++) {\r\n              var sound = self._howls[i]._soundById(ids[j]);\r\n\r\n              if (sound && sound._node && !sound._node._unlocked) {\r\n                sound._node._unlocked = true;\r\n                sound._node.load();\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fix Android can not play in suspend state.\r\n        self._autoResume();\r\n\r\n        // Create an empty buffer.\r\n        var source = self.ctx.createBufferSource();\r\n        source.buffer = self._scratchBuffer;\r\n        source.connect(self.ctx.destination);\r\n\r\n        // Play the empty buffer.\r\n        if (typeof source.start === 'undefined') {\r\n          source.noteOn(0);\r\n        } else {\r\n          source.start(0);\r\n        }\r\n\r\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\r\n        if (typeof self.ctx.resume === 'function') {\r\n          self.ctx.resume();\r\n        }\r\n\r\n        // Setup a timeout to check that we are unlocked on the next event loop.\r\n        source.onended = function() {\r\n          source.disconnect(0);\r\n\r\n          // Update the unlocked state and prevent this check from happening again.\r\n          self._audioUnlocked = true;\r\n\r\n          // Remove the touch start listener.\r\n          document.removeEventListener('touchstart', unlock, true);\r\n          document.removeEventListener('touchend', unlock, true);\r\n          document.removeEventListener('click', unlock, true);\r\n          document.removeEventListener('keydown', unlock, true);\r\n\r\n          // Let all sounds know that audio has been unlocked.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('unlock');\r\n          }\r\n        };\r\n      };\r\n\r\n      // Setup a touch start listener to attempt an unlock in.\r\n      document.addEventListener('touchstart', unlock, true);\r\n      document.addEventListener('touchend', unlock, true);\r\n      document.addEventListener('click', unlock, true);\r\n      document.addEventListener('keydown', unlock, true);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\r\n     * return a new Audio object and throw a warning.\r\n     * @return {Audio} HTML5 Audio object.\r\n     */\r\n    _obtainHtml5Audio: function() {\r\n      var self = this || Howler;\r\n\r\n      // Return the next object from the pool if one exists.\r\n      if (self._html5AudioPool.length) {\r\n        return self._html5AudioPool.pop();\r\n      }\r\n\r\n      //.Check if the audio is locked and throw a warning.\r\n      var testPlay = new Audio().play();\r\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\r\n        testPlay.catch(function() {\r\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\r\n        });\r\n      }\r\n\r\n      return new Audio();\r\n    },\r\n\r\n    /**\r\n     * Return an activated HTML5 Audio object to the pool.\r\n     * @return {Howler}\r\n     */\r\n    _releaseHtml5Audio: function(audio) {\r\n      var self = this || Howler;\r\n\r\n      // Don't add audio to the pool if we don't know if it has been unlocked.\r\n      if (audio._unlocked) {\r\n        self._html5AudioPool.push(audio);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\r\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\r\n     * @return {Howler}\r\n     */\r\n    _autoSuspend: function() {\r\n      var self = this;\r\n\r\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      // Check if any sounds are playing.\r\n      for (var i=0; i<self._howls.length; i++) {\r\n        if (self._howls[i]._webAudio) {\r\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\r\n            if (!self._howls[i]._sounds[j]._paused) {\r\n              return self;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n      }\r\n\r\n      // If no sound has played after 30 seconds, suspend the context.\r\n      self._suspendTimer = setTimeout(function() {\r\n        if (!self.autoSuspend) {\r\n          return;\r\n        }\r\n\r\n        self._suspendTimer = null;\r\n        self.state = 'suspending';\r\n\r\n        // Handle updating the state of the audio context after suspending.\r\n        var handleSuspension = function() {\r\n          self.state = 'suspended';\r\n\r\n          if (self._resumeAfterSuspend) {\r\n            delete self._resumeAfterSuspend;\r\n            self._autoResume();\r\n          }\r\n        };\r\n\r\n        // Either the state gets suspended or it is interrupted.\r\n        // Either way, we need to update the state to suspended.\r\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\r\n      }, 30000);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\r\n     * @return {Howler}\r\n     */\r\n    _autoResume: function() {\r\n      var self = this;\r\n\r\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\r\n        return;\r\n      }\r\n\r\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\r\n        clearTimeout(self._suspendTimer);\r\n        self._suspendTimer = null;\r\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\r\n        self.ctx.resume().then(function() {\r\n          self.state = 'running';\r\n\r\n          // Emit to all Howls that the audio has resumed.\r\n          for (var i=0; i<self._howls.length; i++) {\r\n            self._howls[i]._emit('resume');\r\n          }\r\n        });\r\n\r\n        if (self._suspendTimer) {\r\n          clearTimeout(self._suspendTimer);\r\n          self._suspendTimer = null;\r\n        }\r\n      } else if (self.state === 'suspending') {\r\n        self._resumeAfterSuspend = true;\r\n      }\r\n\r\n      return self;\r\n    }\r\n  };\r\n\r\n  // Setup the global audio controller.\r\n  var Howler = new HowlerGlobal();\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create an audio group controller.\r\n   * @param {Object} o Passed in properties for this group.\r\n   */\r\n  var Howl = function(o) {\r\n    var self = this;\r\n\r\n    // Throw an error if no source is provided.\r\n    if (!o.src || o.src.length === 0) {\r\n      console.error('An array of source files must be passed with any new Howl.');\r\n      return;\r\n    }\r\n\r\n    self.init(o);\r\n  };\r\n  Howl.prototype = {\r\n    /**\r\n     * Initialize a new Howl group object.\r\n     * @param  {Object} o Passed in properties for this group.\r\n     * @return {Howl}\r\n     */\r\n    init: function(o) {\r\n      var self = this;\r\n\r\n      // If we don't have an AudioContext created yet, run the setup.\r\n      if (!Howler.ctx) {\r\n        setupAudioContext();\r\n      }\r\n\r\n      // Setup user-defined default properties.\r\n      self._autoplay = o.autoplay || false;\r\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\r\n      self._html5 = o.html5 || false;\r\n      self._muted = o.mute || false;\r\n      self._loop = o.loop || false;\r\n      self._pool = o.pool || 5;\r\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\r\n      self._rate = o.rate || 1;\r\n      self._sprite = o.sprite || {};\r\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\r\n      self._volume = o.volume !== undefined ? o.volume : 1;\r\n      self._xhr = {\r\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\r\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\r\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\r\n      };\r\n\r\n      // Setup all other default properties.\r\n      self._duration = 0;\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self._endTimers = {};\r\n      self._queue = [];\r\n      self._playLock = false;\r\n\r\n      // Setup event listeners.\r\n      self._onend = o.onend ? [{fn: o.onend}] : [];\r\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\r\n      self._onload = o.onload ? [{fn: o.onload}] : [];\r\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\r\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\r\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\r\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\r\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\r\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\r\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\r\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\r\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\r\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\r\n      self._onresume = [];\r\n\r\n      // Web Audio or HTML5 Audio?\r\n      self._webAudio = Howler.usingWebAudio && !self._html5;\r\n\r\n      // Automatically try to enable audio.\r\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\r\n        Howler._unlockAudio();\r\n      }\r\n\r\n      // Keep track of this Howl group in the global controller.\r\n      Howler._howls.push(self);\r\n\r\n      // If they selected autoplay, add a play event to the load queue.\r\n      if (self._autoplay) {\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play();\r\n          }\r\n        });\r\n      }\r\n\r\n      // Load the source file unless otherwise specified.\r\n      if (self._preload && self._preload !== 'none') {\r\n        self.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Load the audio file.\r\n     * @return {Howler}\r\n     */\r\n    load: function() {\r\n      var self = this;\r\n      var url = null;\r\n\r\n      // If no audio is available, quit immediately.\r\n      if (Howler.noAudio) {\r\n        self._emit('loaderror', null, 'No audio support.');\r\n        return;\r\n      }\r\n\r\n      // Make sure our source is in an array.\r\n      if (typeof self._src === 'string') {\r\n        self._src = [self._src];\r\n      }\r\n\r\n      // Loop through the sources and pick the first one that is compatible.\r\n      for (var i=0; i<self._src.length; i++) {\r\n        var ext, str;\r\n\r\n        if (self._format && self._format[i]) {\r\n          // If an extension was specified, use that instead.\r\n          ext = self._format[i];\r\n        } else {\r\n          // Make sure the source is a string.\r\n          str = self._src[i];\r\n          if (typeof str !== 'string') {\r\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\r\n            continue;\r\n          }\r\n\r\n          // Extract the file extension from the URL or base64 data URI.\r\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\r\n          if (!ext) {\r\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\r\n          }\r\n\r\n          if (ext) {\r\n            ext = ext[1].toLowerCase();\r\n          }\r\n        }\r\n\r\n        // Log a warning if no extension was found.\r\n        if (!ext) {\r\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\r\n        }\r\n\r\n        // Check if this extension is available.\r\n        if (ext && Howler.codecs(ext)) {\r\n          url = self._src[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!url) {\r\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\r\n        return;\r\n      }\r\n\r\n      self._src = url;\r\n      self._state = 'loading';\r\n\r\n      // If the hosting page is HTTPS and the source isn't,\r\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\r\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\r\n        self._html5 = true;\r\n        self._webAudio = false;\r\n      }\r\n\r\n      // Create a new sound object and add it to the pool.\r\n      new Sound(self);\r\n\r\n      // Load and decode the audio data for playback.\r\n      if (self._webAudio) {\r\n        loadBuffer(self);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Play a sound or resume previous playback.\r\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Number}          Sound ID.\r\n     */\r\n    play: function(sprite, internal) {\r\n      var self = this;\r\n      var id = null;\r\n\r\n      // Determine if a sprite, sound id or nothing was passed\r\n      if (typeof sprite === 'number') {\r\n        id = sprite;\r\n        sprite = null;\r\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\r\n        // If the passed sprite doesn't exist, do nothing.\r\n        return null;\r\n      } else if (typeof sprite === 'undefined') {\r\n        // Use the default sound sprite (plays the full audio length).\r\n        sprite = '__default';\r\n\r\n        // Check if there is a single paused sound that isn't ended.\r\n        // If there is, play that sound. If not, continue as usual.\r\n        if (!self._playLock) {\r\n          var num = 0;\r\n          for (var i=0; i<self._sounds.length; i++) {\r\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\r\n              num++;\r\n              id = self._sounds[i]._id;\r\n            }\r\n          }\r\n\r\n          if (num === 1) {\r\n            sprite = null;\r\n          } else {\r\n            id = null;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Get the selected node, or get one from the pool.\r\n      var sound = id ? self._soundById(id) : self._inactiveSound();\r\n\r\n      // If the sound doesn't exist, do nothing.\r\n      if (!sound) {\r\n        return null;\r\n      }\r\n\r\n      // Select the sprite definition.\r\n      if (id && !sprite) {\r\n        sprite = sound._sprite || '__default';\r\n      }\r\n\r\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\r\n      // We also need to wait to make sure we don't run into race conditions with\r\n      // the order of function calls.\r\n      if (self._state !== 'loaded') {\r\n        // Set the sprite value on this sound.\r\n        sound._sprite = sprite;\r\n\r\n        // Mark this sound as not ended in case another sound is played before this one loads.\r\n        sound._ended = false;\r\n\r\n        // Add the sound to the queue to be played on load.\r\n        var soundId = sound._id;\r\n        self._queue.push({\r\n          event: 'play',\r\n          action: function() {\r\n            self.play(soundId);\r\n          }\r\n        });\r\n\r\n        return soundId;\r\n      }\r\n\r\n      // Don't play the sound if an id was passed and it is already playing.\r\n      if (id && !sound._paused) {\r\n        // Trigger the play event, in order to keep iterating through queue.\r\n        if (!internal) {\r\n          self._loadQueue('play');\r\n        }\r\n\r\n        return sound._id;\r\n      }\r\n\r\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\r\n      if (self._webAudio) {\r\n        Howler._autoResume();\r\n      }\r\n\r\n      // Determine how long to play for and where to start playing.\r\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\r\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\r\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n      var start = self._sprite[sprite][0] / 1000;\r\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\r\n      sound._sprite = sprite;\r\n\r\n      // Mark the sound as ended instantly so that this async playback\r\n      // doesn't get grabbed by another call to play while this one waits to start.\r\n      sound._ended = false;\r\n\r\n      // Update the parameters of the sound.\r\n      var setParams = function() {\r\n        sound._paused = false;\r\n        sound._seek = seek;\r\n        sound._start = start;\r\n        sound._stop = stop;\r\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\r\n      };\r\n\r\n      // End the sound instantly if seek is at the end.\r\n      if (seek >= stop) {\r\n        self._ended(sound);\r\n        return;\r\n      }\r\n\r\n      // Begin the actual playback.\r\n      var node = sound._node;\r\n      if (self._webAudio) {\r\n        // Fire this when the sound is ready to play to begin Web Audio playback.\r\n        var playWebAudio = function() {\r\n          self._playLock = false;\r\n          setParams();\r\n          self._refreshBuffer(sound);\r\n\r\n          // Setup the playback params.\r\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\r\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n          sound._playStart = Howler.ctx.currentTime;\r\n\r\n          // Play the sound using the supported method.\r\n          if (typeof node.bufferSource.start === 'undefined') {\r\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\r\n          } else {\r\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\r\n          }\r\n\r\n          // Start a new timer if none is present.\r\n          if (timeout !== Infinity) {\r\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n          }\r\n\r\n          if (!internal) {\r\n            setTimeout(function() {\r\n              self._emit('play', sound._id);\r\n              self._loadQueue();\r\n            }, 0);\r\n          }\r\n        };\r\n\r\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\r\n          playWebAudio();\r\n        } else {\r\n          self._playLock = true;\r\n\r\n          // Wait for the audio context to resume before playing.\r\n          self.once('resume', playWebAudio);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      } else {\r\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\r\n        var playHtml5 = function() {\r\n          node.currentTime = seek;\r\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\r\n          node.volume = sound._volume * Howler.volume();\r\n          node.playbackRate = sound._rate;\r\n\r\n          // Some browsers will throw an error if this is called without user interaction.\r\n          try {\r\n            var play = node.play();\r\n\r\n            // Support older browsers that don't support promises, and thus don't have this issue.\r\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\r\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\r\n              self._playLock = true;\r\n\r\n              // Set param values immediately.\r\n              setParams();\r\n\r\n              // Releases the lock and executes queued actions.\r\n              play\r\n                .then(function() {\r\n                  self._playLock = false;\r\n                  node._unlocked = true;\r\n                  if (!internal) {\r\n                    self._emit('play', sound._id);\r\n                  } else {\r\n                    self._loadQueue();\r\n                  }\r\n                })\r\n                .catch(function() {\r\n                  self._playLock = false;\r\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\r\n\r\n                  // Reset the ended and paused values.\r\n                  sound._ended = true;\r\n                  sound._paused = true;\r\n                });\r\n            } else if (!internal) {\r\n              self._playLock = false;\r\n              setParams();\r\n              self._emit('play', sound._id);\r\n            }\r\n\r\n            // Setting rate before playing won't work in IE, so we set it again here.\r\n            node.playbackRate = sound._rate;\r\n\r\n            // If the node is still paused, then we can assume there was a playback issue.\r\n            if (node.paused) {\r\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\r\n                'on mobile devices and Chrome where playback was not within a user interaction.');\r\n              return;\r\n            }\r\n\r\n            // Setup the end timer on sprites or listen for the ended event.\r\n            if (sprite !== '__default' || sound._loop) {\r\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            } else {\r\n              self._endTimers[sound._id] = function() {\r\n                // Fire ended on this audio node.\r\n                self._ended(sound);\r\n\r\n                // Clear this listener.\r\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\r\n              };\r\n              node.addEventListener('ended', self._endTimers[sound._id], false);\r\n            }\r\n          } catch (err) {\r\n            self._emit('playerror', sound._id, err);\r\n          }\r\n        };\r\n\r\n        // If this is streaming audio, make sure the src is set and load again.\r\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\r\n          node.src = self._src;\r\n          node.load();\r\n        }\r\n\r\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\r\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\r\n        if (node.readyState >= 3 || loadedNoReadyState) {\r\n          playHtml5();\r\n        } else {\r\n          self._playLock = true;\r\n          self._state = 'loading';\r\n\r\n          var listener = function() {\r\n            self._state = 'loaded';\r\n            \r\n            // Begin playback.\r\n            playHtml5();\r\n\r\n            // Clear this listener.\r\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\r\n          };\r\n          node.addEventListener(Howler._canPlayEvent, listener, false);\r\n\r\n          // Cancel the end timer.\r\n          self._clearTimer(sound._id);\r\n        }\r\n      }\r\n\r\n      return sound._id;\r\n    },\r\n\r\n    /**\r\n     * Pause playback and save current position.\r\n     * @param  {Number} id The sound ID (empty to pause all in group).\r\n     * @return {Howl}\r\n     */\r\n    pause: function(id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'pause',\r\n          action: function() {\r\n            self.pause(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be paused.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound && !sound._paused) {\r\n          // Reset the seek position.\r\n          sound._seek = self.seek(ids[i]);\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound has been created.\r\n              if (!sound._node.bufferSource) {\r\n                continue;\r\n              }\r\n\r\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                sound._node.bufferSource.noteOff(0);\r\n              } else {\r\n                sound._node.bufferSource.stop(0);\r\n              }\r\n\r\n              // Clean up the buffer source.\r\n              self._cleanBuffer(sound._node);\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.pause();\r\n            }\r\n          }\r\n        }\r\n\r\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\r\n        if (!arguments[1]) {\r\n          self._emit('pause', sound ? sound._id : null);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Stop playback and reset to start.\r\n     * @param  {Number} id The sound ID (empty to stop all in group).\r\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\r\n     * @return {Howl}\r\n     */\r\n    stop: function(id, internal) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'stop',\r\n          action: function() {\r\n            self.stop(id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be stopped.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Clear the end timer.\r\n        self._clearTimer(ids[i]);\r\n\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          // Reset the seek position.\r\n          sound._seek = sound._start || 0;\r\n          sound._rateSeek = 0;\r\n          sound._paused = true;\r\n          sound._ended = true;\r\n\r\n          // Stop currently running fades.\r\n          self._stopFade(ids[i]);\r\n\r\n          if (sound._node) {\r\n            if (self._webAudio) {\r\n              // Make sure the sound's AudioBufferSourceNode has been created.\r\n              if (sound._node.bufferSource) {\r\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\r\n                  sound._node.bufferSource.noteOff(0);\r\n                } else {\r\n                  sound._node.bufferSource.stop(0);\r\n                }\r\n\r\n                // Clean up the buffer source.\r\n                self._cleanBuffer(sound._node);\r\n              }\r\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\r\n              sound._node.currentTime = sound._start || 0;\r\n              sound._node.pause();\r\n\r\n              // If this is a live stream, stop download once the audio is stopped.\r\n              if (sound._node.duration === Infinity) {\r\n                self._clearSound(sound._node);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!internal) {\r\n            self._emit('stop', sound._id);\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Mute/unmute a single sound or all sounds in this Howl group.\r\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\r\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\r\n     * @return {Howl}\r\n     */\r\n    mute: function(muted, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\r\n      if (self._state !== 'loaded'|| self._playLock) {\r\n        self._queue.push({\r\n          event: 'mute',\r\n          action: function() {\r\n            self.mute(muted, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // If applying mute/unmute to all sounds, update the group's value.\r\n      if (typeof id === 'undefined') {\r\n        if (typeof muted === 'boolean') {\r\n          self._muted = muted;\r\n        } else {\r\n          return self._muted;\r\n        }\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be muted.\r\n      var ids = self._getSoundIds(id);\r\n\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._muted = muted;\r\n\r\n          // Cancel active fade and set the volume to the end value.\r\n          if (sound._interval) {\r\n            self._stopFade(sound._id);\r\n          }\r\n\r\n          if (self._webAudio && sound._node) {\r\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\r\n          } else if (sound._node) {\r\n            sound._node.muted = Howler._muted ? true : muted;\r\n          }\r\n\r\n          self._emit('mute', sound._id);\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\r\n     *   volume() -> Returns the group's volume value.\r\n     *   volume(id) -> Returns the sound id's current volume.\r\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\r\n     *   volume(vol, id) -> Sets the volume of passed sound id.\r\n     * @return {Howl/Number} Returns self or current volume.\r\n     */\r\n    volume: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var vol, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // Return the value of the groups' volume.\r\n        return self._volume;\r\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\r\n        // First check if this is an ID, and if not, assume it is a new volume.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          vol = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length >= 2) {\r\n        vol = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the volume or return the current volume.\r\n      var sound;\r\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\r\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\r\n        if (self._state !== 'loaded'|| self._playLock) {\r\n          self._queue.push({\r\n            event: 'volume',\r\n            action: function() {\r\n              self.volume.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group volume.\r\n        if (typeof id === 'undefined') {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            sound._volume = vol;\r\n\r\n            // Stop currently running fades.\r\n            if (!args[2]) {\r\n              self._stopFade(id[i]);\r\n            }\r\n\r\n            if (self._webAudio && sound._node && !sound._muted) {\r\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\r\n            } else if (sound._node && !sound._muted) {\r\n              sound._node.volume = vol * Howler.volume();\r\n            }\r\n\r\n            self._emit('volume', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = id ? self._soundById(id) : self._sounds[0];\r\n        return sound ? sound._volume : 0;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id (omit to fade all sounds).\r\n     * @return {Howl}\r\n     */\r\n    fade: function(from, to, len, id) {\r\n      var self = this;\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\r\n      if (self._state !== 'loaded' || self._playLock) {\r\n        self._queue.push({\r\n          event: 'fade',\r\n          action: function() {\r\n            self.fade(from, to, len, id);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Make sure the to/from/len values are numbers.\r\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\r\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\r\n      len = parseFloat(len);\r\n\r\n      // Set the volume to the start position.\r\n      self.volume(from, id);\r\n\r\n      // Fade the volume of one or all sounds.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        // Get the sound.\r\n        var sound = self._soundById(ids[i]);\r\n\r\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\r\n        if (sound) {\r\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\r\n          if (!id) {\r\n            self._stopFade(ids[i]);\r\n          }\r\n\r\n          // If we are using Web Audio, let the native methods do the actual fade.\r\n          if (self._webAudio && !sound._muted) {\r\n            var currentTime = Howler.ctx.currentTime;\r\n            var end = currentTime + (len / 1000);\r\n            sound._volume = from;\r\n            sound._node.gain.setValueAtTime(from, currentTime);\r\n            sound._node.gain.linearRampToValueAtTime(to, end);\r\n          }\r\n\r\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Starts the internal interval to fade a sound.\r\n     * @param  {Object} sound Reference to sound to fade.\r\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\r\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\r\n     * @param  {Number} len  Time in milliseconds to fade.\r\n     * @param  {Number} id   The sound id to fade.\r\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\r\n     */\r\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\r\n      var self = this;\r\n      var vol = from;\r\n      var diff = to - from;\r\n      var steps = Math.abs(diff / 0.01);\r\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\r\n      var lastTick = Date.now();\r\n\r\n      // Store the value being faded to.\r\n      sound._fadeTo = to;\r\n\r\n      // Update the volume value on each interval tick.\r\n      sound._interval = setInterval(function() {\r\n        // Update the volume based on the time since the last tick.\r\n        var tick = (Date.now() - lastTick) / len;\r\n        lastTick = Date.now();\r\n        vol += diff * tick;\r\n\r\n        // Round to within 2 decimal points.\r\n        vol = Math.round(vol * 100) / 100;\r\n\r\n        // Make sure the volume is in the right bounds.\r\n        if (diff < 0) {\r\n          vol = Math.max(to, vol);\r\n        } else {\r\n          vol = Math.min(to, vol);\r\n        }\r\n\r\n        // Change the volume.\r\n        if (self._webAudio) {\r\n          sound._volume = vol;\r\n        } else {\r\n          self.volume(vol, sound._id, true);\r\n        }\r\n\r\n        // Set the group's volume.\r\n        if (isGroup) {\r\n          self._volume = vol;\r\n        }\r\n\r\n        // When the fade is complete, stop it and fire event.\r\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\r\n          clearInterval(sound._interval);\r\n          sound._interval = null;\r\n          sound._fadeTo = null;\r\n          self.volume(to, sound._id);\r\n          self._emit('fade', sound._id);\r\n        }\r\n      }, stepLen);\r\n    },\r\n\r\n    /**\r\n     * Internal method that stops the currently playing fade when\r\n     * a new fade starts, volume is changed or the sound is stopped.\r\n     * @param  {Number} id The sound id.\r\n     * @return {Howl}\r\n     */\r\n    _stopFade: function(id) {\r\n      var self = this;\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound && sound._interval) {\r\n        if (self._webAudio) {\r\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\r\n        }\r\n\r\n        clearInterval(sound._interval);\r\n        sound._interval = null;\r\n        self.volume(sound._fadeTo, id);\r\n        sound._fadeTo = null;\r\n        self._emit('fade', id);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   loop() -> Returns the group's loop value.\r\n     *   loop(id) -> Returns the sound id's loop value.\r\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\r\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\r\n     * @return {Howl/Boolean} Returns self or current loop value.\r\n     */\r\n    loop: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var loop, id, sound;\r\n\r\n      // Determine the values for loop and id.\r\n      if (args.length === 0) {\r\n        // Return the grou's loop value.\r\n        return self._loop;\r\n      } else if (args.length === 1) {\r\n        if (typeof args[0] === 'boolean') {\r\n          loop = args[0];\r\n          self._loop = loop;\r\n        } else {\r\n          // Return this sound's loop value.\r\n          sound = self._soundById(parseInt(args[0], 10));\r\n          return sound ? sound._loop : false;\r\n        }\r\n      } else if (args.length === 2) {\r\n        loop = args[0];\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If no id is passed, get all ID's to be looped.\r\n      var ids = self._getSoundIds(id);\r\n      for (var i=0; i<ids.length; i++) {\r\n        sound = self._soundById(ids[i]);\r\n\r\n        if (sound) {\r\n          sound._loop = loop;\r\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n            sound._node.bufferSource.loop = loop;\r\n            if (loop) {\r\n              sound._node.bufferSource.loopStart = sound._start || 0;\r\n              sound._node.bufferSource.loopEnd = sound._stop;\r\n\r\n              // If playing, restart playback to ensure looping updates.\r\n              if (self.playing(ids[i])) {\r\n                self.pause(ids[i], true);\r\n                self.play(ids[i], true);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   rate() -> Returns the first sound node's current playback rate.\r\n     *   rate(id) -> Returns the sound id's current playback rate.\r\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\r\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current playback rate.\r\n     */\r\n    rate: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var rate, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current rate of the first node.\r\n        id = self._sounds[0]._id;\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new rate value.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else {\r\n          rate = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        rate = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // Update the playback rate or return the current value.\r\n      var sound;\r\n      if (typeof rate === 'number') {\r\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\r\n        if (self._state !== 'loaded' || self._playLock) {\r\n          self._queue.push({\r\n            event: 'rate',\r\n            action: function() {\r\n              self.rate.apply(self, args);\r\n            }\r\n          });\r\n\r\n          return self;\r\n        }\r\n\r\n        // Set the group rate.\r\n        if (typeof id === 'undefined') {\r\n          self._rate = rate;\r\n        }\r\n\r\n        // Update one or all volumes.\r\n        id = self._getSoundIds(id);\r\n        for (var i=0; i<id.length; i++) {\r\n          // Get the sound.\r\n          sound = self._soundById(id[i]);\r\n\r\n          if (sound) {\r\n            // Keep track of our position when the rate changed and update the playback\r\n            // start position so we can properly adjust the seek position for time elapsed.\r\n            if (self.playing(id[i])) {\r\n              sound._rateSeek = self.seek(id[i]);\r\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\r\n            }\r\n            sound._rate = rate;\r\n\r\n            // Change the playback rate.\r\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\r\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\r\n            } else if (sound._node) {\r\n              sound._node.playbackRate = rate;\r\n            }\r\n\r\n            // Reset the timers.\r\n            var seek = self.seek(id[i]);\r\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\r\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\r\n\r\n            // Start a new end timer if sound is already playing.\r\n            if (self._endTimers[id[i]] || !sound._paused) {\r\n              self._clearTimer(id[i]);\r\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\r\n            }\r\n\r\n            self._emit('rate', sound._id);\r\n          }\r\n        }\r\n      } else {\r\n        sound = self._soundById(id);\r\n        return sound ? sound._rate : self._rate;\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\r\n     *   seek() -> Returns the first sound node's current seek position.\r\n     *   seek(id) -> Returns the sound id's current seek position.\r\n     *   seek(seek) -> Sets the seek position of the first sound node.\r\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\r\n     * @return {Howl/Number} Returns self or the current seek position.\r\n     */\r\n    seek: function() {\r\n      var self = this;\r\n      var args = arguments;\r\n      var seek, id;\r\n\r\n      // Determine the values based on arguments.\r\n      if (args.length === 0) {\r\n        // We will simply return the current position of the first node.\r\n        if (self._sounds.length) {\r\n          id = self._sounds[0]._id;\r\n        }\r\n      } else if (args.length === 1) {\r\n        // First check if this is an ID, and if not, assume it is a new seek position.\r\n        var ids = self._getSoundIds();\r\n        var index = ids.indexOf(args[0]);\r\n        if (index >= 0) {\r\n          id = parseInt(args[0], 10);\r\n        } else if (self._sounds.length) {\r\n          id = self._sounds[0]._id;\r\n          seek = parseFloat(args[0]);\r\n        }\r\n      } else if (args.length === 2) {\r\n        seek = parseFloat(args[0]);\r\n        id = parseInt(args[1], 10);\r\n      }\r\n\r\n      // If there is no ID, bail out.\r\n      if (typeof id === 'undefined') {\r\n        return 0;\r\n      }\r\n\r\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\r\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\r\n        self._queue.push({\r\n          event: 'seek',\r\n          action: function() {\r\n            self.seek.apply(self, args);\r\n          }\r\n        });\r\n\r\n        return self;\r\n      }\r\n\r\n      // Get the sound.\r\n      var sound = self._soundById(id);\r\n\r\n      if (sound) {\r\n        if (typeof seek === 'number' && seek >= 0) {\r\n          // Pause the sound and update position for restarting playback.\r\n          var playing = self.playing(id);\r\n          if (playing) {\r\n            self.pause(id, true);\r\n          }\r\n\r\n          // Move the position of the track and cancel timer.\r\n          sound._seek = seek;\r\n          sound._ended = false;\r\n          self._clearTimer(id);\r\n\r\n          // Update the seek position for HTML5 Audio.\r\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\r\n            sound._node.currentTime = seek;\r\n          }\r\n\r\n          // Seek and emit when ready.\r\n          var seekAndEmit = function() {\r\n            // Restart the playback if the sound was playing.\r\n            if (playing) {\r\n              self.play(id, true);\r\n            }\r\n\r\n            self._emit('seek', id);\r\n          };\r\n\r\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\r\n          if (playing && !self._webAudio) {\r\n            var emitSeek = function() {\r\n              if (!self._playLock) {\r\n                seekAndEmit();\r\n              } else {\r\n                setTimeout(emitSeek, 0);\r\n              }\r\n            };\r\n            setTimeout(emitSeek, 0);\r\n          } else {\r\n            seekAndEmit();\r\n          }\r\n        } else {\r\n          if (self._webAudio) {\r\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\r\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\r\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\r\n          } else {\r\n            return sound._node.currentTime;\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\r\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\r\n     * @return {Boolean} True if playing and false if not.\r\n     */\r\n    playing: function(id) {\r\n      var self = this;\r\n\r\n      // Check the passed sound ID (if any).\r\n      if (typeof id === 'number') {\r\n        var sound = self._soundById(id);\r\n        return sound ? !sound._paused : false;\r\n      }\r\n\r\n      // Otherwise, loop through all sounds and check if any are playing.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (!self._sounds[i]._paused) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\r\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\r\n     * @return {Number} Audio duration in seconds.\r\n     */\r\n    duration: function(id) {\r\n      var self = this;\r\n      var duration = self._duration;\r\n\r\n      // If we pass an ID, get the sound and return the sprite length.\r\n      var sound = self._soundById(id);\r\n      if (sound) {\r\n        duration = self._sprite[sound._sprite][1] / 1000;\r\n      }\r\n\r\n      return duration;\r\n    },\r\n\r\n    /**\r\n     * Returns the current loaded state of this Howl.\r\n     * @return {String} 'unloaded', 'loading', 'loaded'\r\n     */\r\n    state: function() {\r\n      return this._state;\r\n    },\r\n\r\n    /**\r\n     * Unload and destroy the current Howl object.\r\n     * This will immediately stop all sound instances attached to this group.\r\n     */\r\n    unload: function() {\r\n      var self = this;\r\n\r\n      // Stop playing any active sounds.\r\n      var sounds = self._sounds;\r\n      for (var i=0; i<sounds.length; i++) {\r\n        // Stop the sound if it is currently playing.\r\n        if (!sounds[i]._paused) {\r\n          self.stop(sounds[i]._id);\r\n        }\r\n\r\n        // Remove the source or disconnect.\r\n        if (!self._webAudio) {\r\n          // Set the source to 0-second silence to stop any downloading (except in IE).\r\n          self._clearSound(sounds[i]._node);\r\n\r\n          // Remove any event listeners.\r\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\r\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\r\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\r\n\r\n          // Release the Audio object back to the pool.\r\n          Howler._releaseHtml5Audio(sounds[i]._node);\r\n        }\r\n\r\n        // Empty out all of the nodes.\r\n        delete sounds[i]._node;\r\n\r\n        // Make sure all timers are cleared out.\r\n        self._clearTimer(sounds[i]._id);\r\n      }\r\n\r\n      // Remove the references in the global Howler object.\r\n      var index = Howler._howls.indexOf(self);\r\n      if (index >= 0) {\r\n        Howler._howls.splice(index, 1);\r\n      }\r\n\r\n      // Delete this sound from the cache (if no other Howl is using it).\r\n      var remCache = true;\r\n      for (i=0; i<Howler._howls.length; i++) {\r\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\r\n          remCache = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cache && remCache) {\r\n        delete cache[self._src];\r\n      }\r\n\r\n      // Clear global errors.\r\n      Howler.noAudio = false;\r\n\r\n      // Clear out `self`.\r\n      self._state = 'unloaded';\r\n      self._sounds = [];\r\n      self = null;\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\r\n     * @return {Howl}\r\n     */\r\n    on: function(event, fn, id, once) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      if (typeof fn === 'function') {\r\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Remove a custom event. Call without parameters to remove all events.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\r\n     * @param  {Number}   id    (optional) Only remove events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    off: function(event, fn, id) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n      var i = 0;\r\n\r\n      // Allow passing just an event and ID.\r\n      if (typeof fn === 'number') {\r\n        id = fn;\r\n        fn = null;\r\n      }\r\n\r\n      if (fn || id) {\r\n        // Loop through event store and remove the passed function.\r\n        for (i=0; i<events.length; i++) {\r\n          var isId = (id === events[i].id);\r\n          if (fn === events[i].fn && isId || !fn && isId) {\r\n            events.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      } else if (event) {\r\n        // Clear out all events of this type.\r\n        self['_on' + event] = [];\r\n      } else {\r\n        // Clear out all events of every type.\r\n        var keys = Object.keys(self);\r\n        for (i=0; i<keys.length; i++) {\r\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\r\n            self[keys[i]] = [];\r\n          }\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Listen to a custom event and remove it once fired.\r\n     * @param  {String}   event Event name.\r\n     * @param  {Function} fn    Listener to call.\r\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\r\n     * @return {Howl}\r\n     */\r\n    once: function(event, fn, id) {\r\n      var self = this;\r\n\r\n      // Setup the event listener.\r\n      self.on(event, fn, id, 1);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Emit all events of a specific type and pass the sound id.\r\n     * @param  {String} event Event name.\r\n     * @param  {Number} id    Sound ID.\r\n     * @param  {Number} msg   Message to go with event.\r\n     * @return {Howl}\r\n     */\r\n    _emit: function(event, id, msg) {\r\n      var self = this;\r\n      var events = self['_on' + event];\r\n\r\n      // Loop through event store and fire all functions.\r\n      for (var i=events.length-1; i>=0; i--) {\r\n        // Only fire the listener if the correct ID is used.\r\n        if (!events[i].id || events[i].id === id || event === 'load') {\r\n          setTimeout(function(fn) {\r\n            fn.call(this, id, msg);\r\n          }.bind(self, events[i].fn), 0);\r\n\r\n          // If this event was setup with `once`, remove it.\r\n          if (events[i].once) {\r\n            self.off(event, events[i].fn, events[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Pass the event type into load queue so that it can continue stepping.\r\n      self._loadQueue(event);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Queue of actions initiated before the sound has loaded.\r\n     * These will be called in sequence, with the next only firing\r\n     * after the previous has finished executing (even if async like play).\r\n     * @return {Howl}\r\n     */\r\n    _loadQueue: function(event) {\r\n      var self = this;\r\n\r\n      if (self._queue.length > 0) {\r\n        var task = self._queue[0];\r\n\r\n        // Remove this task if a matching event was passed.\r\n        if (task.event === event) {\r\n          self._queue.shift();\r\n          self._loadQueue();\r\n        }\r\n\r\n        // Run the task if no event type is passed.\r\n        if (!event) {\r\n          task.action();\r\n        }\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Fired when playback ends at the end of the duration.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _ended: function(sound) {\r\n      var self = this;\r\n      var sprite = sound._sprite;\r\n\r\n      // If we are using IE and there was network latency we may be clipping\r\n      // audio before it completes playing. Lets check the node to make sure it\r\n      // believes it has completed, before ending the playback.\r\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\r\n        setTimeout(self._ended.bind(self, sound), 100);\r\n        return self;\r\n      }\r\n\r\n      // Should this sound loop?\r\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\r\n\r\n      // Fire the ended event.\r\n      self._emit('end', sound._id);\r\n\r\n      // Restart the playback for HTML5 Audio loop.\r\n      if (!self._webAudio && loop) {\r\n        self.stop(sound._id, true).play(sound._id);\r\n      }\r\n\r\n      // Restart this timer if on a Web Audio loop.\r\n      if (self._webAudio && loop) {\r\n        self._emit('play', sound._id);\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        sound._playStart = Howler.ctx.currentTime;\r\n\r\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\r\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\r\n      }\r\n\r\n      // Mark the node as paused.\r\n      if (self._webAudio && !loop) {\r\n        sound._paused = true;\r\n        sound._ended = true;\r\n        sound._seek = sound._start || 0;\r\n        sound._rateSeek = 0;\r\n        self._clearTimer(sound._id);\r\n\r\n        // Clean up the buffer source.\r\n        self._cleanBuffer(sound._node);\r\n\r\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\r\n        Howler._autoSuspend();\r\n      }\r\n\r\n      // When using a sprite, end the track.\r\n      if (!self._webAudio && !loop) {\r\n        self.stop(sound._id, true);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Clear the end timer for a sound playback.\r\n     * @param  {Number} id The sound ID.\r\n     * @return {Howl}\r\n     */\r\n    _clearTimer: function(id) {\r\n      var self = this;\r\n\r\n      if (self._endTimers[id]) {\r\n        // Clear the timeout or remove the ended listener.\r\n        if (typeof self._endTimers[id] !== 'function') {\r\n          clearTimeout(self._endTimers[id]);\r\n        } else {\r\n          var sound = self._soundById(id);\r\n          if (sound && sound._node) {\r\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\r\n          }\r\n        }\r\n\r\n        delete self._endTimers[id];\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Return the sound identified by this ID, or return null.\r\n     * @param  {Number} id Sound ID\r\n     * @return {Object}    Sound object or null.\r\n     */\r\n    _soundById: function(id) {\r\n      var self = this;\r\n\r\n      // Loop through all sounds and find the one with this ID.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (id === self._sounds[i]._id) {\r\n          return self._sounds[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Return an inactive sound from the pool or create a new one.\r\n     * @return {Sound} Sound playback object.\r\n     */\r\n    _inactiveSound: function() {\r\n      var self = this;\r\n\r\n      self._drain();\r\n\r\n      // Find the first inactive node to recycle.\r\n      for (var i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          return self._sounds[i].reset();\r\n        }\r\n      }\r\n\r\n      // If no inactive node was found, create a new one.\r\n      return new Sound(self);\r\n    },\r\n\r\n    /**\r\n     * Drain excess inactive sounds from the pool.\r\n     */\r\n    _drain: function() {\r\n      var self = this;\r\n      var limit = self._pool;\r\n      var cnt = 0;\r\n      var i = 0;\r\n\r\n      // If there are less sounds than the max pool size, we are done.\r\n      if (self._sounds.length < limit) {\r\n        return;\r\n      }\r\n\r\n      // Count the number of inactive sounds.\r\n      for (i=0; i<self._sounds.length; i++) {\r\n        if (self._sounds[i]._ended) {\r\n          cnt++;\r\n        }\r\n      }\r\n\r\n      // Remove excess inactive sounds, going in reverse order.\r\n      for (i=self._sounds.length - 1; i>=0; i--) {\r\n        if (cnt <= limit) {\r\n          return;\r\n        }\r\n\r\n        if (self._sounds[i]._ended) {\r\n          // Disconnect the audio source when using Web Audio.\r\n          if (self._webAudio && self._sounds[i]._node) {\r\n            self._sounds[i]._node.disconnect(0);\r\n          }\r\n\r\n          // Remove sounds until we have the pool size.\r\n          self._sounds.splice(i, 1);\r\n          cnt--;\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get all ID's from the sounds pool.\r\n     * @param  {Number} id Only return one ID if one is passed.\r\n     * @return {Array}    Array of IDs.\r\n     */\r\n    _getSoundIds: function(id) {\r\n      var self = this;\r\n\r\n      if (typeof id === 'undefined') {\r\n        var ids = [];\r\n        for (var i=0; i<self._sounds.length; i++) {\r\n          ids.push(self._sounds[i]._id);\r\n        }\r\n\r\n        return ids;\r\n      } else {\r\n        return [id];\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Load the sound back into the buffer source.\r\n     * @param  {Sound} sound The sound object to work with.\r\n     * @return {Howl}\r\n     */\r\n    _refreshBuffer: function(sound) {\r\n      var self = this;\r\n\r\n      // Setup the buffer source for playback.\r\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\r\n      sound._node.bufferSource.buffer = cache[self._src];\r\n\r\n      // Connect to the correct node.\r\n      if (sound._panner) {\r\n        sound._node.bufferSource.connect(sound._panner);\r\n      } else {\r\n        sound._node.bufferSource.connect(sound._node);\r\n      }\r\n\r\n      // Setup looping and playback rate.\r\n      sound._node.bufferSource.loop = sound._loop;\r\n      if (sound._loop) {\r\n        sound._node.bufferSource.loopStart = sound._start || 0;\r\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\r\n      }\r\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Prevent memory leaks by cleaning up the buffer source after playback.\r\n     * @param  {Object} node Sound's audio node containing the buffer source.\r\n     * @return {Howl}\r\n     */\r\n    _cleanBuffer: function(node) {\r\n      var self = this;\r\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\r\n\r\n      if (!node.bufferSource) {\r\n        return self;\r\n      }\r\n\r\n      if (Howler._scratchBuffer && node.bufferSource) {\r\n        node.bufferSource.onended = null;\r\n        node.bufferSource.disconnect(0);\r\n        if (isIOS) {\r\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\r\n        }\r\n      }\r\n      node.bufferSource = null;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\r\n     * @param  {Object} node Audio node to clear.\r\n     */\r\n    _clearSound: function(node) {\r\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\r\n      if (!checkIE) {\r\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\r\n      }\r\n    }\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Setup the sound object, which each node attached to a Howl group is contained in.\r\n   * @param {Object} howl The Howl parent group.\r\n   */\r\n  var Sound = function(howl) {\r\n    this._parent = howl;\r\n    this.init();\r\n  };\r\n  Sound.prototype = {\r\n    /**\r\n     * Initialize a new Sound object.\r\n     * @return {Sound}\r\n     */\r\n    init: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup the default parameters.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a unique ID for this sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      // Add itself to the parent's pool.\r\n      parent._sounds.push(self);\r\n\r\n      // Create the new node.\r\n      self.create();\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\r\n     * @return {Sound}\r\n     */\r\n    create: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\r\n\r\n      if (parent._webAudio) {\r\n        // Create the gain node for controlling volume (the source will connect to this).\r\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\r\n        self._node.paused = true;\r\n        self._node.connect(Howler.masterGain);\r\n      } else if (!Howler.noAudio) {\r\n        // Get an unlocked Audio object from the pool.\r\n        self._node = Howler._obtainHtml5Audio();\r\n\r\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\r\n        self._errorFn = self._errorListener.bind(self);\r\n        self._node.addEventListener('error', self._errorFn, false);\r\n\r\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\r\n        self._loadFn = self._loadListener.bind(self);\r\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n\r\n        // Listen for the 'ended' event on the sound to account for edge-case where\r\n        // a finite sound has a duration of Infinity.\r\n        self._endFn = self._endListener.bind(self);\r\n        self._node.addEventListener('ended', self._endFn, false);\r\n\r\n        // Setup the new audio node.\r\n        self._node.src = parent._src;\r\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\r\n        self._node.volume = volume * Howler.volume();\r\n\r\n        // Begin loading the source.\r\n        self._node.load();\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * Reset the parameters of this sound to the original state (for recycle).\r\n     * @return {Sound}\r\n     */\r\n    reset: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all of the parameters of this sound.\r\n      self._muted = parent._muted;\r\n      self._loop = parent._loop;\r\n      self._volume = parent._volume;\r\n      self._rate = parent._rate;\r\n      self._seek = 0;\r\n      self._rateSeek = 0;\r\n      self._paused = true;\r\n      self._ended = true;\r\n      self._sprite = '__default';\r\n\r\n      // Generate a new ID so that it isn't confused with the previous sound.\r\n      self._id = ++Howler._counter;\r\n\r\n      return self;\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio error listener callback.\r\n     */\r\n    _errorListener: function() {\r\n      var self = this;\r\n\r\n      // Fire an error event and pass back the code.\r\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener('error', self._errorFn, false);\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio canplaythrough listener callback.\r\n     */\r\n    _loadListener: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Round up the duration to account for the lower precision in HTML5 Audio.\r\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n      // Setup a sprite if none is defined.\r\n      if (Object.keys(parent._sprite).length === 0) {\r\n        parent._sprite = {__default: [0, parent._duration * 1000]};\r\n      }\r\n\r\n      if (parent._state !== 'loaded') {\r\n        parent._state = 'loaded';\r\n        parent._emit('load');\r\n        parent._loadQueue();\r\n      }\r\n\r\n      // Clear the event listener.\r\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\r\n    },\r\n\r\n    /**\r\n     * HTML5 Audio ended listener callback.\r\n     */\r\n    _endListener: function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Only handle the `ended`` event if the duration is Infinity.\r\n      if (parent._duration === Infinity) {\r\n        // Update the parent duration to match the real audio duration.\r\n        // Round up the duration to account for the lower precision in HTML5 Audio.\r\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\r\n\r\n        // Update the sprite that corresponds to the real duration.\r\n        if (parent._sprite.__default[1] === Infinity) {\r\n          parent._sprite.__default[1] = parent._duration * 1000;\r\n        }\r\n\r\n        // Run the regular ended method.\r\n        parent._ended(self);\r\n      }\r\n\r\n      // Clear the event listener since the duration is now correct.\r\n      self._node.removeEventListener('ended', self._endFn, false);\r\n    }\r\n  };\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  var cache = {};\r\n\r\n  /**\r\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\r\n   * @param  {Howl} self\r\n   */\r\n  var loadBuffer = function(self) {\r\n    var url = self._src;\r\n\r\n    // Check if the buffer has already been cached and use it instead.\r\n    if (cache[url]) {\r\n      // Set the duration from the cache.\r\n      self._duration = cache[url].duration;\r\n\r\n      // Load the sound into this Howl.\r\n      loadSound(self);\r\n\r\n      return;\r\n    }\r\n\r\n    if (/^data:[^;]+;base64,/.test(url)) {\r\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\r\n      var data = atob(url.split(',')[1]);\r\n      var dataView = new Uint8Array(data.length);\r\n      for (var i=0; i<data.length; ++i) {\r\n        dataView[i] = data.charCodeAt(i);\r\n      }\r\n\r\n      decodeAudioData(dataView.buffer, self);\r\n    } else {\r\n      // Load the buffer from the URL.\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(self._xhr.method, url, true);\r\n      xhr.withCredentials = self._xhr.withCredentials;\r\n      xhr.responseType = 'arraybuffer';\r\n\r\n      // Apply any custom headers to the request.\r\n      if (self._xhr.headers) {\r\n        Object.keys(self._xhr.headers).forEach(function(key) {\r\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\r\n        });\r\n      }\r\n\r\n      xhr.onload = function() {\r\n        // Make sure we get a successful response back.\r\n        var code = (xhr.status + '')[0];\r\n        if (code !== '0' && code !== '2' && code !== '3') {\r\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\r\n          return;\r\n        }\r\n\r\n        decodeAudioData(xhr.response, self);\r\n      };\r\n      xhr.onerror = function() {\r\n        // If there is an error, switch to HTML5 Audio.\r\n        if (self._webAudio) {\r\n          self._html5 = true;\r\n          self._webAudio = false;\r\n          self._sounds = [];\r\n          delete cache[url];\r\n          self.load();\r\n        }\r\n      };\r\n      safeXhrSend(xhr);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Send the XHR request wrapped in a try/catch.\r\n   * @param  {Object} xhr XHR to send.\r\n   */\r\n  var safeXhrSend = function(xhr) {\r\n    try {\r\n      xhr.send();\r\n    } catch (e) {\r\n      xhr.onerror();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Decode audio data from an array buffer.\r\n   * @param  {ArrayBuffer} arraybuffer The audio data.\r\n   * @param  {Howl}        self\r\n   */\r\n  var decodeAudioData = function(arraybuffer, self) {\r\n    // Fire a load error if something broke.\r\n    var error = function() {\r\n      self._emit('loaderror', null, 'Decoding audio data failed.');\r\n    };\r\n\r\n    // Load the sound on success.\r\n    var success = function(buffer) {\r\n      if (buffer && self._sounds.length > 0) {\r\n        cache[self._src] = buffer;\r\n        loadSound(self, buffer);\r\n      } else {\r\n        error();\r\n      }\r\n    };\r\n\r\n    // Decode the buffer into an audio source.\r\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\r\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\r\n    } else {\r\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\r\n   * @param  {Howl} self\r\n   * @param  {Object} buffer The decoded buffer sound source.\r\n   */\r\n  var loadSound = function(self, buffer) {\r\n    // Set the duration.\r\n    if (buffer && !self._duration) {\r\n      self._duration = buffer.duration;\r\n    }\r\n\r\n    // Setup a sprite if none is defined.\r\n    if (Object.keys(self._sprite).length === 0) {\r\n      self._sprite = {__default: [0, self._duration * 1000]};\r\n    }\r\n\r\n    // Fire the loaded event.\r\n    if (self._state !== 'loaded') {\r\n      self._state = 'loaded';\r\n      self._emit('load');\r\n      self._loadQueue();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\r\n   */\r\n  var setupAudioContext = function() {\r\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\r\n    if (!Howler.usingWebAudio) {\r\n      return;\r\n    }\r\n\r\n    // Check if we are using Web Audio and setup the AudioContext if we are.\r\n    try {\r\n      if (typeof AudioContext !== 'undefined') {\r\n        Howler.ctx = new AudioContext();\r\n      } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Howler.ctx = new webkitAudioContext();\r\n      } else {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    } catch(e) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // If the audio context creation still failed, set using web audio to false.\r\n    if (!Howler.ctx) {\r\n      Howler.usingWebAudio = false;\r\n    }\r\n\r\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\r\n    // If it is, disable Web Audio as it causes crashing.\r\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\r\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\r\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\r\n    if (iOS && version && version < 9) {\r\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\r\n      if (Howler._navigator && !safari) {\r\n        Howler.usingWebAudio = false;\r\n      }\r\n    }\r\n\r\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\r\n    if (Howler.usingWebAudio) {\r\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\r\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\r\n      Howler.masterGain.connect(Howler.ctx.destination);\r\n    }\r\n\r\n    // Re-run the setup on Howler.\r\n    Howler._setup();\r\n  };\r\n\r\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define([], function() {\r\n      return {\r\n        Howler: Howler,\r\n        Howl: Howl\r\n      };\r\n    });\r\n  }\r\n\r\n  // Add support for CommonJS libraries such as browserify.\r\n  if (typeof exports !== 'undefined') {\r\n    exports.Howler = Howler;\r\n    exports.Howl = Howl;\r\n  }\r\n\r\n  // Add to global in Node.js (for testing, etc).\r\n  if (typeof global !== 'undefined') {\r\n    global.HowlerGlobal = HowlerGlobal;\r\n    global.Howler = Howler;\r\n    global.Howl = Howl;\r\n    global.Sound = Sound;\r\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\r\n    window.HowlerGlobal = HowlerGlobal;\r\n    window.Howler = Howler;\r\n    window.Howl = Howl;\r\n    window.Sound = Sound;\r\n  }\r\n})();\r\n\r\n\r\n/*!\r\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\r\n *  \r\n *  howler.js v2.2.4\r\n *  howlerjs.com\r\n *\r\n *  (c) 2013-2020, James Simpson of GoldFire Studios\r\n *  goldfirestudios.com\r\n *\r\n *  MIT License\r\n */\r\n\r\n(function() {\r\n\r\n  'use strict';\r\n\r\n  // Setup default properties.\r\n  HowlerGlobal.prototype._pos = [0, 0, 0];\r\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\r\n\r\n  /** Global Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Helper method to update the stereo panning position of all current Howls.\r\n   * Future Howls will not use this value unless explicitly set.\r\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @return {Howler/Number}     Self or current stereo panning value.\r\n   */\r\n  HowlerGlobal.prototype.stereo = function(pan) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Loop through all Howls and update their stereo panning.\r\n    for (var i=self._howls.length-1; i>=0; i--) {\r\n      self._howls[i].stereo(pan);\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\r\n   * 3D position will be relative to the listener's position.\r\n   * @param  {Number} x The x-position of the listener.\r\n   * @param  {Number} y The y-position of the listener.\r\n   * @param  {Number} z The z-position of the listener.\r\n   * @return {Howler/Array}   Self or current listener position.\r\n   */\r\n  HowlerGlobal.prototype.pos = function(x, y, z) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._pos[1] : y;\r\n    z = (typeof z !== 'number') ? self._pos[2] : z;\r\n\r\n    if (typeof x === 'number') {\r\n      self._pos = [x, y, z];\r\n\r\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\r\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\r\n      }\r\n    } else {\r\n      return self._pos;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\r\n   * A front and up vector must be provided. The front is the direction the\r\n   * face of the listener is pointing, and up is the direction the top of the\r\n   * listener is pointing. Thus, these values are expected to be at right angles\r\n   * from each other.\r\n   * @param  {Number} x   The x-orientation of the listener.\r\n   * @param  {Number} y   The y-orientation of the listener.\r\n   * @param  {Number} z   The z-orientation of the listener.\r\n   * @param  {Number} xUp The x-orientation of the top of the listener.\r\n   * @param  {Number} yUp The y-orientation of the top of the listener.\r\n   * @param  {Number} zUp The z-orientation of the top of the listener.\r\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\r\n   */\r\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self.ctx || !self.ctx.listener) {\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    var or = self._orientation;\r\n    y = (typeof y !== 'number') ? or[1] : y;\r\n    z = (typeof z !== 'number') ? or[2] : z;\r\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\r\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\r\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\r\n\r\n    if (typeof x === 'number') {\r\n      self._orientation = [x, y, z, xUp, yUp, zUp];\r\n\r\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\r\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\r\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\r\n      } else {\r\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\r\n      }\r\n    } else {\r\n      return or;\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Group Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core init.\r\n   * @param  {Function} _super Core init method.\r\n   * @return {Howl}\r\n   */\r\n  Howl.prototype.init = (function(_super) {\r\n    return function(o) {\r\n      var self = this;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = o.orientation || [1, 0, 0];\r\n      self._stereo = o.stereo || null;\r\n      self._pos = o.pos || null;\r\n      self._pannerAttr = {\r\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\r\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\r\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\r\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\r\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\r\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\r\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\r\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\r\n      };\r\n\r\n      // Setup event listeners.\r\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\r\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\r\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\r\n\r\n      // Complete initilization with howler.js core's init function.\r\n      return _super.call(this, o);\r\n    };\r\n  })(Howl.prototype.init);\r\n\r\n  /**\r\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\r\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\r\n   */\r\n  Howl.prototype.stereo = function(pan, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'stereo',\r\n        action: function() {\r\n          self.stereo(pan, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\r\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\r\n\r\n    // Setup the group's stereo panning if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's stereo panning if no parameters are passed.\r\n      if (typeof pan === 'number') {\r\n        self._stereo = pan;\r\n        self._pos = [pan, 0, 0];\r\n      } else {\r\n        return self._stereo;\r\n      }\r\n    }\r\n\r\n    // Change the streo panning of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof pan === 'number') {\r\n          sound._stereo = pan;\r\n          sound._pos = [pan, 0, 0];\r\n\r\n          if (sound._node) {\r\n            // If we are falling back, make sure the panningModel is equalpower.\r\n            sound._pannerAttr.panningModel = 'equalpower';\r\n\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || !sound._panner.pan) {\r\n              setupPanner(sound, pannerType);\r\n            }\r\n\r\n            if (pannerType === 'spatial') {\r\n              if (typeof sound._panner.positionX !== 'undefined') {\r\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\r\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\r\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\r\n              } else {\r\n                sound._panner.setPosition(pan, 0, 0);\r\n              }\r\n            } else {\r\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\r\n            }\r\n          }\r\n\r\n          self._emit('stereo', sound._id);\r\n        } else {\r\n          return sound._stereo;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\r\n   * @param  {Number} x  The x-position of the audio source.\r\n   * @param  {Number} y  The y-position of the audio source.\r\n   * @param  {Number} z  The z-position of the audio source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\r\n   */\r\n  Howl.prototype.pos = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'pos',\r\n        action: function() {\r\n          self.pos(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? 0 : y;\r\n    z = (typeof z !== 'number') ? -0.5 : z;\r\n\r\n    // Setup the group's spatial position if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial position if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._pos = [x, y, z];\r\n      } else {\r\n        return self._pos;\r\n      }\r\n    }\r\n\r\n    // Change the spatial position of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._pos = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner || sound._panner.pan) {\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.positionX !== 'undefined') {\r\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setPosition(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('pos', sound._id);\r\n        } else {\r\n          return sound._pos;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\r\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\r\n   * a sound pointing away from the listener can be quiet or silent.\r\n   * @param  {Number} x  The x-orientation of the source.\r\n   * @param  {Number} y  The y-orientation of the source.\r\n   * @param  {Number} z  The z-orientation of the source.\r\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\r\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\r\n   */\r\n  Howl.prototype.orientation = function(x, y, z, id) {\r\n    var self = this;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\r\n    if (self._state !== 'loaded') {\r\n      self._queue.push({\r\n        event: 'orientation',\r\n        action: function() {\r\n          self.orientation(x, y, z, id);\r\n        }\r\n      });\r\n\r\n      return self;\r\n    }\r\n\r\n    // Set the defaults for optional 'y' & 'z'.\r\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\r\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\r\n\r\n    // Setup the group's spatial orientation if no ID is passed.\r\n    if (typeof id === 'undefined') {\r\n      // Return the group's spatial orientation if no parameters are passed.\r\n      if (typeof x === 'number') {\r\n        self._orientation = [x, y, z];\r\n      } else {\r\n        return self._orientation;\r\n      }\r\n    }\r\n\r\n    // Change the spatial orientation of one or all sounds in group.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      // Get the sound.\r\n      var sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        if (typeof x === 'number') {\r\n          sound._orientation = [x, y, z];\r\n\r\n          if (sound._node) {\r\n            // Check if there is a panner setup and create a new one if not.\r\n            if (!sound._panner) {\r\n              // Make sure we have a position to setup the node with.\r\n              if (!sound._pos) {\r\n                sound._pos = self._pos || [0, 0, -0.5];\r\n              }\r\n\r\n              setupPanner(sound, 'spatial');\r\n            }\r\n\r\n            if (typeof sound._panner.orientationX !== 'undefined') {\r\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\r\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\r\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\r\n            } else {\r\n              sound._panner.setOrientation(x, y, z);\r\n            }\r\n          }\r\n\r\n          self._emit('orientation', sound._id);\r\n        } else {\r\n          return sound._orientation;\r\n        }\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /**\r\n   * Get/set the panner node's attributes for a sound or group of sounds.\r\n   * This method can optionall take 0, 1 or 2 arguments.\r\n   *   pannerAttr() -> Returns the group's values.\r\n   *   pannerAttr(id) -> Returns the sound id's values.\r\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\r\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\r\n   *\r\n   *   Attributes:\r\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      inside of which there will be no volume reduction.\r\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\r\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\r\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\r\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\r\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\r\n   *                     listener. Can be `linear`, `inverse` or `exponential.\r\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\r\n   *                   will not be reduced any further.\r\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\r\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\r\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\r\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\r\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, \u221E]`\r\n   *                     with `inverse` and `exponential`.\r\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\r\n   *                     Can be `HRTF` or `equalpower`.\r\n   *\r\n   * @return {Howl/Object} Returns self or current panner attributes.\r\n   */\r\n  Howl.prototype.pannerAttr = function() {\r\n    var self = this;\r\n    var args = arguments;\r\n    var o, id, sound;\r\n\r\n    // Stop right here if not using Web Audio.\r\n    if (!self._webAudio) {\r\n      return self;\r\n    }\r\n\r\n    // Determine the values based on arguments.\r\n    if (args.length === 0) {\r\n      // Return the group's panner attribute values.\r\n      return self._pannerAttr;\r\n    } else if (args.length === 1) {\r\n      if (typeof args[0] === 'object') {\r\n        o = args[0];\r\n\r\n        // Set the grou's panner attribute values.\r\n        if (typeof id === 'undefined') {\r\n          if (!o.pannerAttr) {\r\n            o.pannerAttr = {\r\n              coneInnerAngle: o.coneInnerAngle,\r\n              coneOuterAngle: o.coneOuterAngle,\r\n              coneOuterGain: o.coneOuterGain,\r\n              distanceModel: o.distanceModel,\r\n              maxDistance: o.maxDistance,\r\n              refDistance: o.refDistance,\r\n              rolloffFactor: o.rolloffFactor,\r\n              panningModel: o.panningModel\r\n            };\r\n          }\r\n\r\n          self._pannerAttr = {\r\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\r\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\r\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\r\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\r\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\r\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\r\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\r\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\r\n          };\r\n        }\r\n      } else {\r\n        // Return this sound's panner attribute values.\r\n        sound = self._soundById(parseInt(args[0], 10));\r\n        return sound ? sound._pannerAttr : self._pannerAttr;\r\n      }\r\n    } else if (args.length === 2) {\r\n      o = args[0];\r\n      id = parseInt(args[1], 10);\r\n    }\r\n\r\n    // Update the values of the specified sounds.\r\n    var ids = self._getSoundIds(id);\r\n    for (var i=0; i<ids.length; i++) {\r\n      sound = self._soundById(ids[i]);\r\n\r\n      if (sound) {\r\n        // Merge the new values into the sound.\r\n        var pa = sound._pannerAttr;\r\n        pa = {\r\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\r\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\r\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\r\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\r\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\r\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\r\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\r\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\r\n        };\r\n\r\n        // Create a new panner node if one doesn't already exist.\r\n        var panner = sound._panner;\r\n        if (!panner) {\r\n          // Make sure we have a position to setup the node with.\r\n          if (!sound._pos) {\r\n            sound._pos = self._pos || [0, 0, -0.5];\r\n          }\r\n\r\n          // Create a new panner node.\r\n          setupPanner(sound, 'spatial');\r\n          panner = sound._panner\r\n        }\r\n\r\n        // Update the panner values or create a new panner if none exists.\r\n        panner.coneInnerAngle = pa.coneInnerAngle;\r\n        panner.coneOuterAngle = pa.coneOuterAngle;\r\n        panner.coneOuterGain = pa.coneOuterGain;\r\n        panner.distanceModel = pa.distanceModel;\r\n        panner.maxDistance = pa.maxDistance;\r\n        panner.refDistance = pa.refDistance;\r\n        panner.rolloffFactor = pa.rolloffFactor;\r\n        panner.panningModel = pa.panningModel;\r\n      }\r\n    }\r\n\r\n    return self;\r\n  };\r\n\r\n  /** Single Sound Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Add new properties to the core Sound init.\r\n   * @param  {Function} _super Core Sound init method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.init = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Setup user-defined default properties.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // Complete initilization with howler.js core Sound's init function.\r\n      _super.call(this);\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      }\r\n    };\r\n  })(Sound.prototype.init);\r\n\r\n  /**\r\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\r\n   * @param  {Function} _super Sound reset method.\r\n   * @return {Sound}\r\n   */\r\n  Sound.prototype.reset = (function(_super) {\r\n    return function() {\r\n      var self = this;\r\n      var parent = self._parent;\r\n\r\n      // Reset all spatial plugin properties on this sound.\r\n      self._orientation = parent._orientation;\r\n      self._stereo = parent._stereo;\r\n      self._pos = parent._pos;\r\n      self._pannerAttr = parent._pannerAttr;\r\n\r\n      // If a stereo or position was specified, set it up.\r\n      if (self._stereo) {\r\n        parent.stereo(self._stereo);\r\n      } else if (self._pos) {\r\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\r\n      } else if (self._panner) {\r\n        // Disconnect the panner.\r\n        self._panner.disconnect(0);\r\n        self._panner = undefined;\r\n        parent._refreshBuffer(self);\r\n      }\r\n\r\n      // Complete resetting of the sound.\r\n      return _super.call(this);\r\n    };\r\n  })(Sound.prototype.reset);\r\n\r\n  /** Helper Methods **/\r\n  /***************************************************************************/\r\n\r\n  /**\r\n   * Create a new panner node and save it on the sound.\r\n   * @param  {Sound} sound Specific sound to setup panning on.\r\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\r\n   */\r\n  var setupPanner = function(sound, type) {\r\n    type = type || 'spatial';\r\n\r\n    // Create the new panner node.\r\n    if (type === 'spatial') {\r\n      sound._panner = Howler.ctx.createPanner();\r\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\r\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\r\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\r\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\r\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\r\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\r\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\r\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\r\n\r\n      if (typeof sound._panner.positionX !== 'undefined') {\r\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\r\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\r\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\r\n      }\r\n\r\n      if (typeof sound._panner.orientationX !== 'undefined') {\r\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\r\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\r\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\r\n      } else {\r\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\r\n      }\r\n    } else {\r\n      sound._panner = Howler.ctx.createStereoPanner();\r\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\r\n    }\r\n\r\n    sound._panner.connect(sound._node);\r\n\r\n    // Update the connections.\r\n    if (!sound._paused) {\r\n      sound._parent.pause(sound._id, true).play(sound._id, true);\r\n    }\r\n  };\r\n})();\r\n", "'use strict';\r\n\r\nmodule.exports = earcut;\r\nmodule.exports.default = earcut;\r\n\r\nfunction earcut(data, holeIndices, dim) {\r\n\r\n    dim = dim || 2;\r\n\r\n    var hasHoles = holeIndices && holeIndices.length,\r\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\r\n        outerNode = linkedList(data, 0, outerLen, dim, true),\r\n        triangles = [];\r\n\r\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\r\n\r\n    var minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n    if (data.length > 80 * dim) {\r\n        minX = maxX = data[0];\r\n        minY = maxY = data[1];\r\n\r\n        for (var i = dim; i < outerLen; i += dim) {\r\n            x = data[i];\r\n            y = data[i + 1];\r\n            if (x < minX) minX = x;\r\n            if (y < minY) minY = y;\r\n            if (x > maxX) maxX = x;\r\n            if (y > maxY) maxY = y;\r\n        }\r\n\r\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n        invSize = Math.max(maxX - minX, maxY - minY);\r\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\r\n    }\r\n\r\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\r\n\r\n    return triangles;\r\n}\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\nfunction linkedList(data, start, end, dim, clockwise) {\r\n    var i, last;\r\n\r\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\r\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    } else {\r\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    }\r\n\r\n    if (last && equals(last, last.next)) {\r\n        removeNode(last);\r\n        last = last.next;\r\n    }\r\n\r\n    return last;\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\nfunction filterPoints(start, end) {\r\n    if (!start) return start;\r\n    if (!end) end = start;\r\n\r\n    var p = start,\r\n        again;\r\n    do {\r\n        again = false;\r\n\r\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\r\n            removeNode(p);\r\n            p = end = p.prev;\r\n            if (p === p.next) break;\r\n            again = true;\r\n\r\n        } else {\r\n            p = p.next;\r\n        }\r\n    } while (again || p !== end);\r\n\r\n    return end;\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\r\n    if (!ear) return;\r\n\r\n    // interlink polygon nodes in z-order\r\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\r\n\r\n    var stop = ear,\r\n        prev, next;\r\n\r\n    // iterate through ears, slicing them one by one\r\n    while (ear.prev !== ear.next) {\r\n        prev = ear.prev;\r\n        next = ear.next;\r\n\r\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\r\n            // cut off the triangle\r\n            triangles.push(prev.i / dim | 0);\r\n            triangles.push(ear.i / dim | 0);\r\n            triangles.push(next.i / dim | 0);\r\n\r\n            removeNode(ear);\r\n\r\n            // skipping the next vertex leads to less sliver triangles\r\n            ear = next.next;\r\n            stop = next.next;\r\n\r\n            continue;\r\n        }\r\n\r\n        ear = next;\r\n\r\n        // if we looped through the whole remaining polygon and can't find any more ears\r\n        if (ear === stop) {\r\n            // try filtering points and slicing again\r\n            if (!pass) {\r\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\r\n\r\n            // if this didn't work, try curing all small self-intersections locally\r\n            } else if (pass === 1) {\r\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\r\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\r\n\r\n            // as a last resort, try splitting the remaining polygon into two\r\n            } else if (pass === 2) {\r\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\nfunction isEar(ear) {\r\n    var a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n    // now make sure we don't have other points inside the potential ear\r\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\r\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\r\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\r\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\r\n\r\n    var p = c.next;\r\n    while (p !== a) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\r\n            area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.next;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isEarHashed(ear, minX, minY, invSize) {\r\n    var a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\r\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\r\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\r\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\r\n\r\n    // z-order range for the current triangle bbox;\r\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\r\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\r\n\r\n    var p = ear.prevZ,\r\n        n = ear.nextZ;\r\n\r\n    // look for points inside the triangle in both directions\r\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.prevZ;\r\n\r\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n        n = n.nextZ;\r\n    }\r\n\r\n    // look for remaining points in decreasing z-order\r\n    while (p && p.z >= minZ) {\r\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\r\n        p = p.prevZ;\r\n    }\r\n\r\n    // look for remaining points in increasing z-order\r\n    while (n && n.z <= maxZ) {\r\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\r\n        n = n.nextZ;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\nfunction cureLocalIntersections(start, triangles, dim) {\r\n    var p = start;\r\n    do {\r\n        var a = p.prev,\r\n            b = p.next.next;\r\n\r\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\r\n\r\n            triangles.push(a.i / dim | 0);\r\n            triangles.push(p.i / dim | 0);\r\n            triangles.push(b.i / dim | 0);\r\n\r\n            // remove two nodes involved\r\n            removeNode(p);\r\n            removeNode(p.next);\r\n\r\n            p = start = b;\r\n        }\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    return filterPoints(p);\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\r\n    // look for a valid diagonal that divides the polygon into two\r\n    var a = start;\r\n    do {\r\n        var b = a.next.next;\r\n        while (b !== a.prev) {\r\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\r\n                // split the polygon in two by the diagonal\r\n                var c = splitPolygon(a, b);\r\n\r\n                // filter colinear points around the cuts\r\n                a = filterPoints(a, a.next);\r\n                c = filterPoints(c, c.next);\r\n\r\n                // run earcut on each half\r\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\r\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\r\n                return;\r\n            }\r\n            b = b.next;\r\n        }\r\n        a = a.next;\r\n    } while (a !== start);\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\r\n    var queue = [],\r\n        i, len, start, end, list;\r\n\r\n    for (i = 0, len = holeIndices.length; i < len; i++) {\r\n        start = holeIndices[i] * dim;\r\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n        list = linkedList(data, start, end, dim, false);\r\n        if (list === list.next) list.steiner = true;\r\n        queue.push(getLeftmost(list));\r\n    }\r\n\r\n    queue.sort(compareX);\r\n\r\n    // process holes from left to right\r\n    for (i = 0; i < queue.length; i++) {\r\n        outerNode = eliminateHole(queue[i], outerNode);\r\n    }\r\n\r\n    return outerNode;\r\n}\r\n\r\nfunction compareX(a, b) {\r\n    return a.x - b.x;\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and and link it\r\nfunction eliminateHole(hole, outerNode) {\r\n    var bridge = findHoleBridge(hole, outerNode);\r\n    if (!bridge) {\r\n        return outerNode;\r\n    }\r\n\r\n    var bridgeReverse = splitPolygon(bridge, hole);\r\n\r\n    // filter collinear points around the cuts\r\n    filterPoints(bridgeReverse, bridgeReverse.next);\r\n    return filterPoints(bridge, bridge.next);\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\nfunction findHoleBridge(hole, outerNode) {\r\n    var p = outerNode,\r\n        hx = hole.x,\r\n        hy = hole.y,\r\n        qx = -Infinity,\r\n        m;\r\n\r\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n    // segment's endpoint with lesser x will be potential connection point\r\n    do {\r\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n            if (x <= hx && x > qx) {\r\n                qx = x;\r\n                m = p.x < p.next.x ? p : p.next;\r\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\r\n            }\r\n        }\r\n        p = p.next;\r\n    } while (p !== outerNode);\r\n\r\n    if (!m) return null;\r\n\r\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n    // if there are no points found, we have a valid connection;\r\n    // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n    var stop = m,\r\n        mx = m.x,\r\n        my = m.y,\r\n        tanMin = Infinity,\r\n        tan;\r\n\r\n    p = m;\r\n\r\n    do {\r\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n            if (locallyInside(p, hole) &&\r\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\r\n                m = p;\r\n                tanMin = tan;\r\n            }\r\n        }\r\n\r\n        p = p.next;\r\n    } while (p !== stop);\r\n\r\n    return m;\r\n}\r\n\r\n// whether sector in vertex m contains sector in vertex p in the same coordinates\r\nfunction sectorContainsSector(m, p) {\r\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\nfunction indexCurve(start, minX, minY, invSize) {\r\n    var p = start;\r\n    do {\r\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\r\n        p.prevZ = p.prev;\r\n        p.nextZ = p.next;\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    p.prevZ.nextZ = null;\r\n    p.prevZ = null;\r\n\r\n    sortLinked(p);\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\nfunction sortLinked(list) {\r\n    var i, p, q, e, tail, numMerges, pSize, qSize,\r\n        inSize = 1;\r\n\r\n    do {\r\n        p = list;\r\n        list = null;\r\n        tail = null;\r\n        numMerges = 0;\r\n\r\n        while (p) {\r\n            numMerges++;\r\n            q = p;\r\n            pSize = 0;\r\n            for (i = 0; i < inSize; i++) {\r\n                pSize++;\r\n                q = q.nextZ;\r\n                if (!q) break;\r\n            }\r\n            qSize = inSize;\r\n\r\n            while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n                    e = p;\r\n                    p = p.nextZ;\r\n                    pSize--;\r\n                } else {\r\n                    e = q;\r\n                    q = q.nextZ;\r\n                    qSize--;\r\n                }\r\n\r\n                if (tail) tail.nextZ = e;\r\n                else list = e;\r\n\r\n                e.prevZ = tail;\r\n                tail = e;\r\n            }\r\n\r\n            p = q;\r\n        }\r\n\r\n        tail.nextZ = null;\r\n        inSize *= 2;\r\n\r\n    } while (numMerges > 1);\r\n\r\n    return list;\r\n}\r\n\r\n// z-order of a point given coords and inverse of the longer side of data bbox\r\nfunction zOrder(x, y, minX, minY, invSize) {\r\n    // coords are transformed into non-negative 15-bit integer range\r\n    x = (x - minX) * invSize | 0;\r\n    y = (y - minY) * invSize | 0;\r\n\r\n    x = (x | (x << 8)) & 0x00FF00FF;\r\n    x = (x | (x << 4)) & 0x0F0F0F0F;\r\n    x = (x | (x << 2)) & 0x33333333;\r\n    x = (x | (x << 1)) & 0x55555555;\r\n\r\n    y = (y | (y << 8)) & 0x00FF00FF;\r\n    y = (y | (y << 4)) & 0x0F0F0F0F;\r\n    y = (y | (y << 2)) & 0x33333333;\r\n    y = (y | (y << 1)) & 0x55555555;\r\n\r\n    return x | (y << 1);\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\nfunction getLeftmost(start) {\r\n    var p = start,\r\n        leftmost = start;\r\n    do {\r\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\r\n        p = p.next;\r\n    } while (p !== start);\r\n\r\n    return leftmost;\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\r\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\r\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\r\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\nfunction isValidDiagonal(a, b) {\r\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\r\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\r\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\r\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\r\n}\r\n\r\n// signed area of a triangle\r\nfunction area(p, q, r) {\r\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n}\r\n\r\n// check if two points are equal\r\nfunction equals(p1, p2) {\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n// check if two segments intersect\r\nfunction intersects(p1, q1, p2, q2) {\r\n    var o1 = sign(area(p1, q1, p2));\r\n    var o2 = sign(area(p1, q1, q2));\r\n    var o3 = sign(area(p2, q2, p1));\r\n    var o4 = sign(area(p2, q2, q1));\r\n\r\n    if (o1 !== o2 && o3 !== o4) return true; // general case\r\n\r\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n\r\n    return false;\r\n}\r\n\r\n// for collinear points p, q, r, check if point q lies on segment pr\r\nfunction onSegment(p, q, r) {\r\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\r\n}\r\n\r\nfunction sign(num) {\r\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\nfunction intersectsPolygon(a, b) {\r\n    var p = a;\r\n    do {\r\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                intersects(p, p.next, a, b)) return true;\r\n        p = p.next;\r\n    } while (p !== a);\r\n\r\n    return false;\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\nfunction locallyInside(a, b) {\r\n    return area(a.prev, a, a.next) < 0 ?\r\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\r\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\nfunction middleInside(a, b) {\r\n    var p = a,\r\n        inside = false,\r\n        px = (a.x + b.x) / 2,\r\n        py = (a.y + b.y) / 2;\r\n    do {\r\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\r\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n            inside = !inside;\r\n        p = p.next;\r\n    } while (p !== a);\r\n\r\n    return inside;\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\nfunction splitPolygon(a, b) {\r\n    var a2 = new Node(a.i, a.x, a.y),\r\n        b2 = new Node(b.i, b.x, b.y),\r\n        an = a.next,\r\n        bp = b.prev;\r\n\r\n    a.next = b;\r\n    b.prev = a;\r\n\r\n    a2.next = an;\r\n    an.prev = a2;\r\n\r\n    b2.next = a2;\r\n    a2.prev = b2;\r\n\r\n    bp.next = b2;\r\n    b2.prev = bp;\r\n\r\n    return b2;\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\nfunction insertNode(i, x, y, last) {\r\n    var p = new Node(i, x, y);\r\n\r\n    if (!last) {\r\n        p.prev = p;\r\n        p.next = p;\r\n\r\n    } else {\r\n        p.next = last.next;\r\n        p.prev = last;\r\n        last.next.prev = p;\r\n        last.next = p;\r\n    }\r\n    return p;\r\n}\r\n\r\nfunction removeNode(p) {\r\n    p.next.prev = p.prev;\r\n    p.prev.next = p.next;\r\n\r\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n}\r\n\r\nfunction Node(i, x, y) {\r\n    // vertex index in coordinates array\r\n    this.i = i;\r\n\r\n    // vertex coordinates\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // previous and next vertex nodes in a polygon ring\r\n    this.prev = null;\r\n    this.next = null;\r\n\r\n    // z-order curve value\r\n    this.z = 0;\r\n\r\n    // previous and next nodes in z-order\r\n    this.prevZ = null;\r\n    this.nextZ = null;\r\n\r\n    // indicates whether this is a steiner point\r\n    this.steiner = false;\r\n}\r\n\r\n// return a percentage difference between the polygon area and its triangulation area;\r\n// used to verify correctness of triangulation\r\nearcut.deviation = function (data, holeIndices, dim, triangles) {\r\n    var hasHoles = holeIndices && holeIndices.length;\r\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n\r\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n    if (hasHoles) {\r\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n            var start = holeIndices[i] * dim;\r\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n        }\r\n    }\r\n\r\n    var trianglesArea = 0;\r\n    for (i = 0; i < triangles.length; i += 3) {\r\n        var a = triangles[i] * dim;\r\n        var b = triangles[i + 1] * dim;\r\n        var c = triangles[i + 2] * dim;\r\n        trianglesArea += Math.abs(\r\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n    }\r\n\r\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n};\r\n\r\nfunction signedArea(data, start, end, dim) {\r\n    var sum = 0;\r\n    for (var i = start, j = end - dim; i < end; i += dim) {\r\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n        j = i;\r\n    }\r\n    return sum;\r\n}\r\n\r\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\nearcut.flatten = function (data) {\r\n    var dim = data[0][0].length,\r\n        result = {vertices: [], holes: [], dimensions: dim},\r\n        holeIndex = 0;\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        for (var j = 0; j < data[i].length; j++) {\r\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n        }\r\n        if (i > 0) {\r\n            holeIndex += data[i - 1].length;\r\n            result.holes.push(holeIndex);\r\n        }\r\n    }\r\n    return result;\r\n};\r\n", "import { simd, threads } from 'wasm-feature-detect';\r\nimport { WonderlandEngine } from './engine.js';\r\nimport { LogLevel } from './utils/logger.js';\r\nimport { WASM } from './wasm.js';\r\nimport { APIVersion } from './version.js';\r\nimport { getBaseUrl } from './utils/fetch.js';\r\nexport * from './utils/bitset.js';\r\nexport * from './utils/event.js';\r\nexport * from './utils/logger.js';\r\nexport * from './wonderland.js';\r\nexport * from './engine.js';\r\nexport * from './scene.js';\r\nexport * from './property.js';\r\nexport * from './texture-manager.js';\r\nexport * from './version.js';\r\nexport * from './wasm.js';\r\n/** Relative default path for the loading screen. */\r\nconst LOADING_SCREEN_PATH = 'WonderlandRuntime-LoadingScreen.bin';\r\nfunction loadScript(scriptURL) {\r\n    return new Promise((res, rej) => {\r\n        const s = document.createElement('script');\r\n        const node = document.body.appendChild(s);\r\n        s.onload = () => {\r\n            document.body.removeChild(node);\r\n            res();\r\n        };\r\n        s.onerror = (e) => {\r\n            document.body.removeChild(node);\r\n            rej(e);\r\n        };\r\n        s.src = scriptURL;\r\n    });\r\n}\r\n/**\r\n * Finds whether simd & threading are supported or not.\r\n *\r\n * @returns An object containing boolean for simd and thread.\r\n */\r\nasync function detectFeatures() {\r\n    let [simdSupported, threadsSupported] = await Promise.all([simd(), threads()]);\r\n    if (simdSupported) {\r\n        console.log('WASM SIMD is supported');\r\n    }\r\n    else {\r\n        console.warn('WASM SIMD is not supported');\r\n    }\r\n    if (threadsSupported) {\r\n        if (self.crossOriginIsolated) {\r\n            console.log('WASM Threads is supported');\r\n        }\r\n        else {\r\n            console.warn('WASM Threads is supported, but the page is not crossOriginIsolated, therefore thread support is disabled.');\r\n        }\r\n    }\r\n    else {\r\n        console.warn('WASM Threads is not supported');\r\n    }\r\n    threadsSupported = threadsSupported && self.crossOriginIsolated;\r\n    return {\r\n        simdSupported,\r\n        threadsSupported,\r\n    };\r\n}\r\n/* Global boolean to check if AR/VR is supported. */\r\nconst xrSupported = {\r\n    ar: null,\r\n    vr: null,\r\n};\r\n/**\r\n * Check whether XR is supported and store the result in the global space.\r\n */\r\nfunction checkXRSupport() {\r\n    if (typeof navigator === 'undefined' || !navigator.xr) {\r\n        xrSupported.vr = false;\r\n        xrSupported.ar = false;\r\n        return Promise.resolve(xrSupported);\r\n    }\r\n    const vrPromise = xrSupported.vr !== null\r\n        ? Promise.resolve()\r\n        : navigator.xr\r\n            .isSessionSupported('immersive-vr')\r\n            .then((supported) => (xrSupported.vr = supported));\r\n    const arPromise = xrSupported.ar !== null\r\n        ? Promise.resolve()\r\n        : navigator.xr\r\n            .isSessionSupported('immersive-ar')\r\n            .then((supported) => (xrSupported.ar = supported));\r\n    return Promise.all([vrPromise, arPromise]).then(() => xrSupported);\r\n}\r\n/**\r\n * Ensures that this API is compatible with the given\r\n * runtime version.\r\n *\r\n * We only enforce compatibility for major and minor components, i.e.,\r\n * the runtime and the API must both be of the form `x.y.*`.\r\n *\r\n * @throws If the major or the minor components are different.\r\n *\r\n * @param version The target version\r\n */\r\nexport function checkRuntimeCompatibility(version) {\r\n    const { major, minor } = version;\r\n    let majorDiff = major - APIVersion.major;\r\n    let minorDiff = minor - APIVersion.minor;\r\n    /* Same version, so perfectly compatible. */\r\n    if (!majorDiff && !minorDiff)\r\n        return;\r\n    const error = 'checkRuntimeCompatibility(): Version compatibility mismatch:\\n' +\r\n        '\\t\u2192 API and runtime compatibility is enforced on a patch level (versions x.y.*)\\n';\r\n    const isRuntimeOlder = majorDiff < 0 || (!majorDiff && minorDiff < 0);\r\n    if (isRuntimeOlder) {\r\n        /* Runtime is out of date. */\r\n        throw new Error(`${error}\\t\u2192 Please use a Wonderland Engine editor version >= ${APIVersion.major}.${APIVersion.minor}.*`);\r\n    }\r\n    /* API is out of date. */\r\n    throw new Error(`${error}\\t\u2192 Please use a new API version >= ${version.major}.${version.minor}.*`);\r\n}\r\n/**\r\n * Load the runtime using the WASM and JS files.\r\n *\r\n * @param runtime The runtime base string, e.g,: `WonderlandRuntime-loader-physx`.\r\n * @param options Options to modify the loading behaviour.\r\n *\r\n * @returns A promise that resolves when the engine is ready to be used.\r\n */\r\nexport async function loadRuntime(runtime, options = {}) {\r\n    const xrPromise = checkXRSupport();\r\n    const baseURL = getBaseUrl(runtime);\r\n    const { simdSupported, threadsSupported } = await detectFeatures();\r\n    const { simd = simdSupported, threads = threadsSupported, physx = false, loader = false, xrFramebufferScaleFactor = 1.0, xrOfferSession = null, loadingScreen = baseURL ? `${baseURL}/${LOADING_SCREEN_PATH}` : LOADING_SCREEN_PATH, canvas = 'canvas', logs = [LogLevel.Info, LogLevel.Warn, LogLevel.Error], } = options;\r\n    const variant = [];\r\n    if (loader)\r\n        variant.push('loader');\r\n    if (physx)\r\n        variant.push('physx');\r\n    if (simd)\r\n        variant.push('simd');\r\n    if (threads)\r\n        variant.push('threads');\r\n    const variantStr = variant.join('-');\r\n    let filename = runtime;\r\n    if (variantStr)\r\n        filename = `${filename}-${variantStr}`;\r\n    const download = function (filename, errorMessage) {\r\n        return fetch(filename)\r\n            .then((r) => {\r\n            if (!r.ok)\r\n                return Promise.reject(errorMessage);\r\n            return r.arrayBuffer();\r\n        })\r\n            .catch((_) => Promise.reject(errorMessage));\r\n    };\r\n    const [wasmData, loadingScreenData] = await Promise.all([\r\n        download(`${filename}.wasm`, 'Failed to fetch runtime .wasm file'),\r\n        download(loadingScreen, 'Failed to fetch loading screen file'),\r\n    ]);\r\n    const glCanvas = document.getElementById(canvas);\r\n    if (!glCanvas) {\r\n        throw new Error(`loadRuntime(): Failed to find canvas with id '${canvas}'`);\r\n    }\r\n    if (!(glCanvas instanceof HTMLCanvasElement)) {\r\n        throw new Error(`loadRuntime(): HTML element '${canvas}' must be a canvas`);\r\n    }\r\n    const wasm = new WASM(threads);\r\n    wasm.worker = `${filename}.worker.js`;\r\n    wasm.wasm = wasmData;\r\n    wasm.canvas = glCanvas;\r\n    wasm._log.levels.enable(...logs);\r\n    const engine = new WonderlandEngine(wasm, loadingScreenData);\r\n    if (!window._WL) {\r\n        window._WL = { runtimes: {} };\r\n    }\r\n    const runtimes = window._WL.runtimes;\r\n    /* Global identifier of this runtime in `window`. */\r\n    const runtimeGlobalId = variantStr ? variantStr : 'default';\r\n    /* Only load the runtime if not previously loaded in the page */\r\n    if (!runtimes[runtimeGlobalId]) {\r\n        await loadScript(`${filename}.js`);\r\n        runtimes[runtimeGlobalId] = window.instantiateWonderlandRuntime;\r\n        window.instantiateWonderlandRuntime = undefined;\r\n    }\r\n    await runtimes[runtimeGlobalId](wasm);\r\n    engine._init();\r\n    /* Throws if the runtime isn't compatible with the API. */\r\n    checkRuntimeCompatibility(engine.runtimeVersion);\r\n    const xr = await xrPromise;\r\n    engine.arSupported = xr.ar;\r\n    engine.vrSupported = xr.vr;\r\n    engine.xrFramebufferScaleFactor = xrFramebufferScaleFactor;\r\n    engine.autoResizeCanvas = true;\r\n    engine.start();\r\n    if (xrOfferSession !== null) {\r\n        let mode = xrOfferSession.mode;\r\n        if (mode == 'auto') {\r\n            if (engine.vrSupported) {\r\n                mode = 'immersive-vr';\r\n            }\r\n            else if (engine.arSupported) {\r\n                mode = 'immersive-ar';\r\n            }\r\n            else {\r\n                mode = 'inline';\r\n            }\r\n        }\r\n        const offerSession = function () {\r\n            engine\r\n                .offerXRSession(mode, xrOfferSession.features, xrOfferSession.optionalFeatures)\r\n                .then(\r\n            /* When the session ends, offer to start a new one again */\r\n            (s) => s.addEventListener('end', offerSession))\r\n                /* The browser may not suppoer offer session, or a previous request\r\n                 * was replaced by a new one. Not crucial, but inform the user. */\r\n                .catch(console.warn);\r\n        };\r\n        offerSession();\r\n    }\r\n    return engine;\r\n}\r\n", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=()=>(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,95,1,120,0])))(),jspi=()=>(async()=>\"Suspender\"in WebAssembly)(),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiMemory=()=>(async()=>{try{return new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,5,5,2,0,0,0,0])),!0}catch(e){return!1}})(),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),typeReflection=()=>(async()=>\"Function\"in WebAssembly)();\r\n", "/**\r\n * Component property type.\r\n */\r\nexport var Type;\r\n(function (Type) {\r\n    /**\r\n     * **Native**\r\n     *\r\n     * Property of a native component. Must not be used in custom components.\r\n     *\r\n     * @hidden\r\n     */\r\n    Type[Type[\"Native\"] = 1] = \"Native\";\r\n    /**\r\n     * **Bool**:\r\n     *\r\n     * Appears in the editor as a checkbox.\r\n     *\r\n     * Initial value is `false`, unless overridden by the `default` property.\r\n     */\r\n    Type[Type[\"Bool\"] = 2] = \"Bool\";\r\n    /**\r\n     * **Int**:\r\n     *\r\n     * Appears in the editor as an integer input field.\r\n     *\r\n     * Initial value is `0`, unless overridden by the `default` property.\r\n     */\r\n    Type[Type[\"Int\"] = 4] = \"Int\";\r\n    /**\r\n     * **Float**:\r\n     *\r\n     * Appears in the editor as a floating point input field.\r\n     *\r\n     * Initial value is `0.0`, unless overridden by the `default` property.\r\n     */\r\n    Type[Type[\"Float\"] = 8] = \"Float\";\r\n    /**\r\n     * **String / Text**:\r\n     *\r\n     * Appears in the editor as a single-line text input field.\r\n     *\r\n     * Initial value is an empty string, unless overridden by the `default`\r\n     * property.\r\n     */\r\n    Type[Type[\"String\"] = 16] = \"String\";\r\n    /**\r\n     * **Enumeration**:\r\n     *\r\n     * Appears in the editor as a dropdown with given values. The additional\r\n     * `values` parameter with selection options is mandatory.\r\n     *\r\n     * The property value is resolved to an **index** into the `values` array.\r\n     *\r\n     * Initial value is the first element in `values`, unless overridden by\r\n     * the `default` property. The `default` value can be a string or an index\r\n     * into `values`.\r\n     *\r\n     * @example\r\n     *\r\n     * ```js\r\n     *     camera: {type: Type.Enum, values: ['auto', 'back', 'front'], default: 'auto'},\r\n     * ```\r\n     */\r\n    Type[Type[\"Enum\"] = 32] = \"Enum\";\r\n    /**\r\n     * **Object reference**:\r\n     *\r\n     * Appears in the editor as an object resource selection dropdown\r\n     * with object picker.\r\n     *\r\n     * Initial value is `null`.\r\n     */\r\n    Type[Type[\"Object\"] = 64] = \"Object\";\r\n    /**\r\n     * **Mesh reference**:\r\n     *\r\n     * Appears in the editor as a mesh resource selection dropdown.\r\n     *\r\n     * Initial value is `null`.\r\n     */\r\n    Type[Type[\"Mesh\"] = 128] = \"Mesh\";\r\n    /**\r\n     * **Texture reference**:\r\n     *\r\n     * Appears in the editor as a texture resource selection dropdown.\r\n     *\r\n     * Initial value is `null`.\r\n     */\r\n    Type[Type[\"Texture\"] = 256] = \"Texture\";\r\n    /**\r\n     * **Material reference**:\r\n     *\r\n     * Appears in the editor as a material resource selection dropdown.\r\n     *\r\n     * Initial value is `null`.\r\n     */\r\n    Type[Type[\"Material\"] = 512] = \"Material\";\r\n    /**\r\n     * **Animation reference**:\r\n     *\r\n     * Appears in the editor as an animation resource selection dropdown.\r\n     *\r\n     * Initial value is `null`.\r\n     */\r\n    Type[Type[\"Animation\"] = 1024] = \"Animation\";\r\n    /**\r\n     * **Skin reference**:\r\n     *\r\n     * Appears in the editor as a skin resource selection dropdown.\r\n     *\r\n     * Initial value is `null`.\r\n     */\r\n    Type[Type[\"Skin\"] = 2048] = \"Skin\";\r\n    /**\r\n     * **Color**:\r\n     *\r\n     * Appears in the editor as a color widget.\r\n     *\r\n     * Initial value is `[0.0, 0.0, 0.0, 1.0]`, unless overridden by the\r\n     * `default` property.\r\n     */\r\n    Type[Type[\"Color\"] = 4096] = \"Color\";\r\n})(Type || (Type = {}));\r\n/**\r\n * Component property namespace.\r\n *\r\n * Usage:\r\n *\r\n * ```js\r\n * import {Component, Property} from '@wonderlandengine/api';\r\n *\r\n * class MyComponent extends Component {\r\n *     static Properties = {\r\n *         myBool: Property.bool(true),\r\n *         myInt: Property.int(42),\r\n *         myString: Property.string('Hello World!'),\r\n *         myMesh: Property.mesh(),\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * For TypeScript users, you can use the decorators instead.\r\n */\r\nexport const Property = {\r\n    /**\r\n     * Create an boolean property.\r\n     *\r\n     * @param defaultValue The default value. If not provided, defaults to `false`.\r\n     */\r\n    bool(defaultValue = false) {\r\n        return { type: Type.Bool, default: defaultValue };\r\n    },\r\n    /**\r\n     * Create an integer property.\r\n     *\r\n     * @param defaultValue The default value. If not provided, defaults to `0`.\r\n     */\r\n    int(defaultValue = 0) {\r\n        return { type: Type.Int, default: defaultValue };\r\n    },\r\n    /**\r\n     * Create an float property.\r\n     *\r\n     * @param defaultValue The default value. If not provided, defaults to `0.0`.\r\n     */\r\n    float(defaultValue = 0.0) {\r\n        return { type: Type.Float, default: defaultValue };\r\n    },\r\n    /**\r\n     * Create an string property.\r\n     *\r\n     * @param defaultValue The default value. If not provided, defaults to `''`.\r\n     */\r\n    string(defaultValue = '') {\r\n        return { type: Type.String, default: defaultValue };\r\n    },\r\n    /**\r\n     * Create an enumeration property.\r\n     *\r\n     * @param values The list of values.\r\n     * @param defaultValue The default value. Can be a string or an index into\r\n     *     `values`. If not provided, defaults to the first element.\r\n     */\r\n    enum(values, defaultValue) {\r\n        return { type: Type.Enum, values, default: defaultValue };\r\n    },\r\n    /** Create an {@link Object3D} reference property. */\r\n    object(opts) {\r\n        return { type: Type.Object, default: null, required: opts?.required ?? false };\r\n    },\r\n    /** Create a {@link Mesh} reference property. */\r\n    mesh(opts) {\r\n        return { type: Type.Mesh, default: null, required: opts?.required ?? false };\r\n    },\r\n    /** Create a {@link Texture} reference property. */\r\n    texture(opts) {\r\n        return { type: Type.Texture, default: null, required: opts?.required ?? false };\r\n    },\r\n    /** Create a {@link Material} reference property. */\r\n    material(opts) {\r\n        return { type: Type.Material, default: null, required: opts?.required ?? false };\r\n    },\r\n    /** Create an {@link Animation} reference property. */\r\n    animation(opts) {\r\n        return { type: Type.Animation, default: null, required: opts?.required ?? false };\r\n    },\r\n    /** Create a {@link Skin} reference property. */\r\n    skin(opts) {\r\n        return { type: Type.Skin, default: null, required: opts?.required ?? false };\r\n    },\r\n    /**\r\n     * Create a color property.\r\n     *\r\n     * @param r The red component, in the range [0; 1].\r\n     * @param g The green component, in the range [0; 1].\r\n     * @param b The blue component, in the range [0; 1].\r\n     * @param a The alpha component, in the range [0; 1].\r\n     */\r\n    color(r = 0.0, g = 0.0, b = 0.0, a = 1.0) {\r\n        return { type: Type.Color, default: [r, g, b, a] };\r\n    },\r\n};\r\n", "import { Property, Type } from './property.js';\r\n/**\r\n * Decorator for JS component properties.\r\n *\r\n * @param data The property description as an object literal\r\n * @returns A decorator function modifying the `Properties` static\r\n *     attribute\r\n */\r\nfunction propertyDecorator(data) {\r\n    return function (target, propertyKey) {\r\n        const ctor = target.constructor;\r\n        ctor.Properties = ctor.hasOwnProperty('Properties') ? ctor.Properties : {};\r\n        ctor.Properties[propertyKey] = data;\r\n    };\r\n}\r\n/**\r\n * Decorator for making a getter enumerable.\r\n *\r\n * Usage:\r\n *\r\n * ```ts\r\n * class MyClass {\r\n *     @enumerable()\r\n *     get projectionMatrix(): Float32Array { ... }\r\n * }\r\n * ```\r\n */\r\nexport function enumerable() {\r\n    return function (_, __, descriptor) {\r\n        descriptor.enumerable = true;\r\n    };\r\n}\r\n/**\r\n * Decorator for native properties.\r\n *\r\n * Usage:\r\n *\r\n * ```ts\r\n * class MyClass {\r\n *     @nativeProperty()\r\n *     get projectionMatrix(): Float32Array { ... }\r\n * }\r\n * ```\r\n */\r\nexport function nativeProperty() {\r\n    return function (target, propertyKey, descriptor) {\r\n        enumerable()(target, propertyKey, descriptor);\r\n        propertyDecorator({ type: Type.Native })(target, propertyKey);\r\n    };\r\n}\r\n/**\r\n * Property decorators namespace.\r\n *\r\n * You can use the decorators to mark a class attribute as\r\n * a Wonderland Engine property.\r\n *\r\n * Usage:\r\n *\r\n * ```ts\r\n * import {Mesh} from '@wonderlandengine/api';\r\n * import {property} from '@wonderlandengine/api/decorators.js';\r\n *\r\n * class MyComponent extends Component {\r\n *     @property.bool(true)\r\n *     myBool!: boolean;\r\n *\r\n *     @property.int(42)\r\n *     myInt!: number;\r\n *\r\n *     @property.string('Hello World!')\r\n *     myString!: string;\r\n *\r\n *     @property.mesh()\r\n *     myMesh!: Mesh;\r\n * }\r\n * ```\r\n *\r\n * For JavaScript users, please declare the properties statically.\r\n */\r\nexport const property = {};\r\nfor (const name in Property) {\r\n    /* Assign each property functor to a TypeScript decorator.\r\n     * This code extracts parameters and return type to provide proper\r\n     * typings to the user. */\r\n    property[name] = (...args) => {\r\n        const functor = Property[name];\r\n        return propertyDecorator(functor(...args));\r\n    };\r\n}\r\n", "/**\r\n * Check if a given value is a native string or a `String` instance.\r\n *\r\n * @param value The value to check.\r\n * @returns `true` if the `value` has type string literal or `String`, `false` otherwise.\r\n */\r\nexport function isString(value) {\r\n    if (value === '')\r\n        return true;\r\n    return value && (typeof value === 'string' || value.constructor === String);\r\n}\r\n/**\r\n * Check if a given value is a native number or a `Number` instance.\r\n *\r\n * @param value The value to check.\r\n * @returns `true` if the `value` has type number literal or `Number`, `false` otherwise.\r\n */\r\nexport function isNumber(value) {\r\n    if (value === null || value === undefined)\r\n        return false;\r\n    return typeof value === 'number' || value.constructor === Number;\r\n}\r\n", "/** Internal type for transaction. */\r\nvar TransactionType;\r\n(function (TransactionType) {\r\n    TransactionType[TransactionType[\"Addition\"] = 1] = \"Addition\";\r\n    TransactionType[TransactionType[\"Removal\"] = 2] = \"Removal\";\r\n})(TransactionType || (TransactionType = {}));\r\n/**\r\n * Event emitter.\r\n *\r\n * This class allows to register listeners that will get notified by the emitter.\r\n *\r\n * Usage example:\r\n *\r\n * ```js\r\n * // `onPreRender` is an `Emitter` instance.\r\n * scene.onPreRender.add(() => console.log('before rendering'));\r\n * // `onPostRender` is an `Emitter` instance.\r\n * scene.onPostRender.add(() => console.log('after rendering'));\r\n * ```\r\n *\r\n * You can create your own emitters:\r\n *\r\n * ```js\r\n * import {Emitter} from '@wonderlandengine/api';\r\n *\r\n * const emitter = new Emitter();\r\n * ```\r\n *\r\n * You can notify listeners in to your emitter using {@link Emitter.notify}:\r\n *\r\n * ```js\r\n * // Notifies all the listeners.\r\n * emitter.notify();\r\n * // Notifies all the listeners with some data.\r\n * emitter.notify({ myInt: 42, myStr: 'Hello World!' });\r\n * ```\r\n *\r\n * @category event\r\n */\r\nexport class Emitter {\r\n    /**\r\n     * List of listeners to trigger when `notify` is called.\r\n     *\r\n     * @hidden\r\n     */\r\n    _listeners = [];\r\n    /**\r\n     * `true` if the emitter is currently notifying listeners. This\r\n     * is used to defer addition and removal.\r\n     *\r\n     * @hidden\r\n     */\r\n    _notifying = false;\r\n    /**\r\n     * Pending additions / removals, performed during a notification.\r\n     *\r\n     * @hidden\r\n     */\r\n    _transactions = [];\r\n    /**\r\n     * Register a new listener to be triggered on {@link Emitter.notify}.\r\n     *\r\n     * Basic usage:\r\n     *\r\n     * ```js\r\n     * emitter.add((data) => {\r\n     *     console.log('event received!');\r\n     *     console.log(data);\r\n     * });\r\n     * ```\r\n     *\r\n     * Automatically remove the listener when an event is received:\r\n     *\r\n     * ```js\r\n     * emitter.add((data) => {\r\n     *     console.log('event received!');\r\n     *     console.log(data);\r\n     * }, {once: true});\r\n     * ```\r\n     *\r\n     * @param listener The callback to register.\r\n     * @param opts The listener options. For more information, please have a look\r\n     *     at the {@link ListenerOptions} interface.\r\n     *\r\n     * @returns Reference to self (for method chaining)\r\n     */\r\n    add(listener, opts = {}) {\r\n        const { once = false, id = undefined } = opts;\r\n        const data = { id, once, callback: listener };\r\n        if (this._notifying) {\r\n            this._transactions.push({ type: TransactionType.Addition, data });\r\n            return this;\r\n        }\r\n        this._listeners.push(data);\r\n        return this;\r\n    }\r\n    /**\r\n     * Equivalent to {@link Emitter.add}.\r\n     *\r\n     * @param listeners The callback(s) to register.\r\n     * @returns Reference to self (for method chaining).\r\n     *\r\n     * @deprecated Please use {@link Emitter.add} instead.\r\n     */\r\n    push(...listeners) {\r\n        for (const cb of listeners)\r\n            this.add(cb);\r\n        return this;\r\n    }\r\n    /**\r\n     * Register a new listener to be triggered on {@link Emitter.notify}.\r\n     *\r\n     * Once notified, the listener will be automatically removed.\r\n     *\r\n     * The method is equivalent to calling {@link Emitter.add} with:\r\n     *\r\n     * ```js\r\n     * emitter.add(listener, {once: true});\r\n     * ```\r\n     *\r\n     * @param listener The callback to register.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    once(listener) {\r\n        return this.add(listener, { once: true });\r\n    }\r\n    /**\r\n     * Remove a registered listener.\r\n     *\r\n     * Usage with a callback:\r\n     *\r\n     * ```js\r\n     * const listener = (data) => console.log(data);\r\n     * emitter.add(listener);\r\n     *\r\n     * // Remove using the callback reference:\r\n     * emitter.remove(listener);\r\n     * ```\r\n     *\r\n     * Usage with an id:\r\n     *\r\n     * ```js\r\n     * emitter.add((data) => console.log(data), {id: 'my-callback'});\r\n     *\r\n     * // Remove using the id:\r\n     * emitter.remove('my-callback');\r\n     * ```\r\n     *\r\n     * Using identifiers, you will need to ensure your value is unique to avoid\r\n     * removing listeners from other libraries, e.g.,:\r\n     *\r\n     * ```js\r\n     * emitter.add((data) => console.log(data), {id: 'non-unique'});\r\n     * // This second listener could be added by a third-party library.\r\n     * emitter.add((data) => console.log('Hello From Library!'), {id: 'non-unique'});\r\n     *\r\n     * // Ho Snap! This also removed the library listener!\r\n     * emitter.remove('non-unique');\r\n     * ```\r\n     *\r\n     * The identifier can be any type. However, remember that the comparison will be\r\n     * by-value for primitive types (string, number), but by reference for objects.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * emitter.add(() => console.log('Hello'), {id: {value: 42}});\r\n     * emitter.add(() => console.log('World!'), {id: {value: 42}});\r\n     * emitter.remove({value: 42}); // None of the above listeners match!\r\n     * emitter.notify(); // Prints 'Hello' and 'World!'.\r\n     * ```\r\n     *\r\n     * Here, both emitters have id `{value: 42}`, but the comparison is made by reference. Thus,\r\n     * the `remove()` call has no effect. We can make it work by doing:\r\n     *\r\n     * ```js\r\n     * const id = {value: 42};\r\n     * emitter.add(() => console.log('Hello'), {id});\r\n     * emitter.add(() => console.log('World!'), {id});\r\n     * emitter.remove(id); // Same reference, it works!\r\n     * emitter.notify(); // Doesn't print.\r\n     * ```\r\n     *\r\n     * @param listener The registered callback or a value representing the `id`.\r\n     *\r\n     * @returns Reference to self (for method chaining)\r\n     */\r\n    remove(listener) {\r\n        if (this._notifying) {\r\n            this._transactions.push({ type: TransactionType.Removal, data: listener });\r\n            return this;\r\n        }\r\n        const listeners = this._listeners;\r\n        for (let i = 0; i < listeners.length; ++i) {\r\n            const target = listeners[i];\r\n            if (target.callback === listener || target.id === listener) {\r\n                listeners.splice(i--, 1);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Check whether the listener is registered.\r\n     *\r\n     * @note This method performs a linear search.\r\n     *\r\n     * * @note Doesn't account for pending listeners, i.e.,\r\n     * listeners added / removed during a notification.\r\n     *\r\n     * @param listener The registered callback or a value representing the `id`.\r\n     * @returns `true` if the handle is found, `false` otherwise.\r\n     */\r\n    has(listener) {\r\n        const listeners = this._listeners;\r\n        for (let i = 0; i < listeners.length; ++i) {\r\n            const target = listeners[i];\r\n            if (target.callback === listener || target.id === listener)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Notify listeners with the given data object.\r\n     *\r\n     * @note This method ensures all listeners are called even if\r\n     * an exception is thrown. For (possibly) faster notification,\r\n     * please use {@link Emitter.notifyUnsafe}.\r\n     *\r\n     * @param data The data to pass to listener when invoked.\r\n     */\r\n    notify(...data) {\r\n        const listeners = this._listeners;\r\n        this._notifying = true;\r\n        for (let i = 0; i < listeners.length; ++i) {\r\n            const listener = listeners[i];\r\n            if (listener.once)\r\n                listeners.splice(i--, 1);\r\n            try {\r\n                listener.callback(...data);\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        this._notifying = false;\r\n        /* Process deferred additions & removals */\r\n        this._flushTransactions();\r\n    }\r\n    /**\r\n     * Notify listeners with the given data object.\r\n     *\r\n     * @note Because this method doesn't catch exceptions, some listeners\r\n     * will be skipped on a throw. Please use {@link Emitter.notify} for safe\r\n     * notification.\r\n     *\r\n     * @param data The data to pass to listener when invoked.\r\n     */\r\n    notifyUnsafe(...data) {\r\n        const listeners = this._listeners;\r\n        for (let i = 0; i < listeners.length; ++i) {\r\n            const listener = listeners[i];\r\n            if (listener.once)\r\n                listeners.splice(i--, 1);\r\n            listener.callback(...data);\r\n        }\r\n        /* Process deferred additions & removals */\r\n        this._flushTransactions();\r\n    }\r\n    /**\r\n     * Return a promise that will resolve on the next event.\r\n     *\r\n     * @note The promise might never resolve if no event is sent.\r\n     *\r\n     * @returns A promise that resolves with the data passed to\r\n     *     {@link Emitter.notify}.\r\n     */\r\n    promise() {\r\n        return new Promise((res, _) => {\r\n            this.once((...args) => {\r\n                if (args.length > 1) {\r\n                    res(args);\r\n                }\r\n                else {\r\n                    res(args[0]);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Number of listeners.\r\n     *\r\n     * @note Doesn't account for pending listeners, i.e.,\r\n     * listeners added / removed during a notification.\r\n     */\r\n    get listenerCount() {\r\n        return this._listeners.length;\r\n    }\r\n    /** `true` if it has no listeners, `false` otherwise. */\r\n    get isEmpty() {\r\n        return this.listenerCount === 0;\r\n    }\r\n    /**\r\n     * Flush all pending transactions.\r\n     *\r\n     * @hidden\r\n     */\r\n    _flushTransactions() {\r\n        const listeners = this._listeners;\r\n        for (const transaction of this._transactions) {\r\n            if (transaction.type === TransactionType.Addition) {\r\n                listeners.push(transaction.data);\r\n            }\r\n            else {\r\n                this.remove(transaction.data);\r\n            }\r\n        }\r\n        this._transactions.length = 0;\r\n    }\r\n}\r\n/* Dummy value used with RetainEmitter. */\r\nconst RetainEmitterUndefined = {};\r\n/**\r\n * Event emitter that retains event data when notified.\r\n *\r\n * After a notification happens, subsequent calls to {@link RetainEmitter.add} will get\r\n * automatically notified.\r\n *\r\n * You can use another emitter in order to cancel the last retained event:\r\n *\r\n * ```js\r\n * import {Emitter, RetainedEmitter} from '@wonderlandengine/api';\r\n *\r\n * const onStart = new RetainedEmitter();\r\n *\r\n * onStart.notify(42);\r\n * onStart.add((data) => console.log(data)) // Prints '42'.\r\n * ```\r\n *\r\n * You can reset the state of the emitter, i.e., making it forget about the\r\n * last event using:\r\n *\r\n * ```js\r\n * import {Emitter, RetainedEmitter} from '@wonderlandengine/api';\r\n *\r\n * const onStart = new RetainedEmitter();\r\n * onStart.notify(42);\r\n * onStart.add((data) => console.log(data)) // Prints '42'.\r\n *\r\n * // Reset the state of the emitter.\r\n * onStart.reset();\r\n * onStart.add((data) => console.log(data)) // Doesn't print anything.\r\n * ```\r\n *\r\n * For more information about emitters, please have a look at the base {@link Emitter} class.\r\n *\r\n * @category event\r\n */\r\nexport class RetainEmitter extends Emitter {\r\n    /** Pre-resolved data. @hidden */\r\n    _event = RetainEmitterUndefined;\r\n    /**\r\n     * Emitter target used to reset the state of this emitter.\r\n     *\r\n     * @hidden\r\n     */\r\n    _reset;\r\n    /** @override */\r\n    add(listener, opts) {\r\n        const immediate = opts?.immediate ?? true;\r\n        if (this._event !== RetainEmitterUndefined && immediate) {\r\n            listener(...this._event);\r\n        }\r\n        super.add(listener, opts);\r\n        return this;\r\n    }\r\n    /**\r\n     * @override\r\n     *\r\n     * @param listener The callback to register.\r\n     * @param immediate If `true`, directly resolves if the emitter retains a value.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    once(listener, immediate) {\r\n        return this.add(listener, { once: true, immediate });\r\n    }\r\n    /** @override */\r\n    notify(...data) {\r\n        this._event = data;\r\n        super.notify(...data);\r\n    }\r\n    /** @override */\r\n    notifyUnsafe(...data) {\r\n        this._event = data;\r\n        super.notifyUnsafe(...data);\r\n    }\r\n    /**\r\n     * Reset the state of the emitter.\r\n     *\r\n     * Further call to {@link Emitter.add} will not automatically resolve,\r\n     * until a new call to {@link Emitter.notify} is performed.\r\n     *\r\n     * @returns Reference to self (for method chaining)\r\n     */\r\n    reset() {\r\n        this._event = RetainEmitterUndefined;\r\n        return this;\r\n    }\r\n    /** Returns the retained data, or `undefined` if no data was retained. */\r\n    get data() {\r\n        return this.isDataRetained ? this._event : undefined;\r\n    }\r\n    /** `true` if data is retained from the last event, `false` otherwise. */\r\n    get isDataRetained() {\r\n        return this._event !== RetainEmitterUndefined;\r\n    }\r\n}\r\n", "/**\r\n * Types\r\n */\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { nativeProperty, enumerable } from './decorators.js';\r\nimport { isNumber, isString } from './utils/object.js';\r\nimport { Emitter } from './utils/event.js';\r\n/**\r\n * Wonderland Engine API\r\n * @namespace WL\r\n */\r\n/**\r\n * Default set of logging tags used by the API.\r\n */\r\nexport var LogTag;\r\n(function (LogTag) {\r\n    /** Initialization, component registration, etc... */\r\n    LogTag[LogTag[\"Engine\"] = 0] = \"Engine\";\r\n    /** Scene loading */\r\n    LogTag[LogTag[\"Scene\"] = 1] = \"Scene\";\r\n    /** Component init, update, etc... */\r\n    LogTag[LogTag[\"Component\"] = 2] = \"Component\";\r\n})(LogTag || (LogTag = {}));\r\n/**\r\n * Collider type enum for {@link CollisionComponent}.\r\n */\r\nexport var Collider;\r\n(function (Collider) {\r\n    /**\r\n     * **Sphere Collider**:\r\n     *\r\n     * Simplest and most performant collision shape. If this type is set on a\r\n     * {@link CollisionComponent}, only the first component of\r\n     * {@link CollisionComponent#extents} will be used to determine the radius.\r\n     */\r\n    Collider[Collider[\"Sphere\"] = 0] = \"Sphere\";\r\n    /**\r\n     * **Axis Aligned Bounding Box Collider**:\r\n     *\r\n     * Box that is always aligned to XYZ axis. It cannot be rotated but is more\r\n     * efficient than {@link Collider.Box}.\r\n     */\r\n    Collider[Collider[\"AxisAlignedBox\"] = 1] = \"AxisAlignedBox\";\r\n    /**\r\n     * **Aligned Bounding Box Collider**:\r\n     *\r\n     * Box that matches the object's rotation and translation correctly. This\r\n     * is the least efficient collider and should only be chosen over\r\n     * {@link Collider.Sphere} and {@link Collider.AxisAlignedBox} if really\r\n     * necessary.\r\n     */\r\n    Collider[Collider[\"Box\"] = 2] = \"Box\";\r\n})(Collider || (Collider = {}));\r\n/**\r\n * Alignment type enum for {@link TextComponent}.\r\n */\r\nexport var Alignment;\r\n(function (Alignment) {\r\n    /** Text start is at object origin */\r\n    Alignment[Alignment[\"Left\"] = 0] = \"Left\";\r\n    /** Text center is at object origin */\r\n    Alignment[Alignment[\"Center\"] = 1] = \"Center\";\r\n    /** Text end is at object origin */\r\n    Alignment[Alignment[\"Right\"] = 2] = \"Right\";\r\n})(Alignment || (Alignment = {}));\r\n/**\r\n * Justification type enum for {@link TextComponent}.\r\n */\r\nexport var Justification;\r\n(function (Justification) {\r\n    /** Text line is at object origin */\r\n    Justification[Justification[\"Line\"] = 0] = \"Line\";\r\n    /** Text middle is at object origin */\r\n    Justification[Justification[\"Middle\"] = 1] = \"Middle\";\r\n    /** Text top is at object origin */\r\n    Justification[Justification[\"Top\"] = 2] = \"Top\";\r\n    /** Text bottom is at object origin */\r\n    Justification[Justification[\"Bottom\"] = 3] = \"Bottom\";\r\n})(Justification || (Justification = {}));\r\n/**\r\n * Effect type enum for {@link TextComponent}.\r\n */\r\nexport var TextEffect;\r\n(function (TextEffect) {\r\n    /** Text is rendered normally */\r\n    TextEffect[TextEffect[\"None\"] = 0] = \"None\";\r\n    /** Text is rendered with an outline */\r\n    TextEffect[TextEffect[\"Outline\"] = 1] = \"Outline\";\r\n})(TextEffect || (TextEffect = {}));\r\n/**\r\n * Input type enum for {@link InputComponent}.\r\n */\r\nexport var InputType;\r\n(function (InputType) {\r\n    /** Head input */\r\n    InputType[InputType[\"Head\"] = 0] = \"Head\";\r\n    /** Left eye input */\r\n    InputType[InputType[\"EyeLeft\"] = 1] = \"EyeLeft\";\r\n    /** Right eye input */\r\n    InputType[InputType[\"EyeRight\"] = 2] = \"EyeRight\";\r\n    /** Left controller input */\r\n    InputType[InputType[\"ControllerLeft\"] = 3] = \"ControllerLeft\";\r\n    /** Right controller input */\r\n    InputType[InputType[\"ControllerRight\"] = 4] = \"ControllerRight\";\r\n    /** Left ray input */\r\n    InputType[InputType[\"RayLeft\"] = 5] = \"RayLeft\";\r\n    /** Right ray input */\r\n    InputType[InputType[\"RayRight\"] = 6] = \"RayRight\";\r\n})(InputType || (InputType = {}));\r\n/**\r\n * Light type enum for {@link LightComponent}.\r\n */\r\nexport var LightType;\r\n(function (LightType) {\r\n    /** Point light */\r\n    LightType[LightType[\"Point\"] = 0] = \"Point\";\r\n    /** Spot light */\r\n    LightType[LightType[\"Spot\"] = 1] = \"Spot\";\r\n    /** Sun light / Directional light */\r\n    LightType[LightType[\"Sun\"] = 2] = \"Sun\";\r\n})(LightType || (LightType = {}));\r\n/**\r\n * Animation state of {@link AnimationComponent}.\r\n */\r\nexport var AnimationState;\r\n(function (AnimationState) {\r\n    /** Animation is currently playing */\r\n    AnimationState[AnimationState[\"Playing\"] = 0] = \"Playing\";\r\n    /** Animation is paused and will continue at current playback\r\n     * time on {@link AnimationComponent#play} */\r\n    AnimationState[AnimationState[\"Paused\"] = 1] = \"Paused\";\r\n    /** Animation is stopped */\r\n    AnimationState[AnimationState[\"Stopped\"] = 2] = \"Stopped\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * Rigid body force mode for {@link PhysXComponent#addForce} and {@link PhysXComponent#addTorque}.\r\n *\r\n * [PhysX API Reference](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxapi/files/structPxForceMode.html)\r\n */\r\nexport var ForceMode;\r\n(function (ForceMode) {\r\n    /** Apply as force */\r\n    ForceMode[ForceMode[\"Force\"] = 0] = \"Force\";\r\n    /** Apply as impulse */\r\n    ForceMode[ForceMode[\"Impulse\"] = 1] = \"Impulse\";\r\n    /** Apply as velocity change, mass dependent */\r\n    ForceMode[ForceMode[\"VelocityChange\"] = 2] = \"VelocityChange\";\r\n    /** Apply as mass dependent force */\r\n    ForceMode[ForceMode[\"Acceleration\"] = 3] = \"Acceleration\";\r\n})(ForceMode || (ForceMode = {}));\r\n/**\r\n * Collision callback event type.\r\n */\r\nexport var CollisionEventType;\r\n(function (CollisionEventType) {\r\n    /** Touch/contact detected, collision */\r\n    CollisionEventType[CollisionEventType[\"Touch\"] = 0] = \"Touch\";\r\n    /** Touch/contact lost, uncollide */\r\n    CollisionEventType[CollisionEventType[\"TouchLost\"] = 1] = \"TouchLost\";\r\n    /** Touch/contact with trigger detected */\r\n    CollisionEventType[CollisionEventType[\"TriggerTouch\"] = 2] = \"TriggerTouch\";\r\n    /** Touch/contact with trigger lost */\r\n    CollisionEventType[CollisionEventType[\"TriggerTouchLost\"] = 3] = \"TriggerTouchLost\";\r\n})(CollisionEventType || (CollisionEventType = {}));\r\n/**\r\n * Rigid body {@link PhysXComponent#shape}.\r\n *\r\n * [PhysX SDK Guide](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/Geometry.html#geometry-types).\r\n */\r\nexport var Shape;\r\n(function (Shape) {\r\n    /** No shape. */\r\n    Shape[Shape[\"None\"] = 0] = \"None\";\r\n    /** Sphere shape. */\r\n    Shape[Shape[\"Sphere\"] = 1] = \"Sphere\";\r\n    /** Capsule shape. */\r\n    Shape[Shape[\"Capsule\"] = 2] = \"Capsule\";\r\n    /** Box shape. */\r\n    Shape[Shape[\"Box\"] = 3] = \"Box\";\r\n    /** Plane shape. */\r\n    Shape[Shape[\"Plane\"] = 4] = \"Plane\";\r\n    /** Convex mesh shape. */\r\n    Shape[Shape[\"ConvexMesh\"] = 5] = \"ConvexMesh\";\r\n    /** Triangle mesh shape. */\r\n    Shape[Shape[\"TriangleMesh\"] = 6] = \"TriangleMesh\";\r\n})(Shape || (Shape = {}));\r\n/**\r\n * Mesh attribute enum.\r\n * @since 0.9.0\r\n */\r\nexport var MeshAttribute;\r\n(function (MeshAttribute) {\r\n    /** Position attribute, 3 floats */\r\n    MeshAttribute[MeshAttribute[\"Position\"] = 0] = \"Position\";\r\n    /** Tangent attribute, 4 floats */\r\n    MeshAttribute[MeshAttribute[\"Tangent\"] = 1] = \"Tangent\";\r\n    /** Normal attribute, 3 floats */\r\n    MeshAttribute[MeshAttribute[\"Normal\"] = 2] = \"Normal\";\r\n    /** Texture coordinate attribute, 2 floats */\r\n    MeshAttribute[MeshAttribute[\"TextureCoordinate\"] = 3] = \"TextureCoordinate\";\r\n    /** Color attribute, 4 floats, RGBA, range `0` to `1` */\r\n    MeshAttribute[MeshAttribute[\"Color\"] = 4] = \"Color\";\r\n    /** Joint id attribute, 8 unsigned ints */\r\n    MeshAttribute[MeshAttribute[\"JointId\"] = 5] = \"JointId\";\r\n    /** Joint weights attribute, 8 floats */\r\n    MeshAttribute[MeshAttribute[\"JointWeight\"] = 6] = \"JointWeight\";\r\n})(MeshAttribute || (MeshAttribute = {}));\r\n/**\r\n * Material parameter type.\r\n */\r\nexport var MaterialParamType;\r\n(function (MaterialParamType) {\r\n    /** Unsigned integer parameter type. */\r\n    MaterialParamType[MaterialParamType[\"UnsignedInt\"] = 0] = \"UnsignedInt\";\r\n    /** Integer parameter type. */\r\n    MaterialParamType[MaterialParamType[\"Int\"] = 1] = \"Int\";\r\n    /** Float parameter type. */\r\n    MaterialParamType[MaterialParamType[\"Float\"] = 2] = \"Float\";\r\n    /** Sampler resource parameter type, i.e., a {@link Texture}. */\r\n    MaterialParamType[MaterialParamType[\"Sampler\"] = 3] = \"Sampler\";\r\n    /**\r\n     * Font resource parameter type.\r\n     *\r\n     * **Note**: Changing font isn't exposed yet and will raise an error.\r\n     */\r\n    MaterialParamType[MaterialParamType[\"Font\"] = 4] = \"Font\";\r\n})(MaterialParamType || (MaterialParamType = {}));\r\n/**\r\n * Create a proxy throwing destroyed errors upon access.\r\n *\r\n * @param type The type to display upon error\r\n * @returns The proxy instance\r\n */\r\nfunction createDestroyedProxy(type) {\r\n    return new Proxy({}, {\r\n        get(_, param) {\r\n            if (param === 'isDestroyed')\r\n                return true;\r\n            throw new Error(`Canno't read '${param}' of destroyed ${type}`);\r\n        },\r\n        set(_, param) {\r\n            throw new Error(`Canno't write '${param}' of destroyed ${type}`);\r\n        },\r\n    });\r\n}\r\n/** Proxy used to override prototypes of destroyed objects. */\r\nexport const DestroyedObjectInstance = createDestroyedProxy('object');\r\n/** Proxy used to override prototypes of destroyed components. */\r\nexport const DestroyedComponentInstance = createDestroyedProxy('component');\r\n/** Proxy used to override prototypes of destroyed textures. */\r\nexport const DestroyedTextureInstance = createDestroyedProxy('texture');\r\n/**\r\n * Check whether a given shape is a mesh or not.\r\n *\r\n * @param shape The shape to check.\r\n * @returns `true` if the shape is a mesh, `false` if it's a primitive.\r\n */\r\nfunction isMeshShape(shape) {\r\n    return shape === Shape.ConvexMesh || shape === Shape.TriangleMesh;\r\n}\r\n/**\r\n * Check whether an object is the {@link Component} class or not,\r\n *\r\n * @note This method if foolproof to developers inadvertently using\r\n * multiple Wonderland Engine API in a bundle.\r\n *\r\n * @param value The object to check.\r\n * @returns `true` if the object is a {@link Component} class, `false` otherwise.\r\n */\r\nfunction isBaseComponentClass(value) {\r\n    return (!!value &&\r\n        value.hasOwnProperty('_isBaseComponent') &&\r\n        value._isBaseComponent);\r\n}\r\n/**\r\n * Constants.\r\n */\r\n/**\r\n * Default world up vector.\r\n */\r\nconst UP_VECTOR = [0, 1, 0];\r\nconst SQRT_3 = Math.sqrt(3);\r\n/**\r\n * Provides access to a component instance of a specified component type.\r\n *\r\n * @example\r\n *\r\n * This is how you extend this class to create your own custom\r\n * component:\r\n *\r\n * ```js\r\n * import { Component, Type } from '@wonderlandengine/api';\r\n *\r\n * export class MyComponent extends Component {\r\n *     static TypeName = 'my-component';\r\n *     static Properties = {\r\n *         myBoolean: { type: Type.Boolean, default: false },\r\n *     };\r\n *     start() {}\r\n *     onActivate() {}\r\n *     onDeactivate() {}\r\n *     update(dt) {}\r\n * }\r\n * ```\r\n */\r\nexport class Component {\r\n    /**\r\n     * `true` for every class inheriting from this class.\r\n     *\r\n     * @note This is a workaround for `instanceof` to prevent issues\r\n     * that could arise when an application ends up using multiple API versions.\r\n     *\r\n     * @hidden\r\n     */\r\n    static _isBaseComponent = true;\r\n    /**\r\n     * Unique identifier for this component class.\r\n     *\r\n     * This is used to register, add, and retrieve components of a given type.\r\n     */\r\n    static TypeName;\r\n    /**\r\n     * Properties of this component class.\r\n     *\r\n     * Properties are public attributes that can be configured via the\r\n     * Wonderland Editor.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * import { Component, Type } from '@wonderlandengine/api';\r\n     * class MyComponent extends Component {\r\n     *     static TypeName = 'my-component';\r\n     *     static Properties = {\r\n     *         myBoolean: { type: Type.Boolean, default: false },\r\n     *         myFloat: { type: Type.Float, default: false },\r\n     *         myTexture: { type: Type.Texture, default: null },\r\n     *     };\r\n     * }\r\n     * ```\r\n     *\r\n     * Properties are automatically added to each component instance, and are\r\n     * accessible like any JS attribute:\r\n     *\r\n     * ```js\r\n     * // Creates a new component and set each properties value:\r\n     * const myComponent = object.addComponent(MyComponent, {\r\n     *     myBoolean: true,\r\n     *     myFloat: 42.0,\r\n     *     myTexture: null\r\n     * });\r\n     *\r\n     * // You can also override the properties on the instance:\r\n     * myComponent.myBoolean = false;\r\n     * myComponent.myFloat = -42.0;\r\n     * ```\r\n     *\r\n     * #### References\r\n     *\r\n     * Reference types (i.e., mesh, object, etc...) can also be listed as **required**:\r\n     *\r\n     * ```js\r\n     * import {Component, Property} from '@wonderlandengine/api';\r\n     *\r\n     * class MyComponent extends Component {\r\n     *     static Properties = {\r\n     *         myObject: Property.object({required: true}),\r\n     *         myAnimation: Property.animation({required: true}),\r\n     *         myTexture: Property.texture({required: true}),\r\n     *         myMesh: Property.mesh({required: true}),\r\n     *     }\r\n     * }\r\n     * ```\r\n     *\r\n     * Please note that references are validated **once** before the call to {@link Component.start} only,\r\n     * via the {@link Component.validateProperties} method.\r\n     */\r\n    static Properties;\r\n    /**\r\n     * When set to `true`, the child class inherits from the parent\r\n     * properties, as shown in the following example:\r\n     *\r\n     * ```js\r\n     * import {Component, Property} from '@wonderlandengine/api';\r\n     *\r\n     * class Parent extends Component {\r\n     *     static TypeName = 'parent';\r\n     *     static Properties = {parentName: Property.string('parent')}\r\n     * }\r\n     *\r\n     * class Child extends Parent {\r\n     *     static TypeName = 'child';\r\n     *     static Properties = {name: Property.string('child')}\r\n     *     static InheritProperties = true;\r\n     *\r\n     *     start() {\r\n     *         // Works because `InheritProperties` is `true`.\r\n     *         console.log(`${this.name} inherits from ${this.parentName}`);\r\n     *     }\r\n     * }\r\n     * ```\r\n     *\r\n     * @note Properties defined in descendant classes will override properties\r\n     * with the same name defined in ancestor classes.\r\n     *\r\n     * Defaults to `true`.\r\n     */\r\n    static InheritProperties;\r\n    /**\r\n     * Called when this component class is registered.\r\n     *\r\n     * @example\r\n     *\r\n     * This callback can be used to register dependencies of a component,\r\n     * e.g., component classes that need to be registered in order to add\r\n     * them at runtime with {@link Object3D.addComponent}, independent of whether\r\n     * they are used in the editor.\r\n     *\r\n     * ```js\r\n     * class Spawner extends Component {\r\n     *     static TypeName = 'spawner';\r\n     *\r\n     *     static onRegister(engine) {\r\n     *         engine.registerComponent(SpawnedComponent);\r\n     *     }\r\n     *\r\n     *     // You can now use addComponent with SpawnedComponent\r\n     * }\r\n     * ```\r\n     *\r\n     * @example\r\n     *\r\n     * This callback can be used to register different implementations of a\r\n     * component depending on client features or API versions.\r\n     *\r\n     * ```js\r\n     * // Properties need to be the same for all implementations!\r\n     * const SharedProperties = {};\r\n     *\r\n     * class Anchor extends Component {\r\n     *     static TypeName = 'spawner';\r\n     *     static Properties = SharedProperties;\r\n     *\r\n     *     static onRegister(engine) {\r\n     *         if(navigator.xr === undefined) {\r\n     *             /* WebXR unsupported, keep this dummy component *\\/\r\n     *             return;\r\n     *         }\r\n     *         /* WebXR supported! Override already registered dummy implementation\r\n     *          * with one depending on hit-test API support *\\/\r\n     *         engine.registerComponent(window.HitTestSource === undefined ?\r\n     *             AnchorWithoutHitTest : AnchorWithHitTest);\r\n     *     }\r\n     *\r\n     *     // This one implements no functions\r\n     * }\r\n     * ```\r\n     */\r\n    static onRegister;\r\n    /**\r\n     * Allows to inherit properties directly inside the editor.\r\n     *\r\n     * @note Do not use directly, prefer using {@link inheritProperties}.\r\n     *\r\n     * @hidden\r\n     */\r\n    static _inheritProperties() {\r\n        inheritProperties(this);\r\n    }\r\n    /** Manager index. @hidden */\r\n    _manager;\r\n    /** Instance index. @hidden */\r\n    _id;\r\n    /**\r\n     * Object containing this object.\r\n     *\r\n     * **Note**: This is cached for faster retrieval.\r\n     *\r\n     * @hidden\r\n     */\r\n    _object;\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /**\r\n     * Create a new instance\r\n     *\r\n     * @param engine The engine instance.\r\n     * @param manager Index of the manager.\r\n     * @param id WASM component instance index.\r\n     *\r\n     * @hidden\r\n     */\r\n    constructor(engine, manager = -1, id = -1) {\r\n        this._engine = engine;\r\n        this._manager = manager;\r\n        this._id = id;\r\n        this._object = null;\r\n    }\r\n    /** Hosting engine instance. */\r\n    get engine() {\r\n        return this._engine;\r\n    }\r\n    /** The name of this component's type */\r\n    get type() {\r\n        const ctor = this.constructor;\r\n        return ctor.TypeName ?? this._engine.wasm._typeNameFor(this._manager);\r\n    }\r\n    /** The object this component is attached to. */\r\n    get object() {\r\n        if (!this._object) {\r\n            const objectId = this._engine.wasm._wl_component_get_object(this._manager, this._id);\r\n            this._object = this._engine.wrapObject(objectId);\r\n        }\r\n        return this._object;\r\n    }\r\n    /**\r\n     * Set whether this component is active.\r\n     *\r\n     * Activating/deactivating a component comes at a small cost of reordering\r\n     * components in the respective component manager. This function therefore\r\n     * is not a trivial assignment.\r\n     *\r\n     * Does nothing if the component is already activated/deactivated.\r\n     *\r\n     * @param active New active state.\r\n     */\r\n    set active(active) {\r\n        this._engine.wasm._wl_component_setActive(this._manager, this._id, active);\r\n    }\r\n    /**\r\n     * Whether this component is active\r\n     */\r\n    get active() {\r\n        return this._engine.wasm._wl_component_isActive(this._manager, this._id) != 0;\r\n    }\r\n    /**\r\n     * Copy all the properties from `src` into this instance.\r\n     *\r\n     * @note Only properties are copied. If a component needs to\r\n     * copy extra data, it needs to override this method.\r\n     *\r\n     * #### Example\r\n     *\r\n     * ```js\r\n     * class MyComponent extends Component {\r\n     *     nonPropertyData = 'Hello World';\r\n     *\r\n     *     copy(src) {\r\n     *         super.copy(src);\r\n     *         this.nonPropertyData = src.nonPropertyData;\r\n     *         return this;\r\n     *     }\r\n     * }\r\n     * ```\r\n     *\r\n     * @note This method is called by {@link Object3D.clone}. Do not attempt to:\r\n     *     - Create new component\r\n     *     - Read references to other objects\r\n     *\r\n     * When cloning via {@link Object3D.clone}, this method will be called before\r\n     * {@link Component.start}.\r\n     *\r\n     * @note JavaScript component properties aren't retargeted. Thus, references\r\n     * inside the source object will not be retargeted to the destination object,\r\n     * at the exception of the skin data on {@link MeshComponent} and {@link AnimationComponent}.\r\n     *\r\n     * @param src The source component to copy from.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    copy(src) {\r\n        const ctor = this.constructor;\r\n        for (const name in ctor.Properties) {\r\n            const value = src[name];\r\n            if (value !== undefined) {\r\n                this[name] = value;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Remove this component from its objects and destroy it.\r\n     *\r\n     * It is best practice to set the component to `null` after,\r\n     * to ensure it does not get used later.\r\n     *\r\n     * ```js\r\n     *    c.destroy();\r\n     *    c = null;\r\n     * ```\r\n     * @since 0.9.0\r\n     */\r\n    destroy() {\r\n        const manager = this._manager;\r\n        if (manager < 0 || this._id < 0)\r\n            return;\r\n        /* Must be stored before destruction. */\r\n        const jsManager = this.engine.wasm._jsManagerIndex;\r\n        this._engine.wasm._wl_component_remove(manager, this._id);\r\n        /** @todo: Remove at 1.2.0 when a generic destroy is implemented\r\n         * for every manager. */\r\n        if (manager !== jsManager)\r\n            this._triggerOnDestroy();\r\n    }\r\n    /**\r\n     * Checks equality by comparing whether the wrapped native component ids\r\n     * and component manager types are equal.\r\n     *\r\n     * @param otherComponent Component to check equality with.\r\n     * @returns Whether this component equals the given component.\r\n     */\r\n    equals(otherComponent) {\r\n        if (!otherComponent)\r\n            return false;\r\n        return this._manager == otherComponent._manager && this._id == otherComponent._id;\r\n    }\r\n    /**\r\n     * Reset the component properties to default.\r\n     *\r\n     * @note This is automatically called during the component instantiation.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    resetProperties() {\r\n        const ctor = this.constructor;\r\n        const properties = ctor.Properties;\r\n        if (!properties)\r\n            return this;\r\n        for (const name in properties) {\r\n            this[name] = properties[name].default;\r\n        }\r\n        return this;\r\n    }\r\n    /** @deprecated Use {@link Component.resetProperties} instead. */\r\n    reset() {\r\n        return this.resetProperties();\r\n    }\r\n    /**\r\n     * Validate the properties on this instance.\r\n     *\r\n     * @throws If any of the required properties isn't initialized\r\n     * on this instance.\r\n     */\r\n    validateProperties() {\r\n        const ctor = this.constructor;\r\n        if (!ctor.Properties)\r\n            return;\r\n        for (const name in ctor.Properties) {\r\n            if (!ctor.Properties[name].required)\r\n                continue;\r\n            if (!this[name]) {\r\n                throw new Error(`Property '${name}' is required but was not initialized`);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * `true` if the component is destroyed, `false` otherwise.\r\n     *\r\n     * If {@link WonderlandEngine.erasePrototypeOnDestroy} is `true`,\r\n     * reading a custom property will not work:\r\n     *\r\n     * ```js\r\n     * engine.erasePrototypeOnDestroy = true;\r\n     *\r\n     * const comp = obj.addComponent('mesh');\r\n     * comp.customParam = 'Hello World!';\r\n     *\r\n     * console.log(comp.isDestroyed); // Prints `false`\r\n     * comp.destroy();\r\n     * console.log(comp.isDestroyed); // Prints `true`\r\n     * console.log(comp.customParam); // Throws an error\r\n     * ```\r\n     *\r\n     * @since 1.1.1\r\n     */\r\n    get isDestroyed() {\r\n        return this._id < 0;\r\n    }\r\n    /**\r\n     * Trigger the component {@link Component.init} method.\r\n     *\r\n     * @note Use this method instead of directly calling {@link Component.init},\r\n     * because this method creates an handler for the {@link Component.start}.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @hidden\r\n     */\r\n    _triggerInit() {\r\n        if (this.init) {\r\n            try {\r\n                this.init();\r\n            }\r\n            catch (e) {\r\n                this.engine.log.error(LogTag.Component, `Exception during ${this.type} init() on object ${this.object.name}`);\r\n                this.engine.log.error(LogTag.Component, e);\r\n            }\r\n        }\r\n        /* Arm onActivate() with the initial start() call */\r\n        const oldActivate = this.onActivate;\r\n        this.onActivate = function () {\r\n            this.onActivate = oldActivate;\r\n            let failed = false;\r\n            try {\r\n                this.validateProperties();\r\n            }\r\n            catch (e) {\r\n                this.engine.log.error(LogTag.Component, `Exception during ${this.type} validateProperties() on object ${this.object.name}`);\r\n                this.engine.log.error(LogTag.Component, e);\r\n                failed = true;\r\n            }\r\n            try {\r\n                this.start?.();\r\n            }\r\n            catch (e) {\r\n                this.engine.log.error(LogTag.Component, `Exception during ${this.type} start() on object ${this.object.name}`);\r\n                this.engine.log.error(LogTag.Component, e);\r\n                failed = true;\r\n            }\r\n            if (failed) {\r\n                this.active = false;\r\n                return;\r\n            }\r\n            if (!this.onActivate)\r\n                return;\r\n            try {\r\n                this.onActivate();\r\n            }\r\n            catch (e) {\r\n                this.engine.log.error(LogTag.Component, `Exception during ${this.type} onActivate() on object ${this.object.name}`);\r\n                this.engine.log.error(LogTag.Component, e);\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Trigger the component {@link Component.update} method.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @hidden\r\n     */\r\n    _triggerUpdate(dt) {\r\n        if (!this.update)\r\n            return;\r\n        try {\r\n            this.update(dt);\r\n        }\r\n        catch (e) {\r\n            this.engine.log.error(LogTag.Component, `Exception during ${this.type} update() on object ${this.object.name}`);\r\n            this.engine.log.error(LogTag.Component, e);\r\n            if (this._engine.wasm._deactivate_component_on_error) {\r\n                this.active = false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Trigger the component {@link Component.onActivate} method.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @hidden\r\n     */\r\n    _triggerOnActivate() {\r\n        if (!this.onActivate)\r\n            return;\r\n        try {\r\n            this.onActivate();\r\n        }\r\n        catch (e) {\r\n            this.engine.log.error(LogTag.Component, `Exception during ${this.type} onActivate() on object ${this.object.name}`);\r\n            this.engine.log.error(LogTag.Component, e);\r\n        }\r\n    }\r\n    /**\r\n     * Trigger the component {@link Component.onDeactivate} method.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @hidden\r\n     */\r\n    _triggerOnDeactivate() {\r\n        if (!this.onDeactivate)\r\n            return;\r\n        try {\r\n            this.onDeactivate();\r\n        }\r\n        catch (e) {\r\n            this.engine.log.error(LogTag.Component, `Exception during ${this.type} onDeactivate() on object ${this.object.name}`);\r\n            this.engine.log.error(LogTag.Component, e);\r\n        }\r\n    }\r\n    /**\r\n     * Trigger the component {@link Component.onDestroy} method.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @hidden\r\n     */\r\n    _triggerOnDestroy() {\r\n        try {\r\n            if (this.onDestroy)\r\n                this.onDestroy();\r\n        }\r\n        catch (e) {\r\n            this.engine.log.error(LogTag.Component, `Exception during ${this.type} onDestroy() on object ${this.object.name}`);\r\n            this.engine.log.error(LogTag.Component, e);\r\n        }\r\n        this._engine._destroyComponent(this);\r\n    }\r\n}\r\n/**\r\n * Components must be registered before loading / appending a scene.\r\n *\r\n * It's possible to end up with a broken component in the following cases:\r\n *\r\n * - Component wasn't registered when the scene was loaded\r\n * - Component instantiation failed\r\n *\r\n * This dummy component is thus used as a placeholder by the engine.\r\n */\r\nexport class BrokenComponent extends Component {\r\n    static TypeName = '__broken-component__';\r\n}\r\n/**\r\n * Merge the ascendant properties of class\r\n *\r\n * This method walks the prototype chain, and merges\r\n * all the properties found in parent components.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * import {Property, inheritProperties} from '@wonderlandengine/api';\r\n *\r\n * class Parent {\r\n *     static Properties = { parentProp: Property.string('parent') };\r\n * }\r\n *\r\n * class Child extends Parent {\r\n *     static Properties = { childProp: Property.string('child') };\r\n * }\r\n * inheritProperties(Child);\r\n * ```\r\n *\r\n * @param target The class in which properties should be merged\r\n *\r\n * @hidden\r\n */\r\nexport function inheritProperties(target) {\r\n    if (!target.TypeName)\r\n        return;\r\n    const chain = [];\r\n    let curr = target;\r\n    while (curr && !isBaseComponentClass(curr)) {\r\n        const comp = curr;\r\n        /* Stop at the first class that doesn't require properties merging */\r\n        const needsMerge = comp.hasOwnProperty('InheritProperties')\r\n            ? comp.InheritProperties\r\n            : true;\r\n        if (!needsMerge)\r\n            break;\r\n        if (comp.TypeName && comp.hasOwnProperty('Properties')) {\r\n            chain.push(comp.Properties);\r\n        }\r\n        curr = Object.getPrototypeOf(curr);\r\n    }\r\n    /* No prototype merge is needed. */\r\n    if (chain.length <= 1)\r\n        return;\r\n    const merged = {};\r\n    for (let i = chain.length - 1; i >= 0; --i) {\r\n        Object.assign(merged, chain[i]);\r\n    }\r\n    target.Properties = merged;\r\n}\r\n/**\r\n * Native collision component.\r\n *\r\n * Provides access to a native collision component instance.\r\n */\r\nexport class CollisionComponent extends Component {\r\n    /** @override */\r\n    static TypeName = 'collision';\r\n    /** Collision component collider */\r\n    get collider() {\r\n        return this._engine.wasm._wl_collision_component_get_collider(this._id);\r\n    }\r\n    /**\r\n     * Set collision component collider.\r\n     *\r\n     * @param collider Collider of the collision component.\r\n     */\r\n    set collider(collider) {\r\n        this._engine.wasm._wl_collision_component_set_collider(this._id, collider);\r\n    }\r\n    /**\r\n     * Collision component extents.\r\n     *\r\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\r\n     * component of the returned vector is used.\r\n     */\r\n    get extents() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_collision_component_get_extents(this._id), 3);\r\n    }\r\n    /**\r\n     * Set collision component extents.\r\n     *\r\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\r\n     * component of the passed vector is used.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * // Spans 1 unit on the x-axis, 2 on the y-axis, 3 on the z-axis.\r\n     * collision.extent = [1, 2, 3];\r\n     * ```\r\n     *\r\n     * @param extents Extents of the collision component, expects a\r\n     *      3 component array.\r\n     */\r\n    set extents(extents) {\r\n        this.extents.set(extents);\r\n    }\r\n    /**\r\n     * Get collision component radius.\r\n     *\r\n     * @note If {@link collider} is not {@link Collider.Sphere}, the returned value\r\n     * corresponds to the radius of a sphere enclosing the shape.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * sphere.radius = 3.0;\r\n     * console.log(sphere.radius); // 3.0\r\n     *\r\n     * box.extents = [2.0, 2.0, 2.0];\r\n     * console.log(box.radius); // 1.732...\r\n     * ```\r\n     *\r\n     */\r\n    get radius() {\r\n        const wasm = this._engine.wasm;\r\n        if (this.collider === Collider.Sphere)\r\n            return wasm.HEAPF32[wasm._wl_collision_component_get_extents(this._id) >> 2];\r\n        const extents = new Float32Array(wasm.HEAPF32.buffer, wasm._wl_collision_component_get_extents(this._id), 3);\r\n        const x2 = extents[0] * extents[0];\r\n        const y2 = extents[1] * extents[1];\r\n        const z2 = extents[2] * extents[2];\r\n        return Math.sqrt(x2 + y2 + z2) / 2;\r\n    }\r\n    /**\r\n     * Set collision component radius.\r\n     *\r\n     * @param radius Radius of the collision component\r\n     *\r\n     * @note If {@link collider} is not {@link Collider.Sphere},\r\n     * the extents are set to form a square that fits a sphere with the provided radius.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * aabbCollision.radius = 2.0; // AABB fits a sphere of radius 2.0\r\n     * boxCollision.radius = 3.0; // Box now fits a sphere of radius 3.0, keeping orientation\r\n     * ```\r\n     *\r\n     */\r\n    set radius(radius) {\r\n        const length = this.collider === Collider.Sphere ? radius : (2 * radius) / SQRT_3;\r\n        this.extents.set([length, length, length]);\r\n    }\r\n    /**\r\n     * Collision component group.\r\n     *\r\n     * The groups is a bitmask that is compared to other components in {@link CollisionComponent#queryOverlaps}\r\n     * or the group in {@link Scene#rayCast}.\r\n     *\r\n     * Colliders that have no common groups will not overlap with each other. If a collider\r\n     * has none of the groups set for {@link Scene#rayCast}, the ray will not hit it.\r\n     *\r\n     * Each bit represents belonging to a group, see example.\r\n     *\r\n     * ```js\r\n     *    // c belongs to group 2\r\n     *    c.group = (1 << 2);\r\n     *\r\n     *    // c belongs to group 0\r\n     *    c.group = (1 << 0);\r\n     *\r\n     *    // c belongs to group 0 *and* 2\r\n     *    c.group = (1 << 0) | (1 << 2);\r\n     *\r\n     *    (c.group & (1 << 2)) != 0; // true\r\n     *    (c.group & (1 << 7)) != 0; // false\r\n     * ```\r\n     */\r\n    get group() {\r\n        return this._engine.wasm._wl_collision_component_get_group(this._id);\r\n    }\r\n    /**\r\n     * Set collision component group.\r\n     *\r\n     * @param group Group mask of the collision component.\r\n     */\r\n    set group(group) {\r\n        this._engine.wasm._wl_collision_component_set_group(this._id, group);\r\n    }\r\n    /**\r\n     * Query overlapping objects.\r\n     *\r\n     * Usage:\r\n     *\r\n     * ```js\r\n     * const collision = object.getComponent('collision');\r\n     * const overlaps = collision.queryOverlaps();\r\n     * for(const otherCollision of overlaps) {\r\n     *     const otherObject = otherCollision.object;\r\n     *     console.log(`Collision with object ${otherObject.objectId}`);\r\n     * }\r\n     * ```\r\n     *\r\n     * @returns Collision components overlapping this collider.\r\n     */\r\n    queryOverlaps() {\r\n        const count = this._engine.wasm._wl_collision_component_query_overlaps(this._id, this._engine.wasm._tempMem, this._engine.wasm._tempMemSize >> 1);\r\n        const overlaps = new Array(count);\r\n        for (let i = 0; i < count; ++i) {\r\n            overlaps[i] = new CollisionComponent(this._engine, this._manager, this._engine.wasm._tempMemUint16[i]);\r\n        }\r\n        return overlaps;\r\n    }\r\n}\r\n__decorate([\r\n    nativeProperty()\r\n], CollisionComponent.prototype, \"collider\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], CollisionComponent.prototype, \"extents\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], CollisionComponent.prototype, \"group\", null);\r\n/**\r\n * Native text component\r\n *\r\n * Provides access to a native text component instance\r\n */\r\nexport class TextComponent extends Component {\r\n    /** @override */\r\n    static TypeName = 'text';\r\n    /** Text component alignment. */\r\n    get alignment() {\r\n        return this._engine.wasm._wl_text_component_get_horizontal_alignment(this._id);\r\n    }\r\n    /**\r\n     * Set text component alignment.\r\n     *\r\n     * @param alignment Alignment for the text component.\r\n     */\r\n    set alignment(alignment) {\r\n        this._engine.wasm._wl_text_component_set_horizontal_alignment(this._id, alignment);\r\n    }\r\n    /** Text component justification. */\r\n    get justification() {\r\n        return this._engine.wasm._wl_text_component_get_vertical_alignment(this._id);\r\n    }\r\n    /**\r\n     * Set text component justification.\r\n     *\r\n     * @param justification Justification for the text component.\r\n     */\r\n    set justification(justification) {\r\n        this._engine.wasm._wl_text_component_set_vertical_alignment(this._id, justification);\r\n    }\r\n    /** Text component character spacing. */\r\n    get characterSpacing() {\r\n        return this._engine.wasm._wl_text_component_get_character_spacing(this._id);\r\n    }\r\n    /**\r\n     * Set text component character spacing.\r\n     *\r\n     * @param spacing Character spacing for the text component.\r\n     */\r\n    set characterSpacing(spacing) {\r\n        this._engine.wasm._wl_text_component_set_character_spacing(this._id, spacing);\r\n    }\r\n    /** Text component line spacing. */\r\n    get lineSpacing() {\r\n        return this._engine.wasm._wl_text_component_get_line_spacing(this._id);\r\n    }\r\n    /**\r\n     * Set text component line spacing\r\n     *\r\n     * @param spacing Line spacing for the text component\r\n     */\r\n    set lineSpacing(spacing) {\r\n        this._engine.wasm._wl_text_component_set_line_spacing(this._id, spacing);\r\n    }\r\n    /** Text component effect. */\r\n    get effect() {\r\n        return this._engine.wasm._wl_text_component_get_effect(this._id);\r\n    }\r\n    /**\r\n     * Set text component effect\r\n     *\r\n     * @param effect Effect for the text component\r\n     */\r\n    set effect(effect) {\r\n        this._engine.wasm._wl_text_component_set_effect(this._id, effect);\r\n    }\r\n    /** Text component text. */\r\n    get text() {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_text_component_get_text(this._id);\r\n        return wasm.UTF8ToString(ptr);\r\n    }\r\n    /**\r\n     * Set text component text.\r\n     *\r\n     * @param text Text of the text component.\r\n     */\r\n    set text(text) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._wl_text_component_set_text(this._id, wasm.tempUTF8(text.toString()));\r\n    }\r\n    /**\r\n     * Set material to render the text with.\r\n     *\r\n     * @param material New material.\r\n     */\r\n    set material(material) {\r\n        const matIndex = material ? material._index : 0;\r\n        this._engine.wasm._wl_text_component_set_material(this._id, matIndex);\r\n    }\r\n    /** Material used to render the text. */\r\n    get material() {\r\n        const id = this._engine.wasm._wl_text_component_get_material(this._id);\r\n        return id > 0 ? new Material(this._engine, id) : null;\r\n    }\r\n}\r\n__decorate([\r\n    nativeProperty()\r\n], TextComponent.prototype, \"alignment\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], TextComponent.prototype, \"justification\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], TextComponent.prototype, \"characterSpacing\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], TextComponent.prototype, \"lineSpacing\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], TextComponent.prototype, \"effect\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], TextComponent.prototype, \"text\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], TextComponent.prototype, \"material\", null);\r\n/**\r\n * Native view component.\r\n *\r\n * Provides access to a native view component instance.\r\n */\r\nexport class ViewComponent extends Component {\r\n    /** @override */\r\n    static TypeName = 'view';\r\n    /** Projection matrix. */\r\n    get projectionMatrix() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_view_component_get_projection_matrix(this._id), 16);\r\n    }\r\n    /** ViewComponent near clipping plane value. */\r\n    get near() {\r\n        return this._engine.wasm._wl_view_component_get_near(this._id);\r\n    }\r\n    /**\r\n     * Set near clipping plane distance for the view.\r\n     *\r\n     * If an XR session is active, the change will apply in the\r\n     * following frame, otherwise the change is immediate.\r\n     *\r\n     * @param near Near depth value.\r\n     */\r\n    set near(near) {\r\n        this._engine.wasm._wl_view_component_set_near(this._id, near);\r\n    }\r\n    /** Far clipping plane value. */\r\n    get far() {\r\n        return this._engine.wasm._wl_view_component_get_far(this._id);\r\n    }\r\n    /**\r\n     * Set far clipping plane distance for the view.\r\n     *\r\n     * If an XR session is active, the change will apply in the\r\n     * following frame, otherwise the change is immediate.\r\n     *\r\n     * @param far Near depth value.\r\n     */\r\n    set far(far) {\r\n        this._engine.wasm._wl_view_component_set_far(this._id, far);\r\n    }\r\n    /**\r\n     * Get the horizontal field of view for the view, **in degrees**.\r\n     *\r\n     * If an XR session is active, this returns the field of view reported by\r\n     * the device, regardless of the fov that was set.\r\n     */\r\n    get fov() {\r\n        return this._engine.wasm._wl_view_component_get_fov(this._id);\r\n    }\r\n    /**\r\n     * Set the horizontal field of view for the view, **in degrees**.\r\n     *\r\n     * If an XR session is active, the field of view reported by the device is\r\n     * used and this value is ignored. After the XR session ends, the new value\r\n     * is applied.\r\n     *\r\n     * @param fov Horizontal field of view, **in degrees**.\r\n     */\r\n    set fov(fov) {\r\n        this._engine.wasm._wl_view_component_set_fov(this._id, fov);\r\n    }\r\n}\r\n__decorate([\r\n    enumerable()\r\n], ViewComponent.prototype, \"projectionMatrix\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], ViewComponent.prototype, \"near\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], ViewComponent.prototype, \"far\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], ViewComponent.prototype, \"fov\", null);\r\n/**\r\n * Native input component.\r\n *\r\n * Provides access to a native input component instance.\r\n */\r\nexport class InputComponent extends Component {\r\n    /** @override */\r\n    static TypeName = 'input';\r\n    /** Input component type */\r\n    get inputType() {\r\n        return this._engine.wasm._wl_input_component_get_type(this._id);\r\n    }\r\n    /**\r\n     * Set input component type.\r\n     *\r\n     * @params New input component type.\r\n     */\r\n    set inputType(type) {\r\n        this._engine.wasm._wl_input_component_set_type(this._id, type);\r\n    }\r\n    /**\r\n     * WebXR Device API input source associated with this input component,\r\n     * if type {@link InputType.ControllerLeft} or {@link InputType.ControllerRight}.\r\n     */\r\n    get xrInputSource() {\r\n        const xr = this._engine.xr;\r\n        if (!xr)\r\n            return null;\r\n        for (let inputSource of xr.session.inputSources) {\r\n            if (inputSource.handedness == this.handedness) {\r\n                return inputSource;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * 'left', 'right' or `null` depending on the {@link InputComponent#inputType}.\r\n     */\r\n    get handedness() {\r\n        const inputType = this.inputType;\r\n        if (inputType == InputType.ControllerRight ||\r\n            inputType == InputType.RayRight ||\r\n            inputType == InputType.EyeRight)\r\n            return 'right';\r\n        if (inputType == InputType.ControllerLeft ||\r\n            inputType == InputType.RayLeft ||\r\n            inputType == InputType.EyeLeft)\r\n            return 'left';\r\n        return null;\r\n    }\r\n}\r\n__decorate([\r\n    nativeProperty()\r\n], InputComponent.prototype, \"inputType\", null);\r\n__decorate([\r\n    enumerable()\r\n], InputComponent.prototype, \"xrInputSource\", null);\r\n__decorate([\r\n    enumerable()\r\n], InputComponent.prototype, \"handedness\", null);\r\n/**\r\n * Native light component.\r\n *\r\n * Provides access to a native light component instance.\r\n */\r\nexport class LightComponent extends Component {\r\n    /** @override */\r\n    static TypeName = 'light';\r\n    getColor(out = new Float32Array(3)) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_light_component_get_color(this._id) / 4; /* Align F32 */\r\n        out[0] = wasm.HEAPF32[ptr];\r\n        out[1] = wasm.HEAPF32[ptr + 1];\r\n        out[2] = wasm.HEAPF32[ptr + 2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set light color.\r\n     *\r\n     * @param c New color array/vector, expected to have at least 3 elements.\r\n     * @since 1.0.0\r\n     */\r\n    setColor(c) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_light_component_get_color(this._id) / 4; /* Align F32 */\r\n        wasm.HEAPF32[ptr] = c[0];\r\n        wasm.HEAPF32[ptr + 1] = c[1];\r\n        wasm.HEAPF32[ptr + 2] = c[2];\r\n    }\r\n    /**\r\n     * View on the light color.\r\n     *\r\n     * @note Prefer to use {@link getColor} in performance-critical code.\r\n     */\r\n    get color() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_light_component_get_color(this._id), 3);\r\n    }\r\n    /**\r\n     * Set light color.\r\n     *\r\n     * @param c Color of the light component.\r\n     *\r\n     * @note Prefer to use {@link setColor} in performance-critical code.\r\n     */\r\n    set color(c) {\r\n        this.color.set(c);\r\n    }\r\n    /** Light type. */\r\n    get lightType() {\r\n        return this._engine.wasm._wl_light_component_get_type(this._id);\r\n    }\r\n    /**\r\n     * Set light type.\r\n     *\r\n     * @param lightType Type of the light component.\r\n     */\r\n    set lightType(t) {\r\n        this._engine.wasm._wl_light_component_set_type(this._id, t);\r\n    }\r\n    /**\r\n     * Light intensity.\r\n     * @since 1.0.0\r\n     */\r\n    get intensity() {\r\n        return this._engine.wasm._wl_light_component_get_intensity(this._id);\r\n    }\r\n    /**\r\n     * Set light intensity.\r\n     *\r\n     * @param intensity Intensity of the light component.\r\n     * @since 1.0.0\r\n     */\r\n    set intensity(intensity) {\r\n        this._engine.wasm._wl_light_component_set_intensity(this._id, intensity);\r\n    }\r\n    /**\r\n     * Outer angle for spot lights, in degrees.\r\n     * @since 1.0.0\r\n     */\r\n    get outerAngle() {\r\n        return this._engine.wasm._wl_light_component_get_outerAngle(this._id);\r\n    }\r\n    /**\r\n     * Set outer angle for spot lights.\r\n     *\r\n     * @param angle Outer angle, in degrees.\r\n     * @since 1.0.0\r\n     */\r\n    set outerAngle(angle) {\r\n        this._engine.wasm._wl_light_component_set_outerAngle(this._id, angle);\r\n    }\r\n    /**\r\n     * Inner angle for spot lights, in degrees.\r\n     * @since 1.0.0\r\n     */\r\n    get innerAngle() {\r\n        return this._engine.wasm._wl_light_component_get_innerAngle(this._id);\r\n    }\r\n    /**\r\n     * Set inner angle for spot lights.\r\n     *\r\n     * @param angle Inner angle, in degrees.\r\n     * @since 1.0.0\r\n     */\r\n    set innerAngle(angle) {\r\n        this._engine.wasm._wl_light_component_set_innerAngle(this._id, angle);\r\n    }\r\n    /**\r\n     * Whether the light casts shadows.\r\n     * @since 1.0.0\r\n     */\r\n    get shadows() {\r\n        return !!this._engine.wasm._wl_light_component_get_shadows(this._id);\r\n    }\r\n    /**\r\n     * Set whether the light casts shadows.\r\n     *\r\n     * @param b Whether the light casts shadows.\r\n     * @since 1.0.0\r\n     */\r\n    set shadows(b) {\r\n        this._engine.wasm._wl_light_component_set_shadows(this._id, b);\r\n    }\r\n    /**\r\n     * Range for shadows.\r\n     * @since 1.0.0\r\n     */\r\n    get shadowRange() {\r\n        return this._engine.wasm._wl_light_component_get_shadowRange(this._id);\r\n    }\r\n    /**\r\n     * Set range for shadows.\r\n     *\r\n     * @param range Range for shadows.\r\n     * @since 1.0.0\r\n     */\r\n    set shadowRange(range) {\r\n        this._engine.wasm._wl_light_component_set_shadowRange(this._id, range);\r\n    }\r\n    /**\r\n     * Bias value for shadows.\r\n     * @since 1.0.0\r\n     */\r\n    get shadowBias() {\r\n        return this._engine.wasm._wl_light_component_get_shadowBias(this._id);\r\n    }\r\n    /**\r\n     * Set bias value for shadows.\r\n     *\r\n     * @param bias Bias for shadows.\r\n     * @since 1.0.0\r\n     */\r\n    set shadowBias(bias) {\r\n        this._engine.wasm._wl_light_component_set_shadowBias(this._id, bias);\r\n    }\r\n    /**\r\n     * Normal bias value for shadows.\r\n     * @since 1.0.0\r\n     */\r\n    get shadowNormalBias() {\r\n        return this._engine.wasm._wl_light_component_get_shadowNormalBias(this._id);\r\n    }\r\n    /**\r\n     * Set normal bias value for shadows.\r\n     *\r\n     * @param bias Normal bias for shadows.\r\n     * @since 1.0.0\r\n     */\r\n    set shadowNormalBias(bias) {\r\n        this._engine.wasm._wl_light_component_set_shadowNormalBias(this._id, bias);\r\n    }\r\n    /**\r\n     * Texel size for shadows.\r\n     * @since 1.0.0\r\n     */\r\n    get shadowTexelSize() {\r\n        return this._engine.wasm._wl_light_component_get_shadowTexelSize(this._id);\r\n    }\r\n    /**\r\n     * Set texel size for shadows.\r\n     *\r\n     * @param size Texel size for shadows.\r\n     * @since 1.0.0\r\n     */\r\n    set shadowTexelSize(size) {\r\n        this._engine.wasm._wl_light_component_set_shadowTexelSize(this._id, size);\r\n    }\r\n    /**\r\n     * Cascade count for {@link LightType.Sun} shadows.\r\n     * @since 1.0.0\r\n     */\r\n    get cascadeCount() {\r\n        return this._engine.wasm._wl_light_component_get_cascadeCount(this._id);\r\n    }\r\n    /**\r\n     * Set cascade count for {@link LightType.Sun} shadows.\r\n     *\r\n     * @param count Cascade count.\r\n     * @since 1.0.0\r\n     */\r\n    set cascadeCount(count) {\r\n        this._engine.wasm._wl_light_component_set_cascadeCount(this._id, count);\r\n    }\r\n}\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"color\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"lightType\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"intensity\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"outerAngle\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"innerAngle\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"shadows\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"shadowRange\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"shadowBias\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"shadowNormalBias\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"shadowTexelSize\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], LightComponent.prototype, \"cascadeCount\", null);\r\n/**\r\n * Native animation component.\r\n *\r\n * Provides access to a native animation component instance.\r\n */\r\nexport class AnimationComponent extends Component {\r\n    /** @override */\r\n    static TypeName = 'animation';\r\n    /**\r\n     * Set animation to play.\r\n     *\r\n     * Make sure to {@link Animation#retarget} the animation to affect the\r\n     * right objects.\r\n     *\r\n     * @param anim Animation to play.\r\n     */\r\n    set animation(anim) {\r\n        this._engine.wasm._wl_animation_component_set_animation(this._id, anim ? anim._index : 0);\r\n    }\r\n    /** Animation set for this component */\r\n    get animation() {\r\n        const id = this._engine.wasm._wl_animation_component_get_animation(this._id);\r\n        return id > 0 ? new Animation(this._engine, id) : null;\r\n    }\r\n    /**\r\n     * Set play count. Set to `0` to loop indefinitely.\r\n     *\r\n     * @param playCount Number of times to repeat the animation.\r\n     */\r\n    set playCount(playCount) {\r\n        this._engine.wasm._wl_animation_component_set_playCount(this._id, playCount);\r\n    }\r\n    /** Number of times the animation is played. */\r\n    get playCount() {\r\n        return this._engine.wasm._wl_animation_component_get_playCount(this._id);\r\n    }\r\n    /**\r\n     * Set speed. Set to negative values to run the animation backwards.\r\n     *\r\n     * Setting speed has an immediate effect for the current frame's update\r\n     * and will continue with the speed from the current point in the animation.\r\n     *\r\n     * @param speed New speed at which to play the animation.\r\n     * @since 0.8.10\r\n     */\r\n    set speed(speed) {\r\n        this._engine.wasm._wl_animation_component_set_speed(this._id, speed);\r\n    }\r\n    /**\r\n     * Speed factor at which the animation is played.\r\n     *\r\n     * @since 0.8.10\r\n     */\r\n    get speed() {\r\n        return this._engine.wasm._wl_animation_component_get_speed(this._id);\r\n    }\r\n    /** Current playing state of the animation */\r\n    get state() {\r\n        return this._engine.wasm._wl_animation_component_state(this._id);\r\n    }\r\n    /**\r\n     * Play animation.\r\n     *\r\n     * If the animation is currently paused, resumes from that position. If the\r\n     * animation is already playing, does nothing.\r\n     *\r\n     * To restart the animation, {@link AnimationComponent#stop} it first.\r\n     */\r\n    play() {\r\n        this._engine.wasm._wl_animation_component_play(this._id);\r\n    }\r\n    /** Stop animation. */\r\n    stop() {\r\n        this._engine.wasm._wl_animation_component_stop(this._id);\r\n    }\r\n    /** Pause animation. */\r\n    pause() {\r\n        this._engine.wasm._wl_animation_component_pause(this._id);\r\n    }\r\n}\r\n__decorate([\r\n    nativeProperty()\r\n], AnimationComponent.prototype, \"animation\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], AnimationComponent.prototype, \"playCount\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], AnimationComponent.prototype, \"speed\", null);\r\n__decorate([\r\n    enumerable()\r\n], AnimationComponent.prototype, \"state\", null);\r\n/**\r\n * Native mesh component.\r\n *\r\n * Provides access to a native mesh component instance.\r\n */\r\nexport class MeshComponent extends Component {\r\n    /** @override */\r\n    static TypeName = 'mesh';\r\n    /**\r\n     * Set material to render the mesh with.\r\n     *\r\n     * @param material Material to render the mesh with.\r\n     */\r\n    set material(material) {\r\n        this._engine.wasm._wl_mesh_component_set_material(this._id, material ? material._index : 0);\r\n    }\r\n    /** Material used to render the mesh. */\r\n    get material() {\r\n        const id = this._engine.wasm._wl_mesh_component_get_material(this._id);\r\n        return id > 0 ? new Material(this._engine, id) : null;\r\n    }\r\n    /** Mesh rendered by this component. */\r\n    get mesh() {\r\n        const id = this._engine.wasm._wl_mesh_component_get_mesh(this._id);\r\n        return id > 0 ? new Mesh(this._engine, id) : null;\r\n    }\r\n    /**\r\n     * Set mesh to rendered with this component.\r\n     *\r\n     * @param mesh Mesh rendered by this component.\r\n     */\r\n    set mesh(mesh) {\r\n        this._engine.wasm._wl_mesh_component_set_mesh(this._id, mesh ? mesh._index : 0);\r\n    }\r\n    /** Skin for this mesh component. */\r\n    get skin() {\r\n        const id = this._engine.wasm._wl_mesh_component_get_skin(this._id);\r\n        return id > 0 ? new Skin(this._engine, id) : null;\r\n    }\r\n    /**\r\n     * Set skin to transform this mesh component.\r\n     *\r\n     * @param skin Skin to use for rendering skinned meshes.\r\n     */\r\n    set skin(skin) {\r\n        this._engine.wasm._wl_mesh_component_set_skin(this._id, skin ? skin._index : 0);\r\n    }\r\n}\r\n__decorate([\r\n    nativeProperty()\r\n], MeshComponent.prototype, \"material\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], MeshComponent.prototype, \"mesh\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], MeshComponent.prototype, \"skin\", null);\r\n/**\r\n * Enum for Physics axes locking\r\n *\r\n * See {@link PhysXComponent.angularLockAxis} and {@link PhysXComponent.linearLockAxis}.\r\n */\r\nexport var LockAxis;\r\n(function (LockAxis) {\r\n    /**\r\n     * No axis selected.\r\n     */\r\n    LockAxis[LockAxis[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * **X axis**:\r\n     */\r\n    LockAxis[LockAxis[\"X\"] = 1] = \"X\";\r\n    /**\r\n     * **Y axis**:\r\n     */\r\n    LockAxis[LockAxis[\"Y\"] = 2] = \"Y\";\r\n    /**\r\n     * **Z axis**:\r\n     */\r\n    LockAxis[LockAxis[\"Z\"] = 4] = \"Z\";\r\n})(LockAxis || (LockAxis = {}));\r\n/**\r\n * Native physx rigid body component.\r\n *\r\n * Provides access to a native mesh component instance.\r\n * Only available when using physx enabled runtime, see \"Project Settings > Runtime\".\r\n */\r\nexport class PhysXComponent extends Component {\r\n    /** @override */\r\n    static TypeName = 'physx';\r\n    getTranslationOffset(out = new Float32Array(3)) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._wl_physx_component_get_offsetTranslation(this._id, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    getRotationOffset(out = new Float32Array(4)) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_physx_component_get_offsetTransform(this._id) >> 2; /* Align F32 */\r\n        out[0] = wasm.HEAPF32[ptr];\r\n        out[1] = wasm.HEAPF32[ptr + 1];\r\n        out[2] = wasm.HEAPF32[ptr + 2];\r\n        out[3] = wasm.HEAPF32[ptr + 3];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set whether this rigid body is static.\r\n     *\r\n     * Setting this property only takes effect once the component\r\n     * switches from inactive to active.\r\n     *\r\n     * @param b Whether the rigid body should be static.\r\n     */\r\n    set static(b) {\r\n        this._engine.wasm._wl_physx_component_set_static(this._id, b);\r\n    }\r\n    /**\r\n     * Whether this rigid body is static.\r\n     *\r\n     * This property returns whether the rigid body is *effectively*\r\n     * static. If static property was set while the rigid body was\r\n     * active, it will not take effect until the rigid body is set\r\n     * inactive and active again. Until the component is set inactive,\r\n     * this getter will return whether the rigid body is actually\r\n     * static.\r\n     */\r\n    get static() {\r\n        return !!this._engine.wasm._wl_physx_component_get_static(this._id);\r\n    }\r\n    /**\r\n     * Equivalent to {@link PhysXComponent.getTranslationOffset}.\r\n     *\r\n     * Gives a quick view of the offset in a debugger.\r\n     *\r\n     * @note Prefer to use {@link PhysXComponent.getTranslationOffset} for performance.\r\n     *\r\n     * @since 1.1.1\r\n     */\r\n    get translationOffset() {\r\n        return this.getTranslationOffset();\r\n    }\r\n    /**\r\n     * Set the offset translation.\r\n     *\r\n     * The array must be a vector of at least **3** elements.\r\n     *\r\n     * @note The component must be re-activated to apply the change.\r\n     *\r\n     * @since 1.1.1\r\n     */\r\n    set translationOffset(offset) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._wl_physx_component_set_offsetTranslation(this._id, offset[0], offset[1], offset[2]);\r\n    }\r\n    /**\r\n     * Equivalent to {@link PhysXComponent.getRotationOffset}.\r\n     *\r\n     * Gives a quick view of the offset in a debugger.\r\n     *\r\n     * @note Prefer to use {@link PhysXComponent.getRotationOffset} for performance.\r\n     *\r\n     * @since 1.1.1\r\n     */\r\n    get rotationOffset() {\r\n        return this.getRotationOffset();\r\n    }\r\n    /**\r\n     * Set the offset rotation.\r\n     *\r\n     * The array must be a quaternion of at least **4** elements.\r\n     *\r\n     * @note The component must be re-activated to apply the change.\r\n     *\r\n     * @since 1.1.1\r\n     */\r\n    set rotationOffset(offset) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._wl_physx_component_set_offsetRotation(this._id, offset[0], offset[1], offset[2], offset[3]);\r\n    }\r\n    /**\r\n     * Set whether this rigid body is kinematic.\r\n     *\r\n     * @param b Whether the rigid body should be kinematic.\r\n     */\r\n    set kinematic(b) {\r\n        this._engine.wasm._wl_physx_component_set_kinematic(this._id, b);\r\n    }\r\n    /**\r\n     * Whether this rigid body is kinematic.\r\n     */\r\n    get kinematic() {\r\n        return !!this._engine.wasm._wl_physx_component_get_kinematic(this._id);\r\n    }\r\n    /**\r\n     * Set whether this rigid body's gravity is enabled.\r\n     *\r\n     * @param b Whether the rigid body's gravity should be enabled.\r\n     */\r\n    set gravity(b) {\r\n        this._engine.wasm._wl_physx_component_set_gravity(this._id, b);\r\n    }\r\n    /**\r\n     * Whether this rigid body's gravity flag is enabled.\r\n     */\r\n    get gravity() {\r\n        return !!this._engine.wasm._wl_physx_component_get_gravity(this._id);\r\n    }\r\n    /**\r\n     * Set whether this rigid body's simulate flag is enabled.\r\n     *\r\n     * @param b Whether the rigid body's simulate flag should be enabled.\r\n     */\r\n    set simulate(b) {\r\n        this._engine.wasm._wl_physx_component_set_simulate(this._id, b);\r\n    }\r\n    /**\r\n     * Whether this rigid body's simulate flag is enabled.\r\n     */\r\n    get simulate() {\r\n        return !!this._engine.wasm._wl_physx_component_get_simulate(this._id);\r\n    }\r\n    /**\r\n     * Set whether to allow simulation of this rigid body.\r\n     *\r\n     * {@link allowSimulation} and {@link trigger} can not be enabled at the\r\n     * same time. Enabling {@link allowSimulation} while {@link trigger} is enabled\r\n     * will disable {@link trigger}.\r\n     *\r\n     * @param b Whether to allow simulation of this rigid body.\r\n     */\r\n    set allowSimulation(b) {\r\n        this._engine.wasm._wl_physx_component_set_allowSimulation(this._id, b);\r\n    }\r\n    /**\r\n     * Whether to allow simulation of this rigid body.\r\n     */\r\n    get allowSimulation() {\r\n        return !!this._engine.wasm._wl_physx_component_get_allowSimulation(this._id);\r\n    }\r\n    /**\r\n     * Set whether this rigid body may be queried in ray casts.\r\n     *\r\n     * @param b Whether this rigid body may be queried in ray casts.\r\n     */\r\n    set allowQuery(b) {\r\n        this._engine.wasm._wl_physx_component_set_allowQuery(this._id, b);\r\n    }\r\n    /**\r\n     * Whether this rigid body may be queried in ray casts.\r\n     */\r\n    get allowQuery() {\r\n        return !!this._engine.wasm._wl_physx_component_get_allowQuery(this._id);\r\n    }\r\n    /**\r\n     * Set whether this physics body is a trigger.\r\n     *\r\n     * {@link allowSimulation} and {@link trigger} can not be enabled at the\r\n     * same time. Enabling trigger while {@link allowSimulation} is enabled,\r\n     * will disable {@link allowSimulation}.\r\n     *\r\n     * @param b Whether this physics body is a trigger.\r\n     */\r\n    set trigger(b) {\r\n        this._engine.wasm._wl_physx_component_set_trigger(this._id, b);\r\n    }\r\n    /**\r\n     * Whether this physics body is a trigger.\r\n     */\r\n    get trigger() {\r\n        return !!this._engine.wasm._wl_physx_component_get_trigger(this._id);\r\n    }\r\n    /**\r\n     * Set the shape for collision detection.\r\n     *\r\n     * @param s New shape.\r\n     * @since 0.8.5\r\n     */\r\n    set shape(s) {\r\n        this._engine.wasm._wl_physx_component_set_shape(this._id, s);\r\n    }\r\n    /** The shape for collision detection. */\r\n    get shape() {\r\n        return this._engine.wasm._wl_physx_component_get_shape(this._id);\r\n    }\r\n    /**\r\n     * Set additional data for the shape.\r\n     *\r\n     * Retrieved only from {@link PhysXComponent#shapeData}.\r\n     * @since 0.8.10\r\n     */\r\n    set shapeData(d) {\r\n        if (d == null || !isMeshShape(this.shape))\r\n            return;\r\n        this._engine.wasm._wl_physx_component_set_shape_data(this._id, d.index);\r\n    }\r\n    /**\r\n     * Additional data for the shape.\r\n     *\r\n     * `null` for {@link Shape} values: `None`, `Sphere`, `Capsule`, `Box`, `Plane`.\r\n     * `{index: n}` for `TriangleMesh` and `ConvexHull`.\r\n     *\r\n     * This data is currently only for passing onto or creating other {@link PhysXComponent}.\r\n     * @since 0.8.10\r\n     */\r\n    get shapeData() {\r\n        if (!isMeshShape(this.shape))\r\n            return null;\r\n        return {\r\n            index: this._engine.wasm._wl_physx_component_get_shape_data(this._id),\r\n        };\r\n    }\r\n    /**\r\n     * Set the shape extents for collision detection.\r\n     *\r\n     * @param e New extents for the shape.\r\n     * @since 0.8.5\r\n     */\r\n    set extents(e) {\r\n        this.extents.set(e);\r\n    }\r\n    /**\r\n     * The shape extents for collision detection.\r\n     */\r\n    get extents() {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_physx_component_get_extents(this._id);\r\n        return new Float32Array(wasm.HEAPF32.buffer, ptr, 3);\r\n    }\r\n    /**\r\n     * Get staticFriction.\r\n     */\r\n    get staticFriction() {\r\n        return this._engine.wasm._wl_physx_component_get_staticFriction(this._id);\r\n    }\r\n    /**\r\n     * Set staticFriction.\r\n     * @param v New staticFriction.\r\n     */\r\n    set staticFriction(v) {\r\n        this._engine.wasm._wl_physx_component_set_staticFriction(this._id, v);\r\n    }\r\n    /**\r\n     * Get dynamicFriction.\r\n     */\r\n    get dynamicFriction() {\r\n        return this._engine.wasm._wl_physx_component_get_dynamicFriction(this._id);\r\n    }\r\n    /**\r\n     * Set dynamicFriction\r\n     * @param v New dynamicDamping.\r\n     */\r\n    set dynamicFriction(v) {\r\n        this._engine.wasm._wl_physx_component_set_dynamicFriction(this._id, v);\r\n    }\r\n    /**\r\n     * Get bounciness.\r\n     * @since 0.9.0\r\n     */\r\n    get bounciness() {\r\n        return this._engine.wasm._wl_physx_component_get_bounciness(this._id);\r\n    }\r\n    /**\r\n     * Set bounciness.\r\n     * @param v New bounciness.\r\n     * @since 0.9.0\r\n     */\r\n    set bounciness(v) {\r\n        this._engine.wasm._wl_physx_component_set_bounciness(this._id, v);\r\n    }\r\n    /**\r\n     * Get linearDamping/\r\n     */\r\n    get linearDamping() {\r\n        return this._engine.wasm._wl_physx_component_get_linearDamping(this._id);\r\n    }\r\n    /**\r\n     * Set linearDamping.\r\n     * @param v New linearDamping.\r\n     */\r\n    set linearDamping(v) {\r\n        this._engine.wasm._wl_physx_component_set_linearDamping(this._id, v);\r\n    }\r\n    /** Get angularDamping. */\r\n    get angularDamping() {\r\n        return this._engine.wasm._wl_physx_component_get_angularDamping(this._id);\r\n    }\r\n    /**\r\n     * Set angularDamping.\r\n     * @param v New angularDamping.\r\n     */\r\n    set angularDamping(v) {\r\n        this._engine.wasm._wl_physx_component_set_angularDamping(this._id, v);\r\n    }\r\n    /**\r\n     * Set linear velocity.\r\n     *\r\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\r\n     *\r\n     * Has no effect, if the component is not active.\r\n     *\r\n     * @param v New linear velocity.\r\n     */\r\n    set linearVelocity(v) {\r\n        this._engine.wasm._wl_physx_component_set_linearVelocity(this._id, v[0], v[1], v[2]);\r\n    }\r\n    /** Linear velocity or `[0, 0, 0]` if the component is not active. */\r\n    get linearVelocity() {\r\n        const wasm = this._engine.wasm;\r\n        wasm._wl_physx_component_get_linearVelocity(this._id, wasm._tempMem);\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._tempMem, 3);\r\n    }\r\n    /**\r\n     * Set angular velocity\r\n     *\r\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\r\n     *\r\n     * Has no effect, if the component is not active.\r\n     *\r\n     * @param v New angular velocity\r\n     */\r\n    set angularVelocity(v) {\r\n        this._engine.wasm._wl_physx_component_set_angularVelocity(this._id, v[0], v[1], v[2]);\r\n    }\r\n    /** Angular velocity or `[0, 0, 0]` if the component is not active. */\r\n    get angularVelocity() {\r\n        const wasm = this._engine.wasm;\r\n        wasm._wl_physx_component_get_angularVelocity(this._id, wasm._tempMem);\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._tempMem, 3);\r\n    }\r\n    /**\r\n     * Set the components groups mask.\r\n     *\r\n     * @param flags New flags that need to be set.\r\n     */\r\n    set groupsMask(flags) {\r\n        this._engine.wasm._wl_physx_component_set_groupsMask(this._id, flags);\r\n    }\r\n    /**\r\n     * Get the components groups mask flags.\r\n     *\r\n     * Each bit represents membership to group, see example.\r\n     *\r\n     * ```js\r\n     * // Assign c to group 2\r\n     * c.groupsMask = (1 << 2);\r\n     *\r\n     * // Assign c to group 0\r\n     * c.groupsMask  = (1 << 0);\r\n     *\r\n     * // Assign c to group 0 and 2\r\n     * c.groupsMask = (1 << 0) | (1 << 2);\r\n     *\r\n     * (c.groupsMask & (1 << 2)) != 0; // true\r\n     * (c.groupsMask & (1 << 7)) != 0; // false\r\n     * ```\r\n     */\r\n    get groupsMask() {\r\n        return this._engine.wasm._wl_physx_component_get_groupsMask(this._id);\r\n    }\r\n    /**\r\n     * Set the components blocks mask.\r\n     *\r\n     * @param flags New flags that need to be set.\r\n     */\r\n    set blocksMask(flags) {\r\n        this._engine.wasm._wl_physx_component_set_blocksMask(this._id, flags);\r\n    }\r\n    /**\r\n     * Get the components blocks mask flags.\r\n     *\r\n     * Each bit represents membership to the block, see example.\r\n     *\r\n     * ```js\r\n     * // Block overlap with any objects in group 2\r\n     * c.blocksMask = (1 << 2);\r\n     *\r\n     * // Block overlap with any objects in group 0\r\n     * c.blocksMask  = (1 << 0)\r\n     *\r\n     * // Block overlap with any objects in group 0 and 2\r\n     * c.blocksMask = (1 << 0) | (1 << 2);\r\n     *\r\n     * (c.blocksMask & (1 << 2)) != 0; // true\r\n     * (c.blocksMask & (1 << 7)) != 0; // false\r\n     * ```\r\n     */\r\n    get blocksMask() {\r\n        return this._engine.wasm._wl_physx_component_get_blocksMask(this._id);\r\n    }\r\n    /**\r\n     * Set axes to lock for linear velocity.\r\n     *\r\n     * @param lock The Axis that needs to be set.\r\n     *\r\n     * Combine flags with Bitwise OR:\r\n     *\r\n     * ```js\r\n     * body.linearLockAxis = LockAxis.X | LockAxis.Y; // x and y set\r\n     * body.linearLockAxis = LockAxis.X; // y unset\r\n     * ```\r\n     *\r\n     * @note This has no effect if the component is static.\r\n     */\r\n    set linearLockAxis(lock) {\r\n        this._engine.wasm._wl_physx_component_set_linearLockAxis(this._id, lock);\r\n    }\r\n    /**\r\n     * Get the linear lock axes flags.\r\n     *\r\n     * To get the state of a specific flag, Bitwise AND with the LockAxis needed.\r\n     *\r\n     * ```js\r\n     * if(body.linearLockAxis & LockAxis.Y) {\r\n     *     console.log(\"The Y flag was set!\");\r\n     * }\r\n     * ```\r\n     *\r\n     * @return axes that are currently locked for linear movement.\r\n     */\r\n    get linearLockAxis() {\r\n        return this._engine.wasm._wl_physx_component_get_linearLockAxis(this._id);\r\n    }\r\n    /**\r\n     * Set axes to lock for angular velocity.\r\n     *\r\n     * @param lock The Axis that needs to be set.\r\n     *\r\n     * ```js\r\n     * body.angularLockAxis = LockAxis.X | LockAxis.Y; // x and y set\r\n     * body.angularLockAxis = LockAxis.X; // y unset\r\n     * ```\r\n     *\r\n     * @note This has no effect if the component is static.\r\n     */\r\n    set angularLockAxis(lock) {\r\n        this._engine.wasm._wl_physx_component_set_angularLockAxis(this._id, lock);\r\n    }\r\n    /**\r\n     * Get the angular lock axes flags.\r\n     *\r\n     * To get the state of a specific flag, Bitwise AND with the LockAxis needed:\r\n     *\r\n     * ```js\r\n     * if(body.angularLockAxis & LockAxis.Y) {\r\n     *     console.log(\"The Y flag was set!\");\r\n     * }\r\n     * ```\r\n     *\r\n     * @return axes that are currently locked for angular movement.\r\n     */\r\n    get angularLockAxis() {\r\n        return this._engine.wasm._wl_physx_component_get_angularLockAxis(this._id);\r\n    }\r\n    /**\r\n     * Set mass.\r\n     *\r\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\r\n     *\r\n     * @param m New mass.\r\n     */\r\n    set mass(m) {\r\n        this._engine.wasm._wl_physx_component_set_mass(this._id, m);\r\n    }\r\n    /** Mass */\r\n    get mass() {\r\n        return this._engine.wasm._wl_physx_component_get_mass(this._id);\r\n    }\r\n    /**\r\n     * Set mass space interia tensor.\r\n     *\r\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\r\n     *\r\n     * Has no effect, if the component is not active.\r\n     *\r\n     * @param v New mass space interatia tensor.\r\n     */\r\n    set massSpaceInteriaTensor(v) {\r\n        this._engine.wasm._wl_physx_component_set_massSpaceInertiaTensor(this._id, v[0], v[1], v[2]);\r\n    }\r\n    /**\r\n     * Set the rigid body to sleep upon activation.\r\n     *\r\n     * When asleep, the rigid body will not be simulated until the next contact.\r\n     *\r\n     * @param flag `true` to sleep upon activation.\r\n     *\r\n     * @since 1.1.5\r\n     */\r\n    set sleepOnActivate(flag) {\r\n        this._engine.wasm._wl_physx_component_set_sleepOnActivate(this._id, flag);\r\n    }\r\n    /**\r\n     * `true` if the rigid body is set to sleep upon activation, `false` otherwise.\r\n     *\r\n     * @since 1.1.5\r\n     */\r\n    get sleepOnActivate() {\r\n        return !!this._engine.wasm._wl_physx_component_get_sleepOnActivate(this._id);\r\n    }\r\n    /**\r\n     * Apply a force.\r\n     *\r\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\r\n     *\r\n     * Has no effect, if the component is not active.\r\n     *\r\n     * @param f Force vector.\r\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\r\n     * @param localForce Whether the force vector is in local space, default `false`.\r\n     * @param p Position to apply force at, default is center of mass.\r\n     * @param local Whether position is in local space, default `false`.\r\n     */\r\n    addForce(f, m = ForceMode.Force, localForce = false, p, local = false) {\r\n        const wasm = this._engine.wasm;\r\n        if (!p) {\r\n            wasm._wl_physx_component_addForce(this._id, f[0], f[1], f[2], m, localForce);\r\n            return;\r\n        }\r\n        wasm._wl_physx_component_addForceAt(this._id, f[0], f[1], f[2], m, localForce, p[0], p[1], p[2], local);\r\n    }\r\n    /**\r\n     * Apply torque.\r\n     *\r\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\r\n     *\r\n     * Has no effect, if the component is not active.\r\n     *\r\n     * @param f Force vector.\r\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\r\n     */\r\n    addTorque(f, m = ForceMode.Force) {\r\n        this._engine.wasm._wl_physx_component_addTorque(this._id, f[0], f[1], f[2], m);\r\n    }\r\n    /**\r\n     * Add on collision callback.\r\n     *\r\n     * @param callback Function to call when this rigid body (un)collides with any other.\r\n     *\r\n     * ```js\r\n     *  let rigidBody = this.object.getComponent('physx');\r\n     *  rigidBody.onCollision(function(type, other) {\r\n     *      // Ignore uncollides\r\n     *      if(type == CollisionEventType.TouchLost) return;\r\n     *\r\n     *      // Take damage on collision with enemies\r\n     *      if(other.object.name.startsWith(\"enemy-\")) {\r\n     *          this.applyDamage(10);\r\n     *      }\r\n     *  }.bind(this));\r\n     * ```\r\n     *\r\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\r\n     */\r\n    onCollision(callback) {\r\n        return this.onCollisionWith(this, callback);\r\n    }\r\n    /**\r\n     * Add filtered on collision callback.\r\n     *\r\n     * @param otherComp Component for which callbacks will\r\n     *        be triggered. If you pass this component, the method is equivalent to.\r\n     *        {@link PhysXComponent#onCollision}.\r\n     * @param callback Function to call when this rigid body\r\n     *        (un)collides with `otherComp`.\r\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\r\n     */\r\n    onCollisionWith(otherComp, callback) {\r\n        const physics = this._engine.physics;\r\n        physics._callbacks[this._id] = physics._callbacks[this._id] || [];\r\n        physics._callbacks[this._id].push(callback);\r\n        return this._engine.wasm._wl_physx_component_addCallback(this._id, otherComp._id || this._id);\r\n    }\r\n    /**\r\n     * Remove a collision callback added with {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\r\n     *\r\n     * @param callbackId Callback id as returned by {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\r\n     * @throws When the callback does not belong to the component.\r\n     * @throws When the callback does not exist.\r\n     */\r\n    removeCollisionCallback(callbackId) {\r\n        const physics = this._engine.physics;\r\n        const r = this._engine.wasm._wl_physx_component_removeCallback(this._id, callbackId);\r\n        /* r is the amount of object to remove from the end of the\r\n         * callbacks array for this object */\r\n        if (r)\r\n            physics._callbacks[this._id].splice(-r);\r\n    }\r\n}\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"static\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"translationOffset\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"rotationOffset\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"kinematic\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"gravity\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"simulate\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"allowSimulation\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"allowQuery\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"trigger\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"shape\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"shapeData\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"extents\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"staticFriction\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"dynamicFriction\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"bounciness\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"linearDamping\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"angularDamping\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"linearVelocity\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"angularVelocity\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"groupsMask\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"blocksMask\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"linearLockAxis\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"angularLockAxis\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"mass\", null);\r\n__decorate([\r\n    nativeProperty()\r\n], PhysXComponent.prototype, \"sleepOnActivate\", null);\r\n/**\r\n * Access to the physics scene\r\n */\r\nexport class Physics {\r\n    /**\r\n     * @hidden\r\n     *\r\n     * **Note**: This is public to emulate a `friend` accessor.\r\n     */\r\n    _callbacks;\r\n    /** Wonderland Engine instance */\r\n    _engine;\r\n    /** Ray Hit */\r\n    _rayHit;\r\n    /** Hit. */\r\n    _hit;\r\n    constructor(engine) {\r\n        this._engine = engine;\r\n        this._rayHit = engine.wasm._malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\r\n        this._hit = new RayHit(this._engine, this._rayHit);\r\n        this._callbacks = {};\r\n    }\r\n    /**\r\n     * Cast a ray through the physics scene and find intersecting objects.\r\n     *\r\n     * The resulting ray hit will contain **up to 4** closest ray hits,\r\n     * sorted by increasing distance.\r\n     *\r\n     * @param o Ray origin.\r\n     * @param d Ray direction.\r\n     * @param group Collision group to filter by: only objects that are\r\n     *        part of given group are considered for raycast.\r\n     * @param maxDistance Maximum ray distance, default `100.0`.\r\n     *\r\n     * @returns The RayHit instance, belonging to this class.\r\n     *\r\n     * @note The returned {@link RayHit} object is owned by the Physics instance and\r\n     *       will be reused with the next {@link Physics#rayCast} call.\r\n     */\r\n    rayCast(o, d, group, maxDistance = 100.0) {\r\n        this._engine.wasm._wl_physx_ray_cast(o[0], o[1], o[2], d[0], d[1], d[2], group, maxDistance, this._rayHit);\r\n        return this._hit;\r\n    }\r\n}\r\n/**\r\n * Mesh index type.\r\n */\r\nexport var MeshIndexType;\r\n(function (MeshIndexType) {\r\n    /** Single byte mesh index, range 0-255 */\r\n    MeshIndexType[MeshIndexType[\"UnsignedByte\"] = 1] = \"UnsignedByte\";\r\n    /** Two byte mesh index, range 0-65535 */\r\n    MeshIndexType[MeshIndexType[\"UnsignedShort\"] = 2] = \"UnsignedShort\";\r\n    /** Four byte mesh index, range 0-4294967295 */\r\n    MeshIndexType[MeshIndexType[\"UnsignedInt\"] = 4] = \"UnsignedInt\";\r\n})(MeshIndexType || (MeshIndexType = {}));\r\n/**\r\n * Mesh skinning type.\r\n */\r\nexport var MeshSkinningType;\r\n(function (MeshSkinningType) {\r\n    /** Not skinned */\r\n    MeshSkinningType[MeshSkinningType[\"None\"] = 0] = \"None\";\r\n    /** Skinned, 4 joints/weight per vertex */\r\n    MeshSkinningType[MeshSkinningType[\"FourJoints\"] = 1] = \"FourJoints\";\r\n    /** Skinned, 8 joints/weight per vertex */\r\n    MeshSkinningType[MeshSkinningType[\"EightJoints\"] = 2] = \"EightJoints\";\r\n})(MeshSkinningType || (MeshSkinningType = {}));\r\n/**\r\n * Wrapper around a native mesh data.\r\n *\r\n * To modify a mesh, you get access to a {@link MeshAttributeAccessor} that allows you to modify\r\n * the content of the buffers:\r\n *\r\n * Usage:\r\n *\r\n * ```js\r\n * const mesh = new Mesh(engine, {vertexCount: 3, indexData: [0, 1, 2] });\r\n * const positions = mesh.attribute(MeshAttribute.Position);\r\n * ...\r\n * ```\r\n */\r\nexport class Mesh {\r\n    /**\r\n     * Index of the mesh in the manager.\r\n     *\r\n     * @hidden\r\n     */\r\n    _index = -1;\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /**\r\n     * Create a new instance.\r\n     *\r\n     * @param params Either a mesh index to wrap or set of parameters to create a new mesh.\r\n     *    For more information, please have a look at the {@link MeshParameters} interface.\r\n     */\r\n    constructor(engine, params) {\r\n        this._engine = engine ?? WL;\r\n        this._index = -1;\r\n        if (isNumber(params)) {\r\n            this._index = params;\r\n            return;\r\n        }\r\n        if (!params.vertexCount)\r\n            throw new Error(\"Missing parameter 'vertexCount'\");\r\n        const wasm = this._engine.wasm;\r\n        let indexData = 0;\r\n        let indexType = 0;\r\n        let indexDataSize = 0;\r\n        if (params.indexData) {\r\n            indexType = params.indexType || MeshIndexType.UnsignedShort;\r\n            indexDataSize = params.indexData.length * indexType;\r\n            indexData = wasm._malloc(indexDataSize);\r\n            /* Copy the index data into wasm memory */\r\n            switch (indexType) {\r\n                case MeshIndexType.UnsignedByte:\r\n                    wasm.HEAPU8.set(params.indexData, indexData);\r\n                    break;\r\n                case MeshIndexType.UnsignedShort:\r\n                    wasm.HEAPU16.set(params.indexData, indexData >> 1);\r\n                    break;\r\n                case MeshIndexType.UnsignedInt:\r\n                    wasm.HEAPU32.set(params.indexData, indexData >> 2);\r\n                    break;\r\n            }\r\n        }\r\n        const { skinningType = MeshSkinningType.None } = params;\r\n        this._index = wasm._wl_mesh_create(indexData, indexDataSize, indexType, params.vertexCount, skinningType);\r\n    }\r\n    /** Number of vertices in this mesh. */\r\n    get vertexCount() {\r\n        return this._engine.wasm._wl_mesh_get_vertexCount(this._index);\r\n    }\r\n    /** Index data (read-only) or `null` if the mesh is not indexed. */\r\n    get indexData() {\r\n        const wasm = this._engine.wasm;\r\n        const tempMem = wasm._tempMem;\r\n        const ptr = wasm._wl_mesh_get_indexData(this._index, tempMem, tempMem + 4);\r\n        if (ptr === null)\r\n            return null;\r\n        const indexCount = wasm.HEAPU32[tempMem / 4];\r\n        const indexSize = wasm.HEAPU32[tempMem / 4 + 1];\r\n        switch (indexSize) {\r\n            case MeshIndexType.UnsignedByte:\r\n                return new Uint8Array(wasm.HEAPU8.buffer, ptr, indexCount);\r\n            case MeshIndexType.UnsignedShort:\r\n                return new Uint16Array(wasm.HEAPU16.buffer, ptr, indexCount);\r\n            case MeshIndexType.UnsignedInt:\r\n                return new Uint32Array(wasm.HEAPU32.buffer, ptr, indexCount);\r\n        }\r\n        return null;\r\n    }\r\n    /** Hosting engine instance. */\r\n    get engine() {\r\n        return this._engine;\r\n    }\r\n    /**\r\n     * Apply changes to {@link attribute | vertex attributes}.\r\n     *\r\n     * Uploads the updated vertex attributes to the GPU and updates the bounding\r\n     * sphere to match the new vertex positions.\r\n     *\r\n     * Since this is an expensive operation, call it only once you have performed\r\n     * all modifications on a mesh and avoid calling if you did not perform any\r\n     * modifications at all.\r\n     */\r\n    update() {\r\n        this._engine.wasm._wl_mesh_update(this._index);\r\n    }\r\n    getBoundingSphere(out = new Float32Array(4)) {\r\n        const tempMemFloat = this._engine.wasm._tempMemFloat;\r\n        this._engine.wasm._wl_mesh_get_boundingSphere(this._index, this._engine.wasm._tempMem);\r\n        out[0] = tempMemFloat[0];\r\n        out[1] = tempMemFloat[1];\r\n        out[2] = tempMemFloat[2];\r\n        out[3] = tempMemFloat[3];\r\n        return out;\r\n    }\r\n    attribute(attr) {\r\n        if (typeof attr != 'number')\r\n            throw new TypeError('Expected number, but got ' + typeof attr);\r\n        const tempMemUint32 = this._engine.wasm._tempMemUint32;\r\n        this._engine.wasm._wl_mesh_get_attribute(this._index, attr, this._engine.wasm._tempMem);\r\n        if (tempMemUint32[0] == 255)\r\n            return null;\r\n        const arraySize = tempMemUint32[5];\r\n        return new MeshAttributeAccessor(this._engine, {\r\n            attribute: tempMemUint32[0],\r\n            offset: tempMemUint32[1],\r\n            stride: tempMemUint32[2],\r\n            formatSize: tempMemUint32[3],\r\n            componentCount: tempMemUint32[4],\r\n            /* The WASM API returns `0` for a scalar value. We clamp it to 1 as we strictly use it as a multiplier for get/set operations */\r\n            arraySize: arraySize ? arraySize : 1,\r\n            length: this.vertexCount,\r\n            bufferType: (attr !== MeshAttribute.JointId\r\n                ? Float32Array\r\n                : Uint16Array),\r\n        });\r\n    }\r\n    /**\r\n     * Destroy and free the meshes memory.\r\n     *\r\n     * It is best practice to set the mesh variable to `null` after calling\r\n     * destroy to prevent accidental use:\r\n     *\r\n     * ```js\r\n     *   mesh.destroy();\r\n     *   mesh = null;\r\n     * ```\r\n     *\r\n     * Accessing the mesh after destruction behaves like accessing an empty\r\n     * mesh.\r\n     *\r\n     * @since 0.9.0\r\n     */\r\n    destroy() {\r\n        this._engine.wasm._wl_mesh_destroy(this._index);\r\n    }\r\n    /**\r\n     * Checks equality by comparing whether the wrapped native mesh ids are\r\n     * equal.\r\n     *\r\n     * @param otherMesh Mesh to check equality with.\r\n     * @returns Whether this mesh equals the given mesh.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    equals(otherMesh) {\r\n        if (!otherMesh)\r\n            return false;\r\n        return this._index === otherMesh._index;\r\n    }\r\n}\r\n/**\r\n * An iterator over a mesh vertex attribute.\r\n *\r\n * Usage:\r\n *\r\n * ```js\r\n * const mesh = this.object.getComponent('mesh').mesh;\r\n * const positions = mesh.attribute(MeshAttribute.Position);\r\n *\r\n * // Equivalent to `new Float32Array(3)`.\r\n * const temp = positions.createArray();\r\n *\r\n * for(let i = 0; i < positions.length; ++i) {\r\n *     // `pos` will reference `temp` and thereby not allocate additional\r\n *     // memory, which would cause a perf spike when collected.\r\n *     const pos = positions.get(i, temp);\r\n *     // Scale position by 2 on x-axis only.\r\n *     pos[0] *= 2.0;\r\n *     positions.set(i, pos);\r\n * }\r\n * // We're done modifying, tell the engine to move vertex data to the GPU.\r\n * mesh.update();\r\n * ```\r\n */\r\nexport class MeshAttributeAccessor {\r\n    /** Max number of elements. */\r\n    length = 0;\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /** Attribute index. @hidden */\r\n    _attribute = -1;\r\n    /** Attribute offset. @hidden */\r\n    _offset = 0;\r\n    /** Attribute stride. @hidden */\r\n    _stride = 0;\r\n    /** Format size native enum. @hidden */\r\n    _formatSize = 0;\r\n    /** Number of components per vertex. @hidden */\r\n    _componentCount = 0;\r\n    /** Number of values per vertex. @hidden */\r\n    _arraySize = 1;\r\n    /**\r\n     * Class to instantiate an ArrayBuffer to get/set values.\r\n     */\r\n    _bufferType;\r\n    /**\r\n     * Function to allocate temporary WASM memory. It is cached in the accessor to avoid\r\n     * conditionals during get/set.\r\n     */\r\n    _tempBufferGetter;\r\n    /**\r\n     * Create a new instance.\r\n     *\r\n     * @note Please use {@link Mesh.attribute} to create a new instance.\r\n     *\r\n     * @param options Contains information about how to read the data.\r\n     * @note Do not use this constructor. Instead, please use the {@link Mesh.attribute} method.\r\n     *\r\n     * @hidden\r\n     */\r\n    constructor(engine, options) {\r\n        this._engine = engine;\r\n        const wasm = this._engine.wasm;\r\n        this._attribute = options.attribute;\r\n        this._offset = options.offset;\r\n        this._stride = options.stride;\r\n        this._formatSize = options.formatSize;\r\n        this._componentCount = options.componentCount;\r\n        this._arraySize = options.arraySize;\r\n        this._bufferType = options.bufferType;\r\n        this.length = options.length;\r\n        this._tempBufferGetter = (this._bufferType === Float32Array\r\n            ? wasm.getTempBufferF32.bind(wasm)\r\n            : wasm.getTempBufferU16.bind(wasm));\r\n    }\r\n    /**\r\n     * Create a new TypedArray to hold this attribute's values.\r\n     *\r\n     * This method is useful to create a view to hold the data to\r\n     * pass to {@link get} and {@link set}\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * const vertexCount = 4;\r\n     * const positionAttribute = mesh.attribute(MeshAttribute.Position);\r\n     *\r\n     * // A position has 3 floats per vertex. Thus, positions has length 3 * 4.\r\n     * const positions = positionAttribute.createArray(vertexCount);\r\n     * ```\r\n     *\r\n     * @param count The number of **vertices** expected.\r\n     * @returns A TypedArray with the appropriate format to access the data\r\n     */\r\n    createArray(count = 1) {\r\n        count = count > this.length ? this.length : count;\r\n        return new this._bufferType(count * this._componentCount * this._arraySize);\r\n    }\r\n    get(index, out = this.createArray()) {\r\n        if (out.length % this._componentCount !== 0) {\r\n            throw new Error(`out.length, ${out.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\r\n        }\r\n        const dest = this._tempBufferGetter(out.length);\r\n        const elementSize = this._bufferType.BYTES_PER_ELEMENT;\r\n        const destSize = elementSize * out.length;\r\n        const srcFormatSize = this._formatSize * this._arraySize;\r\n        const destFormatSize = this._componentCount * elementSize * this._arraySize;\r\n        this._engine.wasm._wl_mesh_get_attribute_values(this._attribute, srcFormatSize, this._offset + index * this._stride, this._stride, destFormatSize, dest.byteOffset, destSize);\r\n        for (let i = 0; i < out.length; ++i)\r\n            out[i] = dest[i];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set attribute element.\r\n     *\r\n     * @param i Index\r\n     * @param v Value to set the element to\r\n     *\r\n     * `v.length` needs to be a multiple of the attributes component count, see\r\n     * {@link MeshAttribute}. If `v.length` is more than one multiple, it will be\r\n     * filled with the next n attribute elements, which can reduce overhead\r\n     * of this call.\r\n     *\r\n     * @returns Reference to self (for method chaining)\r\n     */\r\n    set(i, v) {\r\n        if (v.length % this._componentCount !== 0)\r\n            throw new Error(`out.length, ${v.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\r\n        const elementSize = this._bufferType.BYTES_PER_ELEMENT;\r\n        const srcSize = elementSize * v.length;\r\n        const srcFormatSize = this._componentCount * elementSize * this._arraySize;\r\n        const destFormatSize = this._formatSize * this._arraySize;\r\n        const wasm = this._engine.wasm;\r\n        /* Unless we are already working with data from WASM heap, we\r\n         * need to copy into temporary memory. */\r\n        if (v.buffer != wasm.HEAPU8.buffer) {\r\n            const dest = this._tempBufferGetter(v.length);\r\n            dest.set(v);\r\n            v = dest;\r\n        }\r\n        wasm._wl_mesh_set_attribute_values(this._attribute, srcFormatSize, v.byteOffset, srcSize, destFormatSize, this._offset + i * this._stride, this._stride);\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Wrapper around a native material.\r\n *\r\n * Each material instance will have properties associated to the pipeline it uses.\r\n * The material properties are automatically added to each material instance, example:\r\n *\r\n * ```js\r\n * const material = mesh.material; // Material with a `Phong Opaque Textured` pipeline\r\n * // You can access all the material properties from the editor using:\r\n * material.diffuseTexture = null;\r\n * material.diffuseColor = [1.0, 0.0, 0.0, 1.0];\r\n * ```\r\n */\r\nexport class Material {\r\n    /**\r\n     * Index of this material in the manager.\r\n     *\r\n     * @hidden\r\n     */\r\n    _index;\r\n    /**\r\n     * Material definition index in the scene.\r\n     *\r\n     * @hidden\r\n     */\r\n    _definition;\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /**\r\n     * Create a new Material.\r\n     *\r\n     * @note Creating material is expensive. Please use {@link Material#clone} to clone a material.\r\n     * @note Do not use this constructor directly with an index, this is reserved for internal purposes.\r\n     */\r\n    constructor(engine, params) {\r\n        this._engine = engine;\r\n        if (typeof params !== 'number') {\r\n            if (!params?.pipeline)\r\n                throw new Error(\"Missing parameter 'pipeline'\");\r\n            const wasm = this._engine.wasm;\r\n            const pipeline = params.pipeline;\r\n            this._index = wasm._wl_material_create(wasm.tempUTF8(pipeline));\r\n            if (this._index < 0)\r\n                throw new Error(`No such pipeline '${pipeline}'`);\r\n        }\r\n        else {\r\n            this._index = params;\r\n        }\r\n        this._definition = this._engine.wasm._wl_material_get_definition(this._index);\r\n        if (!this._engine.wasm._materialDefinitions[this._definition])\r\n            throw new Error(`Material Definition ${this._definition} not found for material with index ${this._index}`);\r\n        return new Proxy(this, {\r\n            get(target, prop) {\r\n                const wasm = engine.wasm;\r\n                const definition = wasm._materialDefinitions[target._definition];\r\n                const param = definition.get(prop);\r\n                if (!param)\r\n                    return target[prop];\r\n                if (wasm._wl_material_get_param_value(target._index, param.index, wasm._tempMem)) {\r\n                    const type = param.type;\r\n                    switch (type.type) {\r\n                        case MaterialParamType.UnsignedInt:\r\n                            return type.componentCount == 1\r\n                                ? wasm._tempMemUint32[0]\r\n                                : new Uint32Array(wasm.HEAPU32.buffer, wasm._tempMem, type.componentCount);\r\n                        case MaterialParamType.Int:\r\n                            return type.componentCount == 1\r\n                                ? wasm._tempMemInt[0]\r\n                                : new Int32Array(wasm.HEAP32.buffer, wasm._tempMem, type.componentCount);\r\n                        case MaterialParamType.Float:\r\n                            return type.componentCount == 1\r\n                                ? wasm._tempMemFloat[0]\r\n                                : new Float32Array(wasm.HEAPF32.buffer, wasm._tempMem, type.componentCount);\r\n                        case MaterialParamType.Sampler:\r\n                            return engine.textures.wrap(wasm._tempMemInt[0]);\r\n                        default:\r\n                            throw new Error(`Invalid type ${type.type} on parameter ${param.index} for material ${target._index}`);\r\n                    }\r\n                }\r\n            },\r\n            set(target, prop, value) {\r\n                const wasm = engine.wasm;\r\n                const definition = wasm._materialDefinitions[target._definition];\r\n                const param = definition.get(prop);\r\n                if (!param) {\r\n                    target[prop] = value;\r\n                    return true;\r\n                }\r\n                const type = param.type;\r\n                switch (type.type) {\r\n                    case MaterialParamType.UnsignedInt:\r\n                    case MaterialParamType.Int:\r\n                    case MaterialParamType.Sampler:\r\n                        const v = value.id ?? value;\r\n                        wasm._wl_material_set_param_value_uint(target._index, param.index, v);\r\n                        break;\r\n                    case MaterialParamType.Float:\r\n                        let count = 1;\r\n                        if (typeof value === 'number') {\r\n                            wasm._tempMemFloat[0] = value;\r\n                        }\r\n                        else {\r\n                            count = value.length;\r\n                            for (let i = 0; i < count; ++i)\r\n                                wasm._tempMemFloat[i] = value[i];\r\n                        }\r\n                        wasm._wl_material_set_param_value_float(target._index, param.index, wasm._tempMem, count);\r\n                        break;\r\n                    case MaterialParamType.Font:\r\n                        throw new Error('Setting font properties is currently unsupported.');\r\n                }\r\n                return true;\r\n            },\r\n        });\r\n    }\r\n    /** @deprecated Use {@link #pipeline} instead. */\r\n    get shader() {\r\n        return this.pipeline;\r\n    }\r\n    /** Name of the pipeline used by this material. */\r\n    get pipeline() {\r\n        const wasm = this._engine.wasm;\r\n        return wasm.UTF8ToString(wasm._wl_material_get_pipeline(this._index));\r\n    }\r\n    /** Hosting engine instance. */\r\n    get engine() {\r\n        return this._engine;\r\n    }\r\n    /**\r\n     * Create a copy of the underlying native material.\r\n     *\r\n     * @returns Material clone.\r\n     */\r\n    clone() {\r\n        const id = this._engine.wasm._wl_material_clone(this._index);\r\n        return id > 0 ? new Material(this._engine, id) : null;\r\n    }\r\n    /**\r\n     * Checks equality by comparing whether the wrapped native material ids are\r\n     * equal.\r\n     *\r\n     * @param otherMaterial Material to check equality with.\r\n     * @returns Whether this material equals the given material.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    equals(otherMaterial) {\r\n        if (!otherMaterial)\r\n            return false;\r\n        return this._index === otherMaterial._index;\r\n    }\r\n    /**\r\n     * Wrap a native material index.\r\n     *\r\n     * @param engine Engine instance.\r\n     * @param index The index.\r\n     * @returns Material instance or `null` if index <= 0.\r\n     *\r\n     * @deprecated Please use `new Material()` instead.\r\n     */\r\n    static wrap(engine, index) {\r\n        /** @todo: this propagate nullable in the entire codebase. Remove. */\r\n        return index > 0 ? new Material(engine, index) : null;\r\n    }\r\n}\r\n/** Temporary canvas */\r\nlet temp2d = null;\r\n/**\r\n * Wrapper around a native texture data.\r\n */\r\nexport class Texture {\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /** Index in the manager. @hidden */\r\n    _id = 0;\r\n    /** HTML image index. @hidden */\r\n    _imageIndex = null;\r\n    /**\r\n     * @param engine The engine instance\r\n     * @param param HTML media element to create texture from or texture id to wrap.\r\n     */\r\n    constructor(engine, param) {\r\n        this._engine = engine ?? WL;\r\n        const wasm = engine.wasm;\r\n        if (param instanceof HTMLImageElement ||\r\n            param instanceof HTMLVideoElement ||\r\n            param instanceof HTMLCanvasElement) {\r\n            const index = wasm._images.length;\r\n            wasm._images.push(param);\r\n            this._imageIndex = index;\r\n            /** @todo: For 1.2.0, images referenced here should be per-scene, i.e., based\r\n             * on the main scene images. */\r\n            this._id = this._engine.wasm._wl_renderer_addImage(index);\r\n        }\r\n        else {\r\n            this._id = param;\r\n        }\r\n        this._engine.textures._set(this);\r\n    }\r\n    /** Whether this texture is valid. */\r\n    get valid() {\r\n        return this._id >= 0;\r\n    }\r\n    /** Index in this manager. */\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    /** Update the texture to match the HTML element (e.g. reflect the current frame of a video). */\r\n    update() {\r\n        if (!this.valid || this._imageIndex === null)\r\n            return;\r\n        this._engine.wasm._wl_renderer_updateImage(this._id, this._imageIndex);\r\n    }\r\n    /** Width of the texture. */\r\n    get width() {\r\n        return this._engine.wasm._wl_texture_width(this._id);\r\n    }\r\n    /** Height of the texture. */\r\n    get height() {\r\n        return this._engine.wasm._wl_texture_height(this._id);\r\n    }\r\n    /** Hosting engine instance. */\r\n    get engine() {\r\n        return this._engine;\r\n    }\r\n    /**\r\n     * Update a subrange on the texture to match the HTML element (e.g. reflect the current frame of a video).\r\n     *\r\n     * Usage:\r\n     *\r\n     * ```js\r\n     * // Copies rectangle of pixel starting from (10, 20)\r\n     * texture.updateSubImage(10, 20, 600, 400);\r\n     * ```\r\n     *\r\n     * @param x x offset\r\n     * @param y y offset\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    updateSubImage(x, y, w, h) {\r\n        if (!this.valid || this._imageIndex === null)\r\n            return;\r\n        /* Lazy initialize temp canvas */\r\n        if (!temp2d) {\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n            if (!ctx) {\r\n                throw new Error('Texture.updateSubImage(): Failed to obtain CanvasRenderingContext2D.');\r\n            }\r\n            temp2d = {\r\n                canvas,\r\n                ctx,\r\n            };\r\n        }\r\n        const wasm = this._engine.wasm;\r\n        const img = wasm._images[this._imageIndex];\r\n        if (!img)\r\n            return;\r\n        temp2d.canvas.width = w;\r\n        temp2d.canvas.height = h;\r\n        temp2d.ctx.drawImage(img, x, y, w, h, 0, 0, w, h);\r\n        const yOffset = (img.videoHeight ?? img.height) - y - h;\r\n        wasm._images[this._imageIndex] = temp2d.canvas;\r\n        wasm._wl_renderer_updateImage(this._id, this._imageIndex, x, yOffset);\r\n        wasm._images[this._imageIndex] = img;\r\n    }\r\n    /**\r\n     * Destroy and free the texture's texture altas space and memory.\r\n     *\r\n     * It is best practice to set the texture variable to `null` after calling\r\n     * destroy to prevent accidental use of the invalid texture:\r\n     *\r\n     * ```js\r\n     *   texture.destroy();\r\n     *   texture = null;\r\n     * ```\r\n     *\r\n     * @since 0.9.0\r\n     */\r\n    destroy() {\r\n        this.engine._destroyTexture(this);\r\n        this._id = -1;\r\n        this._imageIndex = null;\r\n    }\r\n    /**\r\n     * Checks equality by comparing whether the wrapped native texture ids are\r\n     * equal.\r\n     *\r\n     * @param otherTexture Texture to check equality with.\r\n     * @returns Whether this texture equals the given texture.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    equals(otherTexture) {\r\n        if (!otherTexture)\r\n            return false;\r\n        return this._id === otherTexture._id;\r\n    }\r\n}\r\n/**\r\n * Wrapper around a native animation.\r\n */\r\nexport class Animation {\r\n    /** Index of the mesh in the manager. @hidden */\r\n    _index;\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /**\r\n     * @param index Index in the manager\r\n     */\r\n    constructor(engine = WL, index) {\r\n        this._engine = engine;\r\n        this._index = index;\r\n    }\r\n    /** Duration of this animation. */\r\n    get duration() {\r\n        return this._engine.wasm._wl_animation_get_duration(this._index);\r\n    }\r\n    /** Number of tracks in this animation. */\r\n    get trackCount() {\r\n        return this._engine.wasm._wl_animation_get_trackCount(this._index);\r\n    }\r\n    /**\r\n     * Clone this animation retargeted to a new set of objects.\r\n     *\r\n     * The clone shares most of the data with the original and is therefore\r\n     * light-weight.\r\n     *\r\n     * **Experimental:** This API might change in upcoming versions.\r\n     *\r\n     * If retargeting to {@link Skin}, the join names will be used to determine a mapping\r\n     * from the previous skin to the new skin. The source skin will be retrieved from\r\n     * the first track in the animation that targets a joint.\r\n     *\r\n     * @param newTargets New targets per track. Expected to have\r\n     *      {@link Animation#trackCount} elements or to be a {@link Skin}.\r\n     * @returns The retargeted clone of this animation.\r\n     */\r\n    retarget(newTargets) {\r\n        const wasm = this._engine.wasm;\r\n        if (newTargets instanceof Skin) {\r\n            const animId = wasm._wl_animation_retargetToSkin(this._index, newTargets._index);\r\n            return new Animation(this._engine, animId);\r\n        }\r\n        if (newTargets.length != this.trackCount) {\r\n            throw Error('Expected ' +\r\n                this.trackCount.toString() +\r\n                ' targets, but got ' +\r\n                newTargets.length.toString());\r\n        }\r\n        const ptr = wasm._malloc(2 * newTargets.length);\r\n        for (let i = 0; i < newTargets.length; ++i) {\r\n            wasm.HEAPU16[ptr >> (1 + i)] = newTargets[i].objectId;\r\n        }\r\n        const animId = wasm._wl_animation_retarget(this._index, ptr);\r\n        wasm._free(ptr);\r\n        return new Animation(this._engine, animId);\r\n    }\r\n    /**\r\n     * Checks equality by comparing whether the wrapped native animation ids\r\n     * are equal.\r\n     *\r\n     * @param otherAnimation Animation to check equality with.\r\n     * @returns Whether this animation equals the given animation.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    equals(otherAnimation) {\r\n        if (!otherAnimation)\r\n            return false;\r\n        return this._index === otherAnimation._index;\r\n    }\r\n}\r\n/**\r\n * Scene graph object.\r\n *\r\n * Node in the scene graph or \"entity\". Consists of transformation and a reference\r\n * to its parent object. Usually holds components and is accessible by components\r\n * through {@link Component#object}.\r\n *\r\n * Objects are stored in a data oriented manner inside WebAssembly memory. This class\r\n * is a JavaScript API wrapper around this memory for more convenient use in\r\n * components.\r\n *\r\n * Objects can be created and added to a scene through\r\n * {@link Scene#addObject} on the {@link WonderlandEngine.scene}.\r\n */\r\nexport class Object3D {\r\n    /**\r\n     * Object index in the manager.\r\n     *\r\n     * @hidden\r\n     */\r\n    _objectId = -1;\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /**\r\n     * @param o Object id to wrap\r\n     *\r\n     * For performance reasons, please use {@link WonderlandEngine.wrapObject}\r\n     */\r\n    constructor(engine, o) {\r\n        this._objectId = o;\r\n        this._engine = engine;\r\n    }\r\n    /**\r\n     * Name of the object.\r\n     *\r\n     * Useful for identifying objects during debugging.\r\n     */\r\n    get name() {\r\n        const wasm = this._engine.wasm;\r\n        return wasm.UTF8ToString(wasm._wl_object_name(this.objectId));\r\n    }\r\n    /**\r\n     * Set the object's name.\r\n     *\r\n     * @param newName The new name to set.\r\n     */\r\n    set name(newName) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._wl_object_set_name(this.objectId, wasm.tempUTF8(newName));\r\n    }\r\n    /**\r\n     * Parent of this object or `null` if parented to root.\r\n     */\r\n    get parent() {\r\n        const p = this._engine.wasm._wl_object_parent(this.objectId);\r\n        return p === 0 ? null : this._engine.wrapObject(p);\r\n    }\r\n    /**\r\n     * Children of this object.\r\n     *\r\n     * @note Child order is **undefined**. No assumptions should be made\r\n     * about the index of a specific object.\r\n     *\r\n     * If you need to access a specific child of this object, you can\r\n     * use {@link Object3D.findByName}.\r\n     *\r\n     * When the object exists in the scene at editor time, prefer passing it as\r\n     * a component property.\r\n     */\r\n    get children() {\r\n        const childrenCount = this._engine.wasm._wl_object_get_children_count(this.objectId);\r\n        if (childrenCount === 0)\r\n            return [];\r\n        const wasm = this._engine.wasm;\r\n        wasm.requireTempMem(childrenCount * 2);\r\n        this._engine.wasm._wl_object_get_children(this.objectId, wasm._tempMem, wasm._tempMemSize >> 1);\r\n        const children = new Array(childrenCount);\r\n        for (let i = 0; i < childrenCount; ++i) {\r\n            children[i] = this._engine.wrapObject(wasm._tempMemUint16[i]);\r\n        }\r\n        return children;\r\n    }\r\n    /**\r\n     * Reparent object to given object.\r\n     *\r\n     * @note Reparenting is not trivial and might have a noticeable performance impact.\r\n     *\r\n     * @param newParent New parent or `null` to parent to root\r\n     */\r\n    set parent(newParent) {\r\n        this._engine.wasm._wl_object_set_parent(this.objectId, newParent == null ? 0 : newParent.objectId);\r\n    }\r\n    /** Object index in the manager. */\r\n    get objectId() {\r\n        return this._objectId;\r\n    }\r\n    /** Hosting engine instance. */\r\n    get engine() {\r\n        return this._engine;\r\n    }\r\n    /**\r\n     * Clone this hierarchy into a new one.\r\n     *\r\n     * Cloning copies the hierarchy structure, object names,\r\n     * as well as components.\r\n     *\r\n     * JavaScript components are cloned using {@link Component.copy}. You can\r\n     * override this method in your components.\r\n     *\r\n     * @param parent The parent for the cloned hierarchy or `null` to clone\r\n     *     into the scene root. Defaults to `null`.\r\n     *\r\n     * @returns The clone of this object.\r\n     */\r\n    clone(parent = null) {\r\n        const engine = this._engine;\r\n        const id = engine.wasm._wl_object_clone(this._objectId, parent ? parent._objectId : 0);\r\n        return engine.wrapObject(id);\r\n    }\r\n    /**\r\n     * Reset local transformation (translation, rotation and scaling) to identity.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    resetTransform() {\r\n        this._engine.wasm._wl_object_reset_translation_rotation(this.objectId);\r\n        this._engine.wasm._wl_object_reset_scaling(this.objectId);\r\n        return this;\r\n    }\r\n    /**\r\n     * Reset local position and rotation to identity.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    resetPositionRotation() {\r\n        this._engine.wasm._wl_object_reset_translation_rotation(this.objectId);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.resetPositionRotation} instead. */\r\n    resetTranslationRotation() {\r\n        return this.resetPositionRotation();\r\n    }\r\n    /**\r\n     * Reset local rotation, keep translation.\r\n     *\r\n     * @note To reset both rotation and translation, prefer\r\n     *       {@link resetTranslationRotation}.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    resetRotation() {\r\n        this._engine.wasm._wl_object_reset_rotation(this.objectId);\r\n        return this;\r\n    }\r\n    /**\r\n     * Reset local translation, keep rotation.\r\n     *\r\n     * @note To reset both rotation and translation, prefer\r\n     *       {@link resetTranslationRotation}.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    resetPosition() {\r\n        this._engine.wasm._wl_object_reset_translation(this.objectId);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.resetPosition} instead. */\r\n    resetTranslation() {\r\n        return this.resetPosition();\r\n    }\r\n    /**\r\n     * Reset local scaling to identity (``[1.0, 1.0, 1.0]``).\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    resetScaling() {\r\n        this._engine.wasm._wl_object_reset_scaling(this.objectId);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.translateLocal} instead. */\r\n    translate(v) {\r\n        return this.translateLocal(v);\r\n    }\r\n    /**\r\n     * Translate object by a vector in the parent's space.\r\n     *\r\n     * @param v Vector to translate by.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    translateLocal(v) {\r\n        this._engine.wasm._wl_object_translate(this.objectId, v[0], v[1], v[2]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Translate object by a vector in object space.\r\n     *\r\n     * @param v Vector to translate by.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    translateObject(v) {\r\n        this._engine.wasm._wl_object_translate_obj(this.objectId, v[0], v[1], v[2]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Translate object by a vector in world space.\r\n     *\r\n     * @param v Vector to translate by.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    translateWorld(v) {\r\n        this._engine.wasm._wl_object_translate_world(this.objectId, v[0], v[1], v[2]);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.rotateAxisAngleDegLocal} instead. */\r\n    rotateAxisAngleDeg(a, d) {\r\n        this.rotateAxisAngleDegLocal(a, d);\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotate around given axis by given angle (degrees) in local space.\r\n     *\r\n     * @param a Vector representing the rotation axis.\r\n     * @param d Angle in degrees.\r\n     *\r\n     * @note If the object is translated the rotation will be around\r\n     *     the parent. To rotate around the object origin, use\r\n     *     {@link rotateAxisAngleDegObject}\r\n     *\r\n     * @see {@link rotateAxisAngleRad}\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    rotateAxisAngleDegLocal(a, d) {\r\n        this._engine.wasm._wl_object_rotate_axis_angle(this.objectId, a[0], a[1], a[2], d);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.rotateAxisAngleRadLocal} instead. */\r\n    rotateAxisAngleRad(a, d) {\r\n        return this.rotateAxisAngleRadLocal(a, d);\r\n    }\r\n    /**\r\n     * Rotate around given axis by given angle (radians) in local space.\r\n     *\r\n     * @param a Vector representing the rotation axis.\r\n     * @param d Angle in radians.\r\n     *\r\n     * @note If the object is translated the rotation will be around\r\n     *     the parent. To rotate around the object origin, use\r\n     *     {@link rotateAxisAngleDegObject}\r\n     *\r\n     * @see {@link rotateAxisAngleDeg}\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    rotateAxisAngleRadLocal(a, d) {\r\n        this._engine.wasm._wl_object_rotate_axis_angle_rad(this.objectId, a[0], a[1], a[2], d);\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotate around given axis by given angle (degrees) in object space.\r\n     *\r\n     * @param a Vector representing the rotation axis.\r\n     * @param d Angle in degrees.\r\n     *\r\n     * Equivalent to prepending a rotation quaternion to the object's\r\n     * local transformation.\r\n     *\r\n     * @see {@link rotateAxisAngleRadObject}\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    rotateAxisAngleDegObject(a, d) {\r\n        this._engine.wasm._wl_object_rotate_axis_angle_obj(this.objectId, a[0], a[1], a[2], d);\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotate around given axis by given angle (radians) in object space\r\n     * Equivalent to prepending a rotation quaternion to the object's\r\n     * local transformation.\r\n     *\r\n     * @param a Vector representing the rotation axis\r\n     * @param d Angle in degrees\r\n     *\r\n     * @see {@link rotateAxisAngleDegObject}\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    rotateAxisAngleRadObject(a, d) {\r\n        this._engine.wasm._wl_object_rotate_axis_angle_rad_obj(this.objectId, a[0], a[1], a[2], d);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.rotateLocal} instead. */\r\n    rotate(q) {\r\n        this.rotateLocal(q);\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotate by a quaternion.\r\n     *\r\n     * @param q the Quaternion to rotate by.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    rotateLocal(q) {\r\n        this._engine.wasm._wl_object_rotate_quat(this.objectId, q[0], q[1], q[2], q[3]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotate by a quaternion in object space.\r\n     *\r\n     * Equivalent to prepending a rotation quaternion to the object's\r\n     * local transformation.\r\n     *\r\n     * @param q the Quaternion to rotate by.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    rotateObject(q) {\r\n        this._engine.wasm._wl_object_rotate_quat_obj(this.objectId, q[0], q[1], q[2], q[3]);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.scaleLocal} instead. */\r\n    scale(v) {\r\n        this.scaleLocal(v);\r\n        return this;\r\n    }\r\n    /**\r\n     * Scale object by a vector in object space.\r\n     *\r\n     * @param v Vector to scale by.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    scaleLocal(v) {\r\n        this._engine.wasm._wl_object_scale(this.objectId, v[0], v[1], v[2]);\r\n        return this;\r\n    }\r\n    getPositionLocal(out = new Float32Array(3)) {\r\n        const wasm = this._engine.wasm;\r\n        /* Translation is different than rotation & scaling.\r\n         * We can't simply read the memory. */\r\n        wasm._wl_object_get_translation_local(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    getTranslationLocal(out = new Float32Array(3)) {\r\n        return this.getPositionLocal(out);\r\n    }\r\n    getPositionWorld(out = new Float32Array(3)) {\r\n        const wasm = this._engine.wasm;\r\n        /* Translation is different than rotation & scaling.\r\n         * We can't simply read the memory. */\r\n        wasm._wl_object_get_translation_world(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    getTranslationWorld(out = new Float32Array(3)) {\r\n        return this.getPositionWorld(out);\r\n    }\r\n    /**\r\n     * Set local / object space position.\r\n     *\r\n     * Concatenates a new translation dual quaternion onto the existing rotation.\r\n     *\r\n     * @param v New local position array/vector, expected to have at least 3 elements.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    setPositionLocal(v) {\r\n        this._engine.wasm._wl_object_set_translation_local(this.objectId, v[0], v[1], v[2]);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.setPositionLocal} instead. */\r\n    setTranslationLocal(v) {\r\n        return this.setPositionLocal(v);\r\n    }\r\n    /**\r\n     * Set world space position.\r\n     *\r\n     * Applies the inverse parent transform with a new translation dual quaternion\r\n     * which is concatenated onto the existing rotation.\r\n     *\r\n     * @param v New world position array/vector, expected to have at least 3 elements.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    setPositionWorld(v) {\r\n        this._engine.wasm._wl_object_set_translation_world(this.objectId, v[0], v[1], v[2]);\r\n        return this;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.setPositionWorld} instead. */\r\n    setTranslationWorld(v) {\r\n        return this.setPositionWorld(v);\r\n    }\r\n    getScalingLocal(out = new Float32Array(3)) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_object_scaling_local(this.objectId) / 4; /* Align F32 */\r\n        out[0] = wasm.HEAPF32[ptr];\r\n        out[1] = wasm.HEAPF32[ptr + 1];\r\n        out[2] = wasm.HEAPF32[ptr + 2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set local / object space scaling.\r\n     *\r\n     * @param v New local scaling array/vector, expected to have at least 3 elements.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    setScalingLocal(v) {\r\n        this._engine.wasm._wl_object_set_scaling_local(this.objectId, v[0], v[1], v[2]);\r\n        return this;\r\n    }\r\n    getScalingWorld(out = new Float32Array(3)) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_object_scaling_world(this.objectId) / 4; /* Align F32 */\r\n        out[0] = wasm.HEAPF32[ptr];\r\n        out[1] = wasm.HEAPF32[ptr + 1];\r\n        out[2] = wasm.HEAPF32[ptr + 2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set World space scaling.\r\n     *\r\n     * @param v New world scaling array/vector, expected to have at least 3 elements.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    setScalingWorld(v) {\r\n        this._engine.wasm._wl_object_set_scaling_world(this.objectId, v[0], v[1], v[2]);\r\n        return this;\r\n    }\r\n    getRotationLocal(out = new Float32Array(4)) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_object_trans_local(this.objectId) / 4; /* Align F32 */\r\n        /* The first 4 floats represent the rotation quaternion. */\r\n        out[0] = wasm.HEAPF32[ptr];\r\n        out[1] = wasm.HEAPF32[ptr + 1];\r\n        out[2] = wasm.HEAPF32[ptr + 2];\r\n        out[3] = wasm.HEAPF32[ptr + 3];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set local space rotation.\r\n     *\r\n     * @param v New world rotation array/vector, expected to have at least 4 elements.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    setRotationLocal(v) {\r\n        this._engine.wasm._wl_object_set_rotation_local(this.objectId, v[0], v[1], v[2], v[3]);\r\n        return this;\r\n    }\r\n    getRotationWorld(out = new Float32Array(4)) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_object_trans_world(this.objectId) / 4; /* Align F32 */\r\n        /* The first 4 floats represent the rotation quaternion. */\r\n        out[0] = wasm.HEAPF32[ptr];\r\n        out[1] = wasm.HEAPF32[ptr + 1];\r\n        out[2] = wasm.HEAPF32[ptr + 2];\r\n        out[3] = wasm.HEAPF32[ptr + 3];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set local space rotation.\r\n     *\r\n     * @param v New world rotation array/vector, expected to have at least 4 elements.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    setRotationWorld(v) {\r\n        this._engine.wasm._wl_object_set_rotation_world(this.objectId, v[0], v[1], v[2], v[3]);\r\n        return this;\r\n    }\r\n    getTransformLocal(out = new Float32Array(8)) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_object_trans_local(this.objectId) / 4; /* Align F32 */\r\n        out[0] = wasm.HEAPF32[ptr];\r\n        out[1] = wasm.HEAPF32[ptr + 1];\r\n        out[2] = wasm.HEAPF32[ptr + 2];\r\n        out[3] = wasm.HEAPF32[ptr + 3];\r\n        out[4] = wasm.HEAPF32[ptr + 4];\r\n        out[5] = wasm.HEAPF32[ptr + 5];\r\n        out[6] = wasm.HEAPF32[ptr + 6];\r\n        out[7] = wasm.HEAPF32[ptr + 7];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set local space rotation.\r\n     *\r\n     * @param v New local transform array, expected to have at least 8 elements.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    setTransformLocal(v) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_object_trans_local(this.objectId) / 4; /* Align F32 */\r\n        wasm.HEAPF32[ptr] = v[0];\r\n        wasm.HEAPF32[ptr + 1] = v[1];\r\n        wasm.HEAPF32[ptr + 2] = v[2];\r\n        wasm.HEAPF32[ptr + 3] = v[3];\r\n        wasm.HEAPF32[ptr + 4] = v[4];\r\n        wasm.HEAPF32[ptr + 5] = v[5];\r\n        wasm.HEAPF32[ptr + 6] = v[6];\r\n        wasm.HEAPF32[ptr + 7] = v[7];\r\n        this.setDirty();\r\n        return this;\r\n    }\r\n    getTransformWorld(out = new Float32Array(8)) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_object_trans_world(this.objectId) / 4; /* Align F32 */\r\n        out[0] = wasm.HEAPF32[ptr];\r\n        out[1] = wasm.HEAPF32[ptr + 1];\r\n        out[2] = wasm.HEAPF32[ptr + 2];\r\n        out[3] = wasm.HEAPF32[ptr + 3];\r\n        out[4] = wasm.HEAPF32[ptr + 4];\r\n        out[5] = wasm.HEAPF32[ptr + 5];\r\n        out[6] = wasm.HEAPF32[ptr + 6];\r\n        out[7] = wasm.HEAPF32[ptr + 7];\r\n        return out;\r\n    }\r\n    /**\r\n     * Set world space rotation.\r\n     *\r\n     * @param v New world transform array, expected to have at least 8 elements.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    setTransformWorld(v) {\r\n        const wasm = this._engine.wasm;\r\n        const ptr = wasm._wl_object_trans_world(this.objectId) / 4; /* Align F32 */\r\n        wasm.HEAPF32[ptr] = v[0];\r\n        wasm.HEAPF32[ptr + 1] = v[1];\r\n        wasm.HEAPF32[ptr + 2] = v[2];\r\n        wasm.HEAPF32[ptr + 3] = v[3];\r\n        wasm.HEAPF32[ptr + 4] = v[4];\r\n        wasm.HEAPF32[ptr + 5] = v[5];\r\n        wasm.HEAPF32[ptr + 6] = v[6];\r\n        wasm.HEAPF32[ptr + 7] = v[7];\r\n        this._engine.wasm._wl_object_trans_world_to_local(this.objectId);\r\n        return this;\r\n    }\r\n    /**\r\n     * Local space transformation.\r\n     *\r\n     * @deprecated Please use {@link Object3D.setTransformLocal} and\r\n     * {@link Object3D.getTransformLocal} instead.\r\n     */\r\n    get transformLocal() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_trans_local(this.objectId), 8);\r\n    }\r\n    /**\r\n     * Set local transform.\r\n     *\r\n     * @param t Local space transformation.\r\n     *\r\n     * @since 0.8.5\r\n     *\r\n     * @deprecated Please use {@link Object3D.setTransformLocal} and\r\n     * {@link Object3D.getTransformLocal} instead.\r\n     */\r\n    set transformLocal(t) {\r\n        this.transformLocal.set(t);\r\n        this.setDirty();\r\n    }\r\n    /**\r\n     * Global / world space transformation.\r\n     *\r\n     * May recompute transformations of the hierarchy of this object,\r\n     * if they were changed by JavaScript components this frame.\r\n     *\r\n     * @deprecated Please use {@link Object3D.setTransformWorld} and\r\n     * {@link Object3D.getTransformWorld} instead.\r\n     */\r\n    get transformWorld() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_trans_world(this.objectId), 8);\r\n    }\r\n    /**\r\n     * Set world transform.\r\n     *\r\n     * @param t Global / world space transformation.\r\n     *\r\n     * @since 0.8.5\r\n     *\r\n     * @deprecated Please use {@link Object3D.setTransformWorld} and\r\n     * {@link Object3D.getTransformWorld} instead.\r\n     */\r\n    set transformWorld(t) {\r\n        this.transformWorld.set(t);\r\n        this._engine.wasm._wl_object_trans_world_to_local(this.objectId);\r\n    }\r\n    /**\r\n     * Local / object space scaling.\r\n     *\r\n     * @deprecated Please use {@link Object3D.setScalingLocal} and\r\n     * {@link Object3D.getScalingLocal} instead.\r\n     */\r\n    get scalingLocal() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_scaling_local(this.objectId), 3);\r\n    }\r\n    /**\r\n     * Set local space scaling.\r\n     *\r\n     * @param s Local space scaling.\r\n     *\r\n     * @since 0.8.7\r\n     *\r\n     * @deprecated Please use {@link Object3D.setScalingLocal} and\r\n     * {@link Object3D.getScalingLocal} instead.\r\n     */\r\n    set scalingLocal(s) {\r\n        this.scalingLocal.set(s);\r\n        this.setDirty();\r\n    }\r\n    /**\r\n     * Global / world space scaling.\r\n     *\r\n     * May recompute transformations of the hierarchy of this object,\r\n     * if they were changed by JavaScript components this frame.\r\n     *\r\n     * @deprecated Please use {@link Object3D.setScalingWorld} and\r\n     * {@link Object3D.getScalingWorld} instead.\r\n     */\r\n    get scalingWorld() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_object_scaling_world(this.objectId), 3);\r\n    }\r\n    /**\r\n     * Set world space scaling.\r\n     *\r\n     * @param t World space scaling.\r\n     *\r\n     * @since 0.8.7\r\n     *\r\n     * @deprecated Please use {@link Object3D.setScalingWorld} and\r\n     * {@link Object3D.getScalingWorld} instead.\r\n     */\r\n    set scalingWorld(s) {\r\n        this.scalingWorld.set(s);\r\n        this._engine.wasm._wl_object_scaling_world_to_local(this.objectId);\r\n    }\r\n    /**\r\n     * Local space rotation.\r\n     *\r\n     * @since 0.8.7\r\n     *\r\n     * @deprecated Please use {@link Object3D.getRotationLocal} and\r\n     * {@link Object3D.setRotationLocal} instead.\r\n     */\r\n    get rotationLocal() {\r\n        return this.transformLocal.subarray(0, 4);\r\n    }\r\n    /**\r\n     * Global / world space rotation\r\n     *\r\n     * @since 0.8.7\r\n     *\r\n     * @deprecated Please use {@link Object3D.getRotationWorld} and\r\n     * {@link Object3D.setRotationWorld} instead.\r\n     */\r\n    get rotationWorld() {\r\n        return this.transformWorld.subarray(0, 4);\r\n    }\r\n    /**\r\n     * Set local space rotation.\r\n     *\r\n     * @param r Local space rotation\r\n     *\r\n     * @since 0.8.7\r\n     *\r\n     * @deprecated Please use {@link Object3D.getRotationLocal} and\r\n     * {@link Object3D.setRotationLocal} instead.\r\n     */\r\n    set rotationLocal(r) {\r\n        this._engine.wasm._wl_object_set_rotation_local(this.objectId, r[0], r[1], r[2], r[3]);\r\n    }\r\n    /**\r\n     * Set world space rotation.\r\n     *\r\n     * @param r Global / world space rotation.\r\n     *\r\n     * @since 0.8.7\r\n     *\r\n     * @deprecated Please use {@link Object3D.getRotationWorld} and\r\n     * {@link Object3D.setRotationWorld} instead.\r\n     */\r\n    set rotationWorld(r) {\r\n        this._engine.wasm._wl_object_set_rotation_world(this.objectId, r[0], r[1], r[2], r[3]);\r\n    }\r\n    /** @deprecated Please use {@link Object3D.getForwardWorld} instead. */\r\n    getForward(out) {\r\n        return this.getForwardWorld(out);\r\n    }\r\n    /**\r\n     * Compute the object's forward facing world space vector.\r\n     *\r\n     * The forward vector in object space is along the negative z-axis, i.e.,\r\n     * `[0, 0, -1]`.\r\n     *\r\n     * @param out Destination array/vector, expected to have at least 3 elements.\r\n     * @return The `out` parameter.\r\n     */\r\n    getForwardWorld(out) {\r\n        out[0] = 0;\r\n        out[1] = 0;\r\n        out[2] = -1;\r\n        this.transformVectorWorld(out);\r\n        return out;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.getUpWorld} instead. */\r\n    getUp(out) {\r\n        return this.getUpWorld(out);\r\n    }\r\n    /**\r\n     * Compute the object's up facing world space vector.\r\n     *\r\n     * @param out Destination array/vector, expected to have at least 3 elements.\r\n     * @return The `out` parameter.\r\n     */\r\n    getUpWorld(out) {\r\n        out[0] = 0;\r\n        out[1] = 1;\r\n        out[2] = 0;\r\n        this.transformVectorWorld(out);\r\n        return out;\r\n    }\r\n    /** @deprecated Please use {@link Object3D.getRightWorld} instead. */\r\n    getRight(out) {\r\n        return this.getRightWorld(out);\r\n    }\r\n    /**\r\n     * Compute the object's right facing world space vector.\r\n     *\r\n     * @param out Destination array/vector, expected to have at least 3 elements.\r\n     * @return The `out` parameter.\r\n     */\r\n    getRightWorld(out) {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        this.transformVectorWorld(out);\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a vector by this object's world transform.\r\n     *\r\n     * @param out Out vector\r\n     * @param v Vector to transform, default `out`\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    transformVectorWorld(out, v = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat[0] = v[0];\r\n        wasm._tempMemFloat[1] = v[1];\r\n        wasm._tempMemFloat[2] = v[2];\r\n        wasm._wl_object_transformVectorWorld(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a vector by this object's local transform.\r\n     *\r\n     * @param out Out vector\r\n     * @param v Vector to transform, default `out`\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    transformVectorLocal(out, v = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat[0] = v[0];\r\n        wasm._tempMemFloat[1] = v[1];\r\n        wasm._tempMemFloat[2] = v[2];\r\n        wasm._wl_object_transformVectorLocal(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a point by this object's world transform.\r\n     *\r\n     * @param out Out point.\r\n     * @param p Point to transform, default `out`.\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    transformPointWorld(out, p = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat[0] = p[0];\r\n        wasm._tempMemFloat[1] = p[1];\r\n        wasm._tempMemFloat[2] = p[2];\r\n        wasm._wl_object_transformPointWorld(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a point by this object's local transform.\r\n     *\r\n     * @param out Out point.\r\n     * @param p Point to transform, default `out`.\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    transformPointLocal(out, p = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat[0] = p[0];\r\n        wasm._tempMemFloat[1] = p[1];\r\n        wasm._tempMemFloat[2] = p[2];\r\n        wasm._wl_object_transformPointLocal(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a vector by this object's inverse world transform.\r\n     *\r\n     * @param out Out vector.\r\n     * @param v Vector to transform, default `out`.\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    transformVectorInverseWorld(out, v = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat[0] = v[0];\r\n        wasm._tempMemFloat[1] = v[1];\r\n        wasm._tempMemFloat[2] = v[2];\r\n        wasm._wl_object_transformVectorInverseWorld(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a vector by this object's inverse local transform.\r\n     *\r\n     * @param out Out vector\r\n     * @param v Vector to transform, default `out`\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    transformVectorInverseLocal(out, v = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat[0] = v[0];\r\n        wasm._tempMemFloat[1] = v[1];\r\n        wasm._tempMemFloat[2] = v[2];\r\n        wasm._wl_object_transformVectorInverseLocal(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a point by this object's inverse world transform.\r\n     *\r\n     * @param out Out point.\r\n     * @param p Point to transform, default `out`.\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    transformPointInverseWorld(out, p = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat[0] = p[0];\r\n        wasm._tempMemFloat[1] = p[1];\r\n        wasm._tempMemFloat[2] = p[2];\r\n        wasm._wl_object_transformPointInverseWorld(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a point by this object's inverse local transform.\r\n     *\r\n     * @param out Out point.\r\n     * @param p Point to transform, default `out`.\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    transformPointInverseLocal(out, p = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat.set(p);\r\n        wasm._wl_object_transformPointInverseLocal(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform an object space dual quaternion into world space.\r\n     *\r\n     * @param out Out transformation.\r\n     * @param q Local space transformation, default `out`.\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    toWorldSpaceTransform(out, q = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat.set(q);\r\n        wasm._wl_object_toWorldSpaceTransform(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        out[3] = wasm._tempMemFloat[3];\r\n        out[4] = wasm._tempMemFloat[4];\r\n        out[5] = wasm._tempMemFloat[5];\r\n        out[6] = wasm._tempMemFloat[6];\r\n        out[7] = wasm._tempMemFloat[7];\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a world space dual quaternion into local space.\r\n     *\r\n     * @param out Out transformation\r\n     * @param q World space transformation, default `out`\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    toLocalSpaceTransform(out, q = out) {\r\n        const p = this.parent;\r\n        if (p) {\r\n            p.toObjectSpaceTransform(out, q);\r\n            return out;\r\n        }\r\n        if (out !== q) {\r\n            out[0] = q[0];\r\n            out[1] = q[1];\r\n            out[2] = q[2];\r\n            out[3] = q[3];\r\n            out[4] = q[4];\r\n            out[5] = q[5];\r\n            out[6] = q[6];\r\n            out[7] = q[7];\r\n        }\r\n        return out;\r\n    }\r\n    /**\r\n     * Transform a world space dual quaternion into object space.\r\n     *\r\n     * @param out Out transformation.\r\n     * @param q World space transformation, default `out`\r\n     * @return The `out` parameter.\r\n     *\r\n     * @since 0.8.7\r\n     */\r\n    toObjectSpaceTransform(out, q = out) {\r\n        const wasm = this._engine.wasm;\r\n        wasm._tempMemFloat.set(q);\r\n        wasm._wl_object_toObjectSpaceTransform(this.objectId, wasm._tempMem);\r\n        out[0] = wasm._tempMemFloat[0];\r\n        out[1] = wasm._tempMemFloat[1];\r\n        out[2] = wasm._tempMemFloat[2];\r\n        out[3] = wasm._tempMemFloat[3];\r\n        out[4] = wasm._tempMemFloat[4];\r\n        out[5] = wasm._tempMemFloat[5];\r\n        out[6] = wasm._tempMemFloat[6];\r\n        out[7] = wasm._tempMemFloat[7];\r\n        return out;\r\n    }\r\n    /**\r\n     * Turn towards / look at target.\r\n     *\r\n     * Rotates the object so that its forward vector faces towards the target\r\n     * position. The `up` vector acts as a hint to uniquely orient the object's\r\n     * up direction. When orienting a view component, the projected `up` vector\r\n     * faces upwards on the viewing plane.\r\n     *\r\n     * @param p Target position to turn towards, in world space.\r\n     * @param up Up vector to align object with, in world space. Default is `[0, 1, 0]`.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    lookAt(p, up = UP_VECTOR) {\r\n        this._engine.wasm._wl_object_lookAt(this.objectId, p[0], p[1], p[2], up[0], up[1], up[2]);\r\n        return this;\r\n    }\r\n    /** Destroy the object with all of its components and remove it from the scene */\r\n    destroy() {\r\n        if (this._objectId < 0)\r\n            return;\r\n        this.engine.wasm._wl_scene_remove_object(this._objectId);\r\n        this.engine._destroyObject(this);\r\n    }\r\n    /**\r\n     * Mark transformation dirty.\r\n     *\r\n     * Causes an eventual recalculation of {@link transformWorld}, either\r\n     * on next {@link getTranslationWorld}, {@link transformWorld} or\r\n     * {@link scalingWorld} or the beginning of next frame, whichever\r\n     * happens first.\r\n     */\r\n    setDirty() {\r\n        this._engine.wasm._wl_object_set_dirty(this.objectId);\r\n    }\r\n    /**\r\n     * Disable/enable all components of this object.\r\n     *\r\n     * @param b New state for the components.\r\n     *\r\n     * @since 0.8.5\r\n     */\r\n    set active(b) {\r\n        const comps = this.getComponents();\r\n        for (let c of comps) {\r\n            c.active = b;\r\n        }\r\n    }\r\n    getComponent(typeOrClass, index = 0) {\r\n        const type = isString(typeOrClass) ? typeOrClass : typeOrClass.TypeName;\r\n        const wasm = this._engine.wasm;\r\n        const componentType = wasm._wl_get_component_manager_index(wasm.tempUTF8(type));\r\n        if (componentType < 0) {\r\n            /* Not a native component, try js: */\r\n            const typeIndex = wasm._componentTypeIndices[type];\r\n            if (typeIndex === undefined)\r\n                return null;\r\n            const jsIndex = wasm._wl_get_js_component_index(this.objectId, typeIndex, index);\r\n            if (jsIndex < 0)\r\n                return null;\r\n            const component = this._engine.wasm._components[jsIndex];\r\n            return component.constructor !== BrokenComponent ? component : null;\r\n        }\r\n        const componentId = this._engine.wasm._wl_get_component_id(this.objectId, componentType, index);\r\n        return this._engine._wrapComponent(type, componentType, componentId);\r\n    }\r\n    getComponents(typeOrClass) {\r\n        const wasm = this._engine.wasm;\r\n        let componentType = null;\r\n        let type = null;\r\n        if (typeOrClass) {\r\n            type = isString(typeOrClass) ? typeOrClass : typeOrClass.TypeName;\r\n            componentType = wasm._typeIndexFor(type);\r\n        }\r\n        const components = [];\r\n        const maxComps = Math.floor((wasm._tempMemSize / 3) * 2);\r\n        const componentsCount = wasm._wl_object_get_components(this.objectId, wasm._tempMem, maxComps);\r\n        const offset = 2 * componentsCount;\r\n        wasm._wl_object_get_component_types(this.objectId, wasm._tempMem + offset, maxComps);\r\n        const jsManagerIndex = wasm._jsManagerIndex;\r\n        for (let i = 0; i < componentsCount; ++i) {\r\n            const t = wasm._tempMemUint8[i + offset];\r\n            const componentId = wasm._tempMemUint16[i];\r\n            /* Handle JS types separately */\r\n            if (t == jsManagerIndex) {\r\n                const typeIndex = wasm._wl_get_js_component_index_for_id(componentId);\r\n                const comp = wasm._components[typeIndex];\r\n                const matches = componentType === null || comp.type == type;\r\n                if (comp.constructor !== BrokenComponent && matches) {\r\n                    components.push(comp);\r\n                }\r\n                continue;\r\n            }\r\n            if (componentType === null) {\r\n                const managerName = wasm._typeNameFor(t);\r\n                components.push(this._engine._wrapComponent(managerName, t, componentId));\r\n            }\r\n            else if (t == componentType) {\r\n                /* Optimized manager name retrieval, already have type */\r\n                components.push(this._engine._wrapComponent(type, componentType, componentId));\r\n            }\r\n        }\r\n        return components;\r\n    }\r\n    addComponent(typeOrClass, params) {\r\n        const wasm = this._engine.wasm;\r\n        const type = isString(typeOrClass) ? typeOrClass : typeOrClass.TypeName;\r\n        const componentType = wasm._typeIndexFor(type);\r\n        let component = null;\r\n        let componentIndex = null;\r\n        if (componentType < 0) {\r\n            /* JavaScript component */\r\n            if (!(type in wasm._componentTypeIndices)) {\r\n                throw new TypeError(\"Unknown component type '\" + type + \"'\");\r\n            }\r\n            const componentId = wasm._wl_object_add_js_component(this.objectId, wasm._componentTypeIndices[type]);\r\n            componentIndex = wasm._wl_get_js_component_index_for_id(componentId);\r\n            component = wasm._components[componentIndex];\r\n        }\r\n        else {\r\n            /* native component */\r\n            const componentId = wasm._wl_object_add_component(this.objectId, componentType);\r\n            component = this._engine._wrapComponent(type, componentType, componentId);\r\n        }\r\n        if (params !== undefined)\r\n            component.copy(params);\r\n        /* Explicitly initialize native components */\r\n        if (componentType < 0) {\r\n            /* @todo: `componentIndex` can be null here, that's an error */\r\n            wasm._wljs_component_init(componentIndex);\r\n            /* start() is called through onActivate() */\r\n        }\r\n        /* If it was not explicitly requested by the user to leave the component inactive,\r\n         * we activate it as a final step. This invalidates componentIndex! */\r\n        if (!params || !('active' in params && !params.active)) {\r\n            component.active = true;\r\n        }\r\n        return component;\r\n    }\r\n    /**\r\n     * Search for descendants matching the name.\r\n     *\r\n     * This method is a wrapper around {@link Object3D.findByNameDirect} and\r\n     * {@link Object3D.findByNameRecursive}.\r\n     *\r\n     * @param name The name to search for.\r\n     * @param recursive If `true`, the method will look at all the descendants of this object.\r\n     *     If `false`, this method will only perform the search in direct children.\r\n     * @returns An array of {@link Object3D} matching the name.\r\n     *\r\n     * @since 1.1.0\r\n     */\r\n    findByName(name, recursive = false) {\r\n        return recursive ? this.findByNameRecursive(name) : this.findByNameDirect(name);\r\n    }\r\n    /**\r\n     * Search for all **direct** children matching the name.\r\n     *\r\n     * @note Even though this method is heavily optimized, it does perform\r\n     * a linear search to find the objects. Do not use in a hot path.\r\n     *\r\n     * @param name The name to search for.\r\n     * @returns An array of {@link Object3D} matching the name.\r\n     *\r\n     * @since 1.1.0\r\n     */\r\n    findByNameDirect(name) {\r\n        const wasm = this._engine.wasm;\r\n        const id = this._objectId;\r\n        /* Divide by 4 to get half as many ushort as possible */\r\n        const tempSizeU16 = wasm._tempMemSize >> 2;\r\n        const maxCount = tempSizeU16 - 2; /* Reserve two ushort */\r\n        const buffer = wasm._tempMemUint16;\r\n        buffer[maxCount] = 0; /* Index offset */\r\n        buffer[maxCount + 1] = 0; /* child count */\r\n        const bufferPtr = wasm._tempMem;\r\n        const indexPtr = bufferPtr + maxCount * 2;\r\n        const childCountPtr = bufferPtr + maxCount * 2 + 2;\r\n        const namePtr = wasm.tempUTF8(name, (maxCount + 2) * 2);\r\n        const result = [];\r\n        let read = 0;\r\n        while ((read = wasm._wl_object_findByName(id, namePtr, indexPtr, childCountPtr, bufferPtr, maxCount))) {\r\n            for (let i = 0; i < read; ++i)\r\n                result.push(this.engine.wrapObject(buffer[i]));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Search for **all descendants** matching the name.\r\n     *\r\n     * @note Even though this method is heavily optimized, it does perform\r\n     * a linear search to find the objects. Do not use in a hot path.\r\n     *\r\n     * @param name The name to search for.\r\n     * @returns An array of {@link Object3D} matching the name.\r\n     *\r\n     * @since 1.1.0\r\n     */\r\n    findByNameRecursive(name) {\r\n        const wasm = this._engine.wasm;\r\n        const id = this._objectId;\r\n        /* Divide by 4 to get half as many ushort as possible */\r\n        const tempSizeU16 = wasm._tempMemSize >> 2;\r\n        const maxCount = tempSizeU16 - 1; /* Reserve one ushort */\r\n        const buffer = wasm._tempMemUint16;\r\n        buffer[maxCount] = 0; /* Index offset */\r\n        const bufferPtr = wasm._tempMem;\r\n        const indexPtr = bufferPtr + maxCount * 2;\r\n        const namePtr = wasm.tempUTF8(name, (maxCount + 1) * 2);\r\n        let read = 0;\r\n        const result = [];\r\n        while ((read = wasm._wl_object_findByNameRecursive(id, namePtr, indexPtr, bufferPtr, maxCount))) {\r\n            for (let i = 0; i < read; ++i)\r\n                result.push(this.engine.wrapObject(buffer[i]));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Whether given object's transformation has changed.\r\n     */\r\n    get changed() {\r\n        return !!this._engine.wasm._wl_object_is_changed(this.objectId);\r\n    }\r\n    /**\r\n     * `true` if the object is destroyed, `false` otherwise.\r\n     *\r\n     * If {@link WonderlandEngine.erasePrototypeOnDestroy} is `true`,\r\n     * reading a custom property will not work:\r\n     *\r\n     * ```js\r\n     * engine.erasePrototypeOnDestroy = true;\r\n     *\r\n     * const obj = scene.addObject();\r\n     * obj.customParam = 'Hello World!';\r\n     *\r\n     * console.log(obj.isDestroyed); // Prints `false`\r\n     * obj.destroy();\r\n     * console.log(obj.isDestroyed); // Prints `true`\r\n     * console.log(obj.customParam); // Throws an error\r\n     * ```\r\n     *\r\n     * @since 1.1.1\r\n     */\r\n    get isDestroyed() {\r\n        return this._objectId < 0;\r\n    }\r\n    /**\r\n     * Checks equality by comparing whether the wrapped native object ids are\r\n     * equal.\r\n     *\r\n     * @param otherObject Object to check equality with.\r\n     * @returns Whether this object equals the given object.\r\n     */\r\n    equals(otherObject) {\r\n        if (!otherObject)\r\n            return false;\r\n        return this.objectId == otherObject.objectId;\r\n    }\r\n}\r\n/**\r\n * Wrapper around a native skin data.\r\n */\r\nexport class Skin {\r\n    /**\r\n     * Index of the skin in the manager.\r\n     * @hidden\r\n     */\r\n    _index;\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    constructor(engine, index) {\r\n        this._engine = engine;\r\n        this._index = index;\r\n    }\r\n    /** Amount of joints in this skin. */\r\n    get jointCount() {\r\n        return this._engine.wasm._wl_skin_get_joint_count(this._index);\r\n    }\r\n    /** Joints object ids for this skin */\r\n    get jointIds() {\r\n        const wasm = this._engine.wasm;\r\n        return new Uint16Array(wasm.HEAPU16.buffer, wasm._wl_skin_joint_ids(this._index), this.jointCount);\r\n    }\r\n    /**\r\n     * Dual quaternions in a flat array of size 8 times {@link jointCount}.\r\n     *\r\n     * Inverse bind transforms of the skin.\r\n     */\r\n    get inverseBindTransforms() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_skin_inverse_bind_transforms(this._index), 8 * this.jointCount);\r\n    }\r\n    /**\r\n     * Vectors in a flat array of size 3 times {@link jointCount}.\r\n     *\r\n     * Inverse bind scalings of the skin.\r\n     */\r\n    get inverseBindScalings() {\r\n        const wasm = this._engine.wasm;\r\n        return new Float32Array(wasm.HEAPF32.buffer, wasm._wl_skin_inverse_bind_scalings(this._index), 3 * this.jointCount);\r\n    }\r\n    /**\r\n     * Checks equality by comparing whether the wrapped native skin ids are\r\n     * equal.\r\n     *\r\n     * @param otherSkin Skin to check equality with.\r\n     * @returns Whether this skin equals the given skin.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    equals(otherSkin) {\r\n        if (!otherSkin)\r\n            return false;\r\n        return this._index === otherSkin._index;\r\n    }\r\n}\r\n/* For backward compatibility with < 1.0.0. */\r\nexport { Object3D as Object };\r\n/**\r\n * Ray hit.\r\n *\r\n * Result of a {@link Scene.rayCast}.\r\n *\r\n * @note this class wraps internal engine data and should only be created internally.\r\n */\r\nexport class RayHit {\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /** Pointer to the memory heap. */\r\n    _ptr;\r\n    /**\r\n     * @param ptr Pointer to the ray hits memory.\r\n     */\r\n    constructor(engine, ptr) {\r\n        if ((ptr & 3) !== 0) {\r\n            throw new Error('Misaligned pointer: please report a bug');\r\n        }\r\n        this._engine = engine;\r\n        this._ptr = ptr;\r\n    }\r\n    /** Array of ray hit locations. */\r\n    get locations() {\r\n        let p = this._ptr;\r\n        let l = [];\r\n        for (let i = 0; i < this.hitCount; ++i) {\r\n            l.push(new Float32Array(this._engine.wasm.HEAPF32.buffer, p + 12 * i, 3));\r\n        }\r\n        return l;\r\n    }\r\n    /** Array of ray hit normals (only when using {@link Physics#rayCast}. */\r\n    get normals() {\r\n        let p = this._ptr + 48;\r\n        let l = [];\r\n        for (let i = 0; i < this.hitCount; ++i) {\r\n            l.push(new Float32Array(this._engine.wasm.HEAPF32.buffer, p + 12 * i, 3));\r\n        }\r\n        return l;\r\n    }\r\n    /**\r\n     * Prefer these to recalculating the distance from locations.\r\n     *\r\n     * Distances of array hits to ray origin.\r\n     */\r\n    get distances() {\r\n        const p = this._ptr + 48 * 2;\r\n        return new Float32Array(this._engine.wasm.HEAPF32.buffer, p, this.hitCount);\r\n    }\r\n    /** Hit objects */\r\n    get objects() {\r\n        const HEAPU16 = this._engine.wasm.HEAPU16;\r\n        const objects = [null, null, null, null];\r\n        let p = (this._ptr + (48 * 2 + 16)) >> 1;\r\n        for (let i = 0; i < this.hitCount; ++i) {\r\n            objects[i] = this._engine.wrapObject(HEAPU16[p + i]);\r\n        }\r\n        return objects;\r\n    }\r\n    /** Number of hits (max 4) */\r\n    get hitCount() {\r\n        return Math.min(this._engine.wasm.HEAPU32[this._ptr / 4 + 30], 4);\r\n    }\r\n}\r\nclass math {\r\n    /** (Experimental!) Cubic Hermite spline interpolation for vector3 and quaternions.\r\n     *\r\n     * With `f == 0`, `out` will be `b`, if `f == 1`, `out` will be c.\r\n     *\r\n     * Whether a quaternion or vector3 interpolation is intended is determined by\r\n     * length of `a`.\r\n     *\r\n     * @param out Array to write result to.\r\n     * @param a First tangent/handle.\r\n     * @param b First point or quaternion.\r\n     * @param c Second point or quaternion.\r\n     * @param d Second handle.\r\n     * @param f Interpolation factor in [0; 1].\r\n     * @returns The `out` parameter.\r\n     *\r\n     * @since 0.8.6\r\n     */\r\n    static cubicHermite(out, a, b, c, d, f, engine = WL) {\r\n        const wasm = engine.wasm;\r\n        wasm._tempMemFloat.subarray(0).set(a);\r\n        wasm._tempMemFloat.subarray(4).set(b);\r\n        wasm._tempMemFloat.subarray(8).set(c);\r\n        wasm._tempMemFloat.subarray(12).set(d);\r\n        const isQuat = a.length == 4;\r\n        wasm._wl_math_cubicHermite(wasm._tempMem + 4 * 16, wasm._tempMem + 4 * 0, wasm._tempMem + 4 * 4, wasm._tempMem + 4 * 8, wasm._tempMem + 4 * 12, f, isQuat);\r\n        out[0] = wasm._tempMemFloat[16];\r\n        out[1] = wasm._tempMemFloat[17];\r\n        out[2] = wasm._tempMemFloat[18];\r\n        if (isQuat)\r\n            out[3] = wasm._tempMemFloat[19];\r\n        return out;\r\n    }\r\n}\r\nexport { math };\r\n/**\r\n * Class for accessing internationalization (i18n) features.\r\n *\r\n * Allows {@link I18N.onLanguageChanged \"detecting language change\"},\r\n * {@link I18N.language \"setting the current language\"} or translating\r\n * {@link I18N.translate \"individual terms\"}.\r\n *\r\n * Internationalization works with terms,\r\n * a string type keyword that is linked to a different text for each language.\r\n *\r\n * Internally, string parameters for text and js components are\r\n * automatically swapped during language change, given they are linked to a term.\r\n * If manual text swapping is desired, {@link I18N.translate}\r\n * can be used to retrieve the current translation for any term.\r\n *\r\n * You can also use the {@link I18N.onLanguageChanged} to manually update text\r\n * when a language is changed to for example update a number in a string.\r\n *\r\n * @since 1.0.0\r\n */\r\nexport class I18N {\r\n    /**\r\n     * {@link Emitter} for language change events.\r\n     *\r\n     * First parameter to a listener is the old language index,\r\n     * second parameter is the new language index.\r\n     *\r\n     * Usage from a within a component:\r\n     *\r\n     * ```js\r\n     * this.engine.i18n.onLanguageChanged.add((oldLanguageIndex, newLanguageIndex) => {\r\n     *     const oldLanguage = this.engine.i18n.languageName(oldLanguageIndex);\r\n     *     const newLanguage = this.engine.i18n.languageName(newLanguageIndex);\r\n     *     console.log(\"Switched from\", oldLanguage, \"to\", newLanguage);\r\n     * });\r\n     * ```\r\n     */\r\n    onLanguageChanged = new Emitter();\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /** Previously set language index. @hidden */\r\n    _prevLanguageIndex = -1;\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(engine) {\r\n        this._engine = engine;\r\n    }\r\n    /**\r\n     * Set current language and apply translations to linked text parameters.\r\n     *\r\n     * @note This is equivalent to {@link I18N.setLanguage}.\r\n     *\r\n     * @param code Language code to switch to\r\n     */\r\n    set language(code) {\r\n        this.setLanguage(code);\r\n    }\r\n    /** Get current language code. */\r\n    get language() {\r\n        const wasm = this._engine.wasm;\r\n        const code = wasm._wl_i18n_currentLanguage();\r\n        if (code === 0)\r\n            return null;\r\n        return wasm.UTF8ToString(code);\r\n    }\r\n    /**\r\n     * Get the current language index.\r\n     *\r\n     * This method is more efficient than its equivalent:\r\n     *\r\n     * ```js\r\n     * const index = i18n.languageIndex(i18n.language);\r\n     * ```\r\n     */\r\n    get currentIndex() {\r\n        return this._engine.wasm._wl_i18n_currentLanguageIndex();\r\n    }\r\n    /** Previous language index. */\r\n    get previousIndex() {\r\n        return this._prevLanguageIndex;\r\n    }\r\n    /**\r\n     * Set current language and apply translations to linked text parameters.\r\n     *\r\n     * @param code The language code.\r\n     * @returns A promise that resolves with the current index code when the\r\n     *     language is loaded.\r\n     */\r\n    setLanguage(code) {\r\n        if (code == null)\r\n            return Promise.resolve(this.currentIndex);\r\n        const wasm = this._engine.wasm;\r\n        this._prevLanguageIndex = this.currentIndex;\r\n        wasm._wl_i18n_setLanguage(wasm.tempUTF8(code));\r\n        return this._engine.scene\r\n            ._flushAppend(this._engine.scene.baseURL)\r\n            .then(() => this.currentIndex);\r\n    }\r\n    /**\r\n     * Get translated string for a term for the currently loaded language.\r\n     *\r\n     * @param term Term to translate\r\n     */\r\n    translate(term) {\r\n        const wasm = this._engine.wasm;\r\n        const translation = wasm._wl_i18n_translate(wasm.tempUTF8(term));\r\n        if (translation === 0)\r\n            return null;\r\n        return wasm.UTF8ToString(translation);\r\n    }\r\n    /**\r\n     * Get the number of languages in the project.\r\n     *\r\n     */\r\n    languageCount() {\r\n        const wasm = this._engine.wasm;\r\n        return wasm._wl_i18n_languageCount();\r\n    }\r\n    /**\r\n     * Get a language code.\r\n     *\r\n     * @param index Index of the language to get the code from\r\n     */\r\n    languageIndex(code) {\r\n        const wasm = this._engine.wasm;\r\n        return wasm._wl_i18n_languageIndex(wasm.tempUTF8(code));\r\n    }\r\n    /**\r\n     * Get a language code.\r\n     *\r\n     * @param index Index of the language to get the code from\r\n     */\r\n    languageCode(index) {\r\n        const wasm = this._engine.wasm;\r\n        const code = wasm._wl_i18n_languageCode(index);\r\n        if (code === 0)\r\n            return null;\r\n        return wasm.UTF8ToString(code);\r\n    }\r\n    /**\r\n     * Get a language name.\r\n     *\r\n     * @param index Index of the language to get the name from\r\n     */\r\n    languageName(index) {\r\n        const wasm = this._engine.wasm;\r\n        const name = wasm._wl_i18n_languageName(index);\r\n        if (name === 0)\r\n            return null;\r\n        return wasm.UTF8ToString(name);\r\n    }\r\n}\r\n/** Properties of a WebXR session */\r\nexport class XR {\r\n    /** Wonderland WASM bridge. @hidden */\r\n    #wasm;\r\n    #mode;\r\n    constructor(wasm, mode) {\r\n        this.#wasm = wasm;\r\n        this.#mode = mode;\r\n    }\r\n    /** Current WebXR session mode */\r\n    get sessionMode() {\r\n        return this.#mode;\r\n    }\r\n    /** Current WebXR session */\r\n    get session() {\r\n        return this.#wasm.webxr_session;\r\n    }\r\n    /** Current WebXR frame */\r\n    get frame() {\r\n        return this.#wasm.webxr_frame;\r\n    }\r\n    referenceSpaceForType(type) {\r\n        return this.#wasm.webxr_refSpaces[type] ?? null;\r\n    }\r\n    /** Set current reference space type used for retrieving eye, head, hand and joint poses */\r\n    set currentReferenceSpace(refSpace) {\r\n        this.#wasm.webxr_refSpace = refSpace;\r\n        this.#wasm.webxr_refSpaceType = null;\r\n        for (const type of Object.keys(this.#wasm.webxr_refSpaces)) {\r\n            if (this.#wasm.webxr_refSpaces[type] === refSpace) {\r\n                /* Keep track of reference space type */\r\n                this.#wasm.webxr_refSpaceType = type;\r\n            }\r\n        }\r\n    }\r\n    /** Current reference space type used for retrieving eye, head, hand and joint poses */\r\n    get currentReferenceSpace() {\r\n        return this.#wasm.webxr_refSpace;\r\n    }\r\n    /** Current WebXR reference space type or `null` if not a default reference space */\r\n    get currentReferenceSpaceType() {\r\n        return this.#wasm.webxr_refSpaceType;\r\n    }\r\n    /** Current WebXR base layer  */\r\n    get baseLayer() {\r\n        return this.#wasm.webxr_baseLayer;\r\n    }\r\n    /** Current WebXR framebuffer */\r\n    get framebuffers() {\r\n        if (!Array.isArray(this.#wasm.webxr_fbo)) {\r\n            return [this.#wasm.GL.framebuffers[this.#wasm.webxr_fbo]];\r\n        }\r\n        return this.#wasm.webxr_fbo.map((id) => this.#wasm.GL.framebuffers[id]);\r\n    }\r\n}\r\n", "/**\r\n * Fetch a file as an `ArrayBuffer`, with fetch progress passed to a callback.\r\n *\r\n * @param path Path of the file to fetch\r\n * @param onProgress Callback receiving the current fetch progress and total\r\n *     size, in bytes. Also called a final time on completion.\r\n * @returns Promise that resolves when the fetch successfully completes\r\n */\r\nexport function fetchWithProgress(path, onProgress) {\r\n    return new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', path);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = (progress) => {\r\n            if (progress.lengthComputable) {\r\n                onProgress?.(progress.loaded, progress.total);\r\n            }\r\n        };\r\n        xhr.onload = () => {\r\n            if (xhr.status >= 200 && xhr.status < 300) {\r\n                const buffer = xhr.response;\r\n                onProgress?.(buffer.byteLength, buffer.byteLength);\r\n                resolve(buffer);\r\n            }\r\n            else {\r\n                reject(xhr.statusText);\r\n            }\r\n        };\r\n        xhr.onerror = () => reject(xhr.statusText);\r\n        xhr.send();\r\n    });\r\n}\r\n/**\r\n * Get parent path from a URL.\r\n *\r\n * @param url URL to get the parent from.\r\n * @returns Parent URL without trailing slash.\r\n */\r\nexport function getBaseUrl(url) {\r\n    return url.substring(0, url.lastIndexOf('/'));\r\n}\r\n", "/**\r\n * Schedule a timeout, resolving in `time` milliseconds.\r\n *\r\n * @note `setTimeout` being a macro-task, this method can\r\n * be use as a debounce call.\r\n *\r\n * @param time The time until it resolves, in milliseconds.\r\n * @returns A promise resolving in `time` ms.\r\n */\r\nexport function timeout(time) {\r\n    return new Promise((res) => setTimeout(res, time));\r\n}\r\n/**\r\n * Clamp the value in the range [min; max].\r\n *\r\n * @param val The value to clamp.\r\n * @param min The minimum value (inclusive).\r\n * @param max The maximum value (inclusive).\r\n * @returns The clamped value.\r\n */\r\nexport function clamp(val, min, max) {\r\n    return Math.max(Math.min(max, val), min);\r\n}\r\n", "import { LogTag } from './index.js';\r\nimport { Emitter } from './utils/event.js';\r\nimport { fetchWithProgress, getBaseUrl } from './utils/fetch.js';\r\nimport { clamp, timeout } from './utils/misc.js';\r\nimport { isString } from './utils/object.js';\r\nimport { Material, RayHit, ViewComponent } from './wonderland.js';\r\n/**\r\n * Constants\r\n */\r\n/** Magic number for .bin */\r\nconst MAGIC_BIN = 'WLEV';\r\n/**\r\n * Provides global scene functionality like raycasting.\r\n */\r\nexport class Scene {\r\n    /** Called before rendering the scene */\r\n    onPreRender = new Emitter();\r\n    /** Called after the scene has been rendered */\r\n    onPostRender = new Emitter();\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /** Ray hit pointer in WASM heap. @hidden */\r\n    _rayHit;\r\n    /** Ray hit. @hidden */\r\n    _hit;\r\n    /**\r\n     * Relative directory of the scene that was loaded with {@link Scene.load}\r\n     * Used for loading any files relative to the main scene.\r\n     *\r\n     * We need this for the tests that load bin files since we aren't loading\r\n     * from the deploy folder directly. (test/resources/projects/*.bin)\r\n     *\r\n     * @hidden\r\n     */\r\n    _baseURL;\r\n    constructor(engine) {\r\n        this._engine = engine;\r\n        this._rayHit = engine.wasm._malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\r\n        this._hit = new RayHit(this._engine, this._rayHit);\r\n        this._baseURL = '';\r\n    }\r\n    /**\r\n     * Currently active view components.\r\n     */\r\n    get activeViews() {\r\n        const wasm = this._engine.wasm;\r\n        const count = wasm._wl_scene_get_active_views(this._engine.wasm._tempMem, 16);\r\n        const views = [];\r\n        const viewTypeIndex = wasm._typeIndexFor('view');\r\n        for (let i = 0; i < count; ++i) {\r\n            views.push(new ViewComponent(this._engine, viewTypeIndex, this._engine.wasm._tempMemInt[i]));\r\n        }\r\n        return views;\r\n    }\r\n    /**\r\n     * Relative directory of the scene that was loaded with {@link Scene.load}\r\n     * Used for loading any files relative to the main scene.\r\n     *\r\n     * @hidden\r\n     */\r\n    get baseURL() {\r\n        return this._baseURL;\r\n    }\r\n    /**\r\n     * Cast a ray through the scene and find intersecting objects.\r\n     *\r\n     * The resulting ray hit will contain up to **4** closest ray hits,\r\n     * sorted by increasing distance.\r\n     *\r\n     * @param o Ray origin.\r\n     * @param d Ray direction.\r\n     * @param group Collision group to filter by: only objects that are\r\n     *        part of given group are considered for raycast.\r\n     * @param maxDistance Maximum **inclusive** hit distance. Defaults to `100`.\r\n     *\r\n     * @returns The scene cached {@link RayHit} instance.\r\n     * @note The returned object is owned by the Scene instance\r\n     *   will be reused with the next {@link Scene#rayCast} call.\r\n     */\r\n    rayCast(o, d, group, maxDistance = 100.0) {\r\n        this._engine.wasm._wl_scene_ray_cast(o[0], o[1], o[2], d[0], d[1], d[2], group, this._rayHit, maxDistance);\r\n        return this._hit;\r\n    }\r\n    /**\r\n     * Add an object to the scene.\r\n     *\r\n     * @param parent Parent object or `null`.\r\n     * @returns A newly created object.\r\n     */\r\n    addObject(parent = null) {\r\n        const parentId = parent ? parent.objectId : 0;\r\n        const objectId = this._engine.wasm._wl_scene_add_object(parentId);\r\n        return this._engine.wrapObject(objectId);\r\n    }\r\n    /**\r\n     * Batch-add objects to the scene.\r\n     *\r\n     * Will provide better performance for adding multiple objects (e.g. > 16)\r\n     * than calling {@link Scene#addObject} repeatedly in a loop.\r\n     *\r\n     * By providing upfront information of how many objects will be required,\r\n     * the engine is able to batch-allocate the required memory rather than\r\n     * convervatively grow the memory in small steps.\r\n     *\r\n     * **Experimental:** This API might change in upcoming versions.\r\n     *\r\n     * @param count Number of objects to add.\r\n     * @param parent Parent object or `null`, default `null`.\r\n     * @param componentCountHint Hint for how many components in total will\r\n     *      be added to the created objects afterwards, default `0`.\r\n     * @returns Newly created objects\r\n     */\r\n    addObjects(count, parent = null, componentCountHint = 0) {\r\n        const parentId = parent ? parent.objectId : 0;\r\n        this._engine.wasm.requireTempMem(count * 2);\r\n        const actualCount = this._engine.wasm._wl_scene_add_objects(parentId, count, componentCountHint || 0, this._engine.wasm._tempMem, this._engine.wasm._tempMemSize >> 1);\r\n        const ids = this._engine.wasm._tempMemUint16.subarray(0, actualCount);\r\n        const wrapper = this._engine.wrapObject.bind(this._engine);\r\n        const objects = Array.from(ids, wrapper);\r\n        return objects;\r\n    }\r\n    /**\r\n     * Pre-allocate memory for a given amount of objects and components.\r\n     *\r\n     * Will provide better performance for adding objects later with {@link Scene#addObject}\r\n     * and {@link Scene#addObjects}.\r\n     *\r\n     * By providing upfront information of how many objects will be required,\r\n     * the engine is able to batch-allocate the required memory rather than\r\n     * conservatively grow the memory in small steps.\r\n     *\r\n     * **Experimental:** This API might change in upcoming versions.\r\n     *\r\n     * @param objectCount Number of objects to add.\r\n     * @param componentCountPerType Amount of components to\r\n     *      allocate for {@link Object3D.addComponent}, e.g. `{mesh: 100, collision: 200, \"my-comp\": 100}`.\r\n     * @since 0.8.10\r\n     */\r\n    reserveObjects(objectCount, componentCountPerType) {\r\n        const wasm = this._engine.wasm;\r\n        componentCountPerType = componentCountPerType || {};\r\n        const jsManagerIndex = wasm._jsManagerIndex;\r\n        let countsPerTypeIndex = wasm._tempMemInt.subarray();\r\n        countsPerTypeIndex.fill(0);\r\n        for (const e of Object.entries(componentCountPerType)) {\r\n            const typeIndex = wasm._typeIndexFor(e[0]);\r\n            countsPerTypeIndex[typeIndex < 0 ? jsManagerIndex : typeIndex] += e[1];\r\n        }\r\n        wasm._wl_scene_reserve_objects(objectCount, wasm._tempMem);\r\n    }\r\n    /**\r\n     * Top-level objects of this scene.\r\n     *\r\n     * See {@link Object3D.children} for more information.\r\n     *\r\n     * @since 1.2.0\r\n     */\r\n    get children() {\r\n        const root = this._engine.wrapObject(0);\r\n        return root.children;\r\n    }\r\n    /**\r\n     * Search for objects matching the name.\r\n     *\r\n     * See {@link Object3D.findByName} for more information.\r\n     *\r\n     * @param name The name to search for.\r\n     * @param recursive If `true`, the method will look at all the objects of\r\n     *     this scene. If `false`, this method will only perform the search in\r\n     *     root objects.\r\n     * @returns An array of {@link Object3D} matching the name.\r\n     *\r\n     * @since 1.2.0\r\n     */\r\n    findByName(name, recursive = false) {\r\n        const root = this._engine.wrapObject(0);\r\n        return root.findByName(name, recursive);\r\n    }\r\n    /**\r\n     * Search for all **top-level** objects matching the name.\r\n     *\r\n     * See {@link Object3D.findByNameDirect} for more information.\r\n     *\r\n     * @param name The name to search for.\r\n     * @returns An array of {@link Object3D} matching the name.\r\n     *\r\n     * @since 1.2.0\r\n     */\r\n    findByNameDirect(name) {\r\n        const root = this._engine.wrapObject(0);\r\n        return root.findByNameDirect(name);\r\n    }\r\n    /**\r\n     * Search for **all objects** matching the name.\r\n     *\r\n     * See {@link Object3D.findByNameRecursive} for more information.\r\n     *\r\n     * @param name The name to search for.\r\n     * @returns An array of {@link Object3D} matching the name.\r\n     *\r\n     * @since 1.2.0\r\n     */\r\n    findByNameRecursive(name) {\r\n        const root = this._engine.wrapObject(0);\r\n        return root.findByNameRecursive(name);\r\n    }\r\n    /**\r\n     * Set the background clear color.\r\n     *\r\n     * @param color new clear color (RGBA).\r\n     * @since 0.8.5\r\n     */\r\n    set clearColor(color) {\r\n        this._engine.wasm._wl_scene_set_clearColor(color[0], color[1], color[2], color[3]);\r\n    }\r\n    /**\r\n     * Set whether to clear the color framebuffer before drawing.\r\n     *\r\n     * This function is useful if an external framework (e.g. an AR tracking\r\n     * framework) is responsible for drawing a camera frame before Wonderland\r\n     * Engine draws the scene on top of it.\r\n     *\r\n     * @param b Whether to enable color clear.\r\n     * @since 0.9.4\r\n     */\r\n    set colorClearEnabled(b) {\r\n        this._engine.wasm._wl_scene_enableColorClear(b);\r\n    }\r\n    /** Hosting engine instance. */\r\n    get engine() {\r\n        return this._engine;\r\n    }\r\n    /**\r\n     * Load a scene file (.bin).\r\n     *\r\n     * Will replace the currently active scene with the one loaded\r\n     * from given file. It is assumed that JavaScript components required by\r\n     * the new scene were registered in advance.\r\n     *\r\n     * Once the scene is loaded successfully and initialized,\r\n     * {@link WonderlandEngine.onSceneLoaded} is notified.\r\n     *\r\n     * #### ArrayBuffer\r\n     *\r\n     * The `load()` method accepts an in-memory buffer:\r\n     *\r\n     * ```js\r\n     * scene.load({\r\n     *     buffer: new ArrayBuffer(...),\r\n     *     baseURL: 'https://my-website/assets'\r\n     * })\r\n     * ```\r\n     *\r\n     * @note The `baseURL` is mandatory. It's used to fetch images and languages.\r\n     *\r\n     * Use {@link Scene.setLoadingProgress} to update the loading progress bar\r\n     * when using an ArrayBuffer.\r\n     *\r\n     * @param opts Path to the file to load, or an option object.\r\n     *     For more information about the options, see the {@link SceneLoadOptions} documentation.\r\n     * @returns Promise that resolves when the scene was loaded.\r\n     */\r\n    async load(options) {\r\n        let buffer = null;\r\n        let baseURL = null;\r\n        let filename = null;\r\n        if (isString(options)) {\r\n            filename = options;\r\n            buffer = await fetchWithProgress(filename, (bytes, size) => {\r\n                this.engine.log.info(LogTag.Scene, `Scene downloading: ${bytes} / ${size}`);\r\n                this.setLoadingProgress(bytes / size);\r\n            });\r\n            baseURL = getBaseUrl(filename);\r\n            this.engine.log.info(LogTag.Scene, `Scene download of ${buffer.byteLength} bytes successful.`);\r\n        }\r\n        else {\r\n            ({ buffer, baseURL } = options);\r\n            filename = baseURL ? `${baseURL}/scene.bin` : 'scene.bin';\r\n        }\r\n        if (!buffer) {\r\n            throw new Error('Failed to load scene, buffer not provided');\r\n        }\r\n        if (!isString(baseURL)) {\r\n            throw new Error('Failed to load scene, baseURL not provided');\r\n        }\r\n        if (!this._engine.onLoadingScreenEnd.isDataRetained) {\r\n            this._engine.onLoadingScreenEnd.notify();\r\n        }\r\n        this._baseURL = baseURL;\r\n        const wasm = this._engine.wasm;\r\n        const size = buffer.byteLength;\r\n        const ptr = wasm._malloc(size);\r\n        new Uint8Array(wasm.HEAPU8.buffer, ptr, size).set(new Uint8Array(buffer));\r\n        try {\r\n            /** @todo: Remove third parameter at 1.2.0 */\r\n            wasm._wl_load_scene_bin(ptr, size, wasm.tempUTF8(filename));\r\n        }\r\n        finally {\r\n            /* Catch calls to abort(), e.g. via asserts */\r\n            wasm._free(ptr);\r\n        }\r\n        const i18n = this._engine.i18n;\r\n        const langPromise = i18n.setLanguage(i18n.languageCode(0));\r\n        await Promise.all([langPromise, this._flushAppend(this._baseURL)]);\r\n        this._engine.onSceneLoaded.notify();\r\n    }\r\n    /**\r\n     * Append a scene file.\r\n     *\r\n     * Loads and parses the file and its images and appends the result\r\n     * to the currently active scene.\r\n     *\r\n     * Supported formats are streamable Wonderland scene files (.bin) and glTF\r\n     * 3D scenes (.gltf, .glb).\r\n     *\r\n     * ```js\r\n     * WL.scene.append(filename).then(root => {\r\n     *     // root contains the loaded scene\r\n     * });\r\n     * ```\r\n     *\r\n     * In case the `loadGltfExtensions` option is set to true, the response\r\n     * will be an object containing both the root of the loaded scene and\r\n     * any glTF extensions found on nodes, meshes and the root of the file.\r\n     *\r\n     * ```js\r\n     * WL.scene.append(filename, { loadGltfExtensions: true }).then(({root, extensions}) => {\r\n     *     // root contains the loaded scene\r\n     *     // extensions.root contains any extensions at the root of glTF document\r\n     *     const rootExtensions = extensions.root;\r\n     *     // extensions.mesh and extensions.node contain extensions indexed by Object id\r\n     *     const childObject = root.children[0];\r\n     *     const meshExtensions = root.meshExtensions[childObject.objectId];\r\n     *     const nodeExtensions = root.nodeExtensions[childObject.objectId];\r\n     *     // extensions.idMapping contains a mapping from glTF node index to Object id\r\n     * });\r\n     * ```\r\n     *\r\n     * If the file to be loaded is located in a subfolder, it might be useful\r\n     * to define the `baseURL` option. This will ensure any bin files\r\n     * referenced by the loaded bin file are loaded at the correct path.\r\n     *\r\n     * ```js\r\n     * WL.scene.append(filename, { baseURL: 'scenes' }).then(({root, extensions}) => {\r\n     *     // do stuff\r\n     * });\r\n     * ```\r\n     *\r\n     * @param file The .bin, .gltf or .glb file to append. Should be a URL or\r\n     *   an `ArrayBuffer` with the file content.\r\n     * @param options Additional options for loading.\r\n     * @returns Promise that resolves when the scene was appended.\r\n     */\r\n    async append(file, options = {}) {\r\n        const { loadGltfExtensions = false, baseURL = isString(file) ? getBaseUrl(file) : this._baseURL, } = options;\r\n        const wasm = this._engine.wasm;\r\n        const buffer = isString(file) ? await fetchWithProgress(file) : file;\r\n        let error = null;\r\n        let result = undefined;\r\n        let callback = wasm.addFunction((objectId, extensionData, extensionDataSize) => {\r\n            if (objectId < 0) {\r\n                error = new Error(`Scene.append(): Internal runtime error, found root id = ${objectId}`);\r\n                return;\r\n            }\r\n            const root = objectId ? this._engine.wrapObject(objectId) : null;\r\n            result = root;\r\n            if (!extensionData || !extensionDataSize)\r\n                return;\r\n            const marshalled = new Uint32Array(wasm.HEAPU32.buffer, extensionData, extensionDataSize / 4);\r\n            const extensions = this._unmarshallGltfExtensions(marshalled);\r\n            result = { root, extensions };\r\n        }, 'viii');\r\n        const size = buffer.byteLength;\r\n        const ptr = wasm._malloc(size);\r\n        const data = new Uint8Array(wasm.HEAPU8.buffer, ptr, size);\r\n        data.set(new Uint8Array(buffer));\r\n        const isBinFile = data.byteLength > MAGIC_BIN.length &&\r\n            data\r\n                .subarray(0, MAGIC_BIN.length)\r\n                .every((value, i) => value === MAGIC_BIN.charCodeAt(i));\r\n        try {\r\n            if (isBinFile) {\r\n                wasm._wl_append_scene_bin(ptr, size, callback);\r\n            }\r\n            else {\r\n                wasm._wl_append_scene_gltf(ptr, size, loadGltfExtensions, callback);\r\n            }\r\n        }\r\n        catch (e) {\r\n            wasm.removeFunction(callback);\r\n            throw e;\r\n        }\r\n        finally {\r\n            wasm._free(ptr);\r\n        }\r\n        /* Debounce this call to allow the animation loop to be scheduled.\r\n         * Without this, the promise might hang forever. */\r\n        while (result === undefined && !error)\r\n            await timeout(4);\r\n        wasm.removeFunction(callback);\r\n        if (error)\r\n            throw error;\r\n        if (isBinFile)\r\n            await this._flushAppend(baseURL);\r\n        return result;\r\n    }\r\n    /**\r\n     * Update the loading screen progress bar.\r\n     *\r\n     * @param value Current loading percentage, in the range [0; 1].\r\n     */\r\n    setLoadingProgress(percentage) {\r\n        const wasm = this.engine.wasm;\r\n        wasm._wl_set_loading_screen_progress(clamp(percentage, 0, 1));\r\n    }\r\n    /**\r\n     * Set the current material to render the sky.\r\n     *\r\n     * @note The sky needs to be enabled in the editor when creating the scene.\r\n     * For more information, please refer to the background [tutorial](https://wonderlandengine.com/tutorials/background-effect/).\r\n     */\r\n    set skyMaterial(material) {\r\n        this._engine.wasm._wl_scene_set_sky_material(material?._index ?? 0);\r\n    }\r\n    /** Current sky material, or `null` if no sky is set. */\r\n    get skyMaterial() {\r\n        const id = this._engine.wasm._wl_scene_get_sky_material();\r\n        return id > 0 ? new Material(this._engine, id) : null;\r\n    }\r\n    /**\r\n     * Load all currently queued bin files.\r\n     *\r\n     * Used by {@link Scene.append} and {@link Scene.load}\r\n     * to load all delay-load bins.\r\n     *\r\n     * Used by {@link I18N.language} to trigger loading the\r\n     * associated language bin, after it was queued.\r\n     *\r\n     * @param baseURL Url that is added to each path.\r\n     * @param options Additional options for loading.\r\n     *\r\n     * @hidden\r\n     */\r\n    _flushAppend(baseURL) {\r\n        const wasm = this._engine.wasm;\r\n        const count = wasm._wl_scene_queued_bin_count();\r\n        if (!count)\r\n            return Promise.resolve();\r\n        const urls = new Array(count).fill(0).map((_, i) => {\r\n            const ptr = wasm._wl_scene_queued_bin_path(i);\r\n            return wasm.UTF8ToString(ptr);\r\n        });\r\n        wasm._wl_scene_clear_queued_bin_list();\r\n        const promises = urls.map((path) => this.append(baseURL.length ? `${baseURL}/${path}` : path));\r\n        return Promise.all(promises).then((data) => {\r\n            const i18n = this._engine.i18n;\r\n            this._engine.i18n.onLanguageChanged.notify(i18n.previousIndex, i18n.currentIndex);\r\n            return data;\r\n        });\r\n    }\r\n    /**\r\n     * Unmarshalls the GltfExtensions from an Uint32Array.\r\n     *\r\n     * @param data Array containing the gltf extension data.\r\n     * @returns The extensions stored in an object literal.\r\n     *\r\n     * @hidden\r\n     */\r\n    _unmarshallGltfExtensions(data) {\r\n        /* @todo: This method should be moved in the internal Emscripten library. */\r\n        const extensions = {\r\n            root: {},\r\n            mesh: {},\r\n            node: {},\r\n            idMapping: [],\r\n        };\r\n        let index = 0;\r\n        const readString = () => {\r\n            const strPtr = data[index++];\r\n            const strLen = data[index++];\r\n            return this._engine.wasm.UTF8ViewToString(strPtr, strPtr + strLen);\r\n        };\r\n        const idMappingSize = data[index++];\r\n        const idMapping = new Array(idMappingSize);\r\n        for (let i = 0; i < idMappingSize; ++i) {\r\n            idMapping[i] = data[index++];\r\n        }\r\n        extensions.idMapping = idMapping;\r\n        const meshExtensionsSize = data[index++];\r\n        for (let i = 0; i < meshExtensionsSize; ++i) {\r\n            const objectId = data[index++];\r\n            extensions.mesh[idMapping[objectId]] = JSON.parse(readString());\r\n        }\r\n        const nodeExtensionsSize = data[index++];\r\n        for (let i = 0; i < nodeExtensionsSize; ++i) {\r\n            const objectId = data[index++];\r\n            extensions.node[idMapping[objectId]] = JSON.parse(readString());\r\n        }\r\n        const rootExtensionsStr = readString();\r\n        if (rootExtensionsStr) {\r\n            extensions.root = JSON.parse(rootExtensionsStr);\r\n        }\r\n        return extensions;\r\n    }\r\n    /**\r\n     * Reset the scene.\r\n     *\r\n     * This method deletes all used and allocated objects, and components.\r\n     */\r\n    reset() {\r\n        this._engine.wasm._wl_scene_reset();\r\n        this._baseURL = '';\r\n    }\r\n}\r\n", "import { Texture } from './wonderland.js';\r\n/**\r\n * Manage textures.\r\n *\r\n * This manager is accessible on the engine instance using {@link WonderlandEngine.textures}.\r\n *\r\n * Usage:\r\n *\r\n * ```js\r\n * this.engine.load('path/to/texture.png').then((texture) => {\r\n *     console.log('Loaded!');\r\n *     console.log(texture);\r\n * })\r\n * ```\r\n */\r\nexport class TextureManager {\r\n    /** Wonderland Engine instance. @hidden */\r\n    _engine;\r\n    /** Texture cache. @hidden */\r\n    #cache = [];\r\n    /** @hidden */\r\n    constructor(engine) {\r\n        this._engine = engine;\r\n    }\r\n    /**\r\n     * Retrieve the texture with the given id.\r\n     *\r\n     * @param id The texture identifier.\r\n     * @return The {@link Texture} if found, `null` otherwise.\r\n     */\r\n    get(id) {\r\n        return this.#cache[id] ?? null;\r\n    }\r\n    /**\r\n     * Load an image from URL as {@link Texture}.\r\n     *\r\n     * @param filename URL to load from.\r\n     * @param crossOrigin Cross origin flag for the image object.\r\n     * @returns Loaded texture.\r\n     */\r\n    load(filename, crossOrigin) {\r\n        let image = new Image();\r\n        image.crossOrigin = crossOrigin ?? image.crossOrigin;\r\n        image.src = filename;\r\n        return new Promise((resolve, reject) => {\r\n            image.onload = () => {\r\n                let texture = new Texture(this._engine, image);\r\n                if (!texture.valid) {\r\n                    reject('Failed to add image ' +\r\n                        image.src +\r\n                        ' to texture atlas. Probably incompatible format.');\r\n                }\r\n                resolve(texture);\r\n            };\r\n            image.onerror = function () {\r\n                reject('Failed to load image. Not found or no read access');\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Wrap a texture ID using {@link Texture}.\r\n     *\r\n     * @note This method performs caching and will return the same\r\n     * instance on subsequent calls.\r\n     *\r\n     * @param id ID of the texture to create.\r\n     *\r\n     * @returns The texture.\r\n     */\r\n    wrap(id) {\r\n        const texture = this.#cache[id] ?? (this.#cache[id] = new Texture(this._engine, id));\r\n        texture['_id'] = id;\r\n        return texture;\r\n    }\r\n    /** Number of textures allocated in the manager. */\r\n    get allocatedCount() {\r\n        return this.#cache.length;\r\n    }\r\n    /**\r\n     * Number of textures in the manager.\r\n     *\r\n     * @note For performance reasons, avoid calling this method when possible.\r\n     */\r\n    get count() {\r\n        let count = 0;\r\n        for (const tex of this.#cache) {\r\n            if (tex && tex.id >= 0)\r\n                ++count;\r\n        }\r\n        return count;\r\n    }\r\n    /**\r\n     * Set a new texture in the manager cache.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @param texture The texture to add.\r\n     *\r\n     * @hidden\r\n     */\r\n    _set(texture) {\r\n        /* @todo: Destroy texture at previous id? */\r\n        this.#cache[texture.id] = texture;\r\n    }\r\n    /**\r\n     * Destroys the texture.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @param texture The texture to destroy.\r\n     *\r\n     * @hidden\r\n     */\r\n    _destroy(texture) {\r\n        this._engine.wasm._wl_texture_destroy(texture.id);\r\n        const img = texture['_imageIndex'];\r\n        if (img !== null) {\r\n            this._engine.wasm._images[img] = null;\r\n        }\r\n    }\r\n    /**\r\n     * Reset the manager.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @hidden\r\n     */\r\n    _reset() {\r\n        this.#cache.length = 0;\r\n    }\r\n}\r\n", "import { CollisionComponent, AnimationComponent, LightComponent, MeshComponent, PhysXComponent, InputComponent, ViewComponent, TextComponent, Object as Object3D, Physics, I18N, DestroyedObjectInstance, DestroyedComponentInstance, DestroyedTextureInstance, } from './wonderland.js';\r\nimport { Emitter, RetainEmitter } from './utils/event.js';\r\nimport { isString } from './utils/object.js';\r\nimport { Scene } from './scene.js';\r\nimport { TextureManager } from './texture-manager.js';\r\nimport { LogTag } from './index.js';\r\nfunction checkXRSupport() {\r\n    if (!navigator.xr) {\r\n        const isLocalhost = location.hostname === 'localhost' || location.hostname === '127.0.0.1';\r\n        const missingHTTPS = location.protocol !== 'https:' && !isLocalhost;\r\n        return Promise.reject(missingHTTPS\r\n            ? 'WebXR is only supported with HTTPS or on localhost!'\r\n            : 'WebXR unsupported in this browser.');\r\n    }\r\n    return Promise.resolve();\r\n}\r\n/**\r\n * Main Wonderland Engine instance.\r\n *\r\n * Controls the canvas, rendering, and JS <-> WASM communication.\r\n */\r\nexport class WonderlandEngine {\r\n    /**\r\n     * {@link Emitter} for WebXR session end events.\r\n     *\r\n     * Usage from within a component:\r\n     *\r\n     * ```js\r\n     * this.engine.onXRSessionEnd.add(() => console.log(\"XR session ended.\"));\r\n     * ```\r\n     */\r\n    onXRSessionEnd = new Emitter();\r\n    /**\r\n     * {@link RetainEmitter} for WebXR session start events.\r\n     *\r\n     * Usage from within a component:\r\n     *\r\n     * ```js\r\n     * this.engine.onXRSessionStart.add((session, mode) => console.log(session, mode));\r\n     * ```\r\n     *\r\n     * By default, this emitter is retained and will automatically call any callback added\r\n     * while a session is already started:\r\n     *\r\n     * ```js\r\n     * // XR session is already active.\r\n     * this.engine.onXRSessionStart.add((session, mode) => {\r\n     *     console.log(session, mode); // Triggered immediately.\r\n     * });\r\n     * ```\r\n     */\r\n    onXRSessionStart = new RetainEmitter();\r\n    /**\r\n     * {@link Emitter} for canvas / main framebuffer resize events.\r\n     *\r\n     * Usage from within a component:\r\n     *\r\n     * ```js\r\n     * this.engine.onResize.add(() => {\r\n     *     const canvas = this.engine.canvas;\r\n     *     console.log(`New Size: ${canvas.width}, ${canvas.height}`);\r\n     * });\r\n     * ```\r\n     *\r\n     * @note The size of the canvas is in physical pixels, and is set via {@link WonderlandEngine.resize}.\r\n     */\r\n    onResize = new Emitter();\r\n    /** Whether AR is supported by the browser. */\r\n    arSupported = false;\r\n    /** Whether VR is supported by the browser. */\r\n    vrSupported = false;\r\n    /**\r\n     * {@link RetainEmitter} signalling the end of the loading screen.\r\n     *\r\n     * Listeners get notified when the first call to {@link Scene#load()} is\r\n     * invoked. At this point the new scene has not become active, and none of\r\n     * its resources or components are initialized.\r\n     *\r\n     * Compared to {@link onSceneLoaded}, this does not wait for all components\r\n     * to be fully initialized and activated. Any handler added inside\r\n     * {@link Component#init()}, {@link Component#start()} or\r\n     * {@link Component#onActivate()} will be called immediately.\r\n     *\r\n     * Usage:\r\n     *\r\n     * ```js\r\n     * this.engine.onLoadingScreenEnd.add(() => console.log(\"Wait is over!\"));\r\n     * ```\r\n     */\r\n    onLoadingScreenEnd = new RetainEmitter();\r\n    /**\r\n     * {@link Emitter} for scene loaded events.\r\n     *\r\n     * Listeners get notified when a call to {@link Scene#load()} finishes. At\r\n     * this point all resources are loaded and all components had their\r\n     * {@link Component#init()} as well as (if active)\r\n     * {@link Component#start()} and {@link Component#onActivate()} methods\r\n     * called.\r\n     *\r\n     * Usage from within a component:\r\n     *\r\n     * ```js\r\n     * this.engine.onSceneLoaded.add(() => console.log(\"Scene switched!\"));\r\n     * ```\r\n     */\r\n    onSceneLoaded = new Emitter();\r\n    /**\r\n     * Current main scene.\r\n     */\r\n    scene = null;\r\n    /**\r\n     * Access to internationalization.\r\n     */\r\n    i18n = new I18N(this);\r\n    /**\r\n     * WebXR related state, `null` if no XR session is active.\r\n     */\r\n    xr = null;\r\n    /**\r\n     * If `true`, {@link Texture}, {@link Object3D}, and {@link Component}\r\n     * instances have their prototype erased upon destruction.\r\n     *\r\n     * #### Object\r\n     *\r\n     * ```js\r\n     * engine.erasePrototypeOnDestroy = true;\r\n     *\r\n     * const obj = engine.scene.addObject();\r\n     * obj.name = 'iamalive';\r\n     * console.log(obj.name); // Prints 'iamalive'\r\n     *\r\n     * obj.destroy();\r\n     * console.log(obj.name); // Throws an error\r\n     * ```\r\n     *\r\n     * #### Component\r\n     *\r\n     * Components will also be affected:\r\n     *\r\n     * ```js\r\n     * class MyComponent extends Component {\r\n     *     static TypeName = 'my-component';\r\n     *     static Properties = {\r\n     *         alive: Property.bool(true)\r\n     *     };\r\n     *\r\n     *     start() {\r\n     *         this.destroy();\r\n     *         console.log(this.alive) // Throws an error\r\n     *     }\r\n     * }\r\n     * ```\r\n     *\r\n     * A component is also destroyed if its ancestor gets destroyed:\r\n     *\r\n     * ```js\r\n     * class MyComponent extends Component {\r\n     *     ...\r\n     *     start() {\r\n     *         this.object.parent.destroy();\r\n     *         console.log(this.alive) // Throws an error\r\n     *     }\r\n     * }\r\n     * ```\r\n     *\r\n     * @note Native components will not be erased if destroyed via object destruction:\r\n     *\r\n     * ```js\r\n     * const mesh = obj.addComponent('mesh');\r\n     * obj.destroy();\r\n     * console.log(mesh.active) // Doesn't throw even if the mesh is destroyed\r\n     * ```\r\n     *\r\n     * @since 1.1.1\r\n     */\r\n    erasePrototypeOnDestroy = false;\r\n    /**\r\n     * Component class instances per type to avoid GC.\r\n     *\r\n     * @note Maps the manager index to the list of components.\r\n     *\r\n     * @hidden\r\n     */\r\n    _componentCache = {};\r\n    /** Object class instances to avoid GC. @hidden */\r\n    _objectCache = [];\r\n    /**\r\n     * WebAssembly bridge.\r\n     *\r\n     * @hidden\r\n     */\r\n    #wasm;\r\n    /**\r\n     * Physics manager, only available when physx is enabled in the runtime.\r\n     *\r\n     * @hidden\r\n     */\r\n    #physics = null;\r\n    /** Texture manager. @hidden */\r\n    #textures = new TextureManager(this);\r\n    /**\r\n     * Resize observer to track for canvas size changes.\r\n     *\r\n     * @hidden\r\n     */\r\n    #resizeObserver = null;\r\n    /**\r\n     * Initial reference space type set by webxr_init. See {@link _init} for\r\n     * more information.\r\n     *\r\n     * @hidden\r\n     */\r\n    #initialReferenceSpaceType = null;\r\n    /**\r\n     * Create a new engine instance.\r\n     *\r\n     * @param wasm Wasm bridge instance\r\n     * @param loadingScreen Loading screen .bin file data\r\n     *\r\n     * @hidden\r\n     */\r\n    constructor(wasm, loadingScreen) {\r\n        this.#wasm = wasm;\r\n        this.#wasm['_setEngine'](this); /* String lookup to bypass private. */\r\n        this.#wasm._loadingScreen = loadingScreen;\r\n        this._componentCache = {};\r\n        this._objectCache.length = 0;\r\n        this.canvas.addEventListener('webglcontextlost', (e) => this.log.error(LogTag.Engine, 'Context lost:', e), false);\r\n    }\r\n    /**\r\n     * Start the engine if it's not already running.\r\n     *\r\n     * When using the {@link loadRuntime} function, this method is called\r\n     * automatically.\r\n     */\r\n    start() {\r\n        this.wasm._wl_application_start();\r\n    }\r\n    /**\r\n     * Register a custom JavaScript component type.\r\n     *\r\n     * You can register a component directly using a class inheriting from {@link Component}:\r\n     *\r\n     * ```js\r\n     * import { Component, Type } from '@wonderlandengine/api';\r\n     *\r\n     * export class MyComponent extends Component {\r\n     *     static TypeName = 'my-component';\r\n     *     static Properties = {\r\n     *         myParam: {type: Type.Float, default: 42.0},\r\n     *     };\r\n     *     init() {}\r\n     *     start() {}\r\n     *     update(dt) {}\r\n     *     onActivate() {}\r\n     *     onDeactivate() {}\r\n     *     onDestroy() {}\r\n     * });\r\n     *\r\n     * // Here, we assume we have an engine already instantiated.\r\n     * // In general, the registration occurs in the `index.js` file in your\r\n     * // final application.\r\n     * engine.registerComponent(MyComponent);\r\n     * ```\r\n     *\r\n     * {@label CLASSES}\r\n     * @param classes Custom component(s) extending {@link Component}.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    registerComponent(...classes) {\r\n        for (const arg of classes) {\r\n            this.wasm._registerComponent(arg);\r\n        }\r\n    }\r\n    /**\r\n     * Checks whether the given component is registered or not.\r\n     *\r\n     * @param typeOrClass A string representing the component typename (e.g., `'cursor-component'`),\r\n     *     or a component class (e.g., `CursorComponent`).\r\n     * @returns `true` if the component is registered, `false` otherwise.\r\n     */\r\n    isRegistered(typeOrClass) {\r\n        return this.#wasm.isRegistered(isString(typeOrClass) ? typeOrClass : typeOrClass.TypeName);\r\n    }\r\n    /**\r\n     * Resize the canvas and the rendering context.\r\n     *\r\n     * @note The `width` and `height` parameters will be scaled by the\r\n     * `devicePixelRatio` value. By default, the pixel ratio used is\r\n     * [window.devicePixelRatio](https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio).\r\n     *\r\n     * @param width The width, in CSS pixels.\r\n     * @param height The height, in CSS pixels.\r\n     * @param devicePixelRatio The pixel ratio factor.\r\n     */\r\n    resize(width, height, devicePixelRatio = window.devicePixelRatio) {\r\n        width = width * devicePixelRatio;\r\n        height = height * devicePixelRatio;\r\n        this.canvas.width = width;\r\n        this.canvas.height = height;\r\n        this.wasm._wl_application_resize(width, height);\r\n        this.onResize.notify();\r\n    }\r\n    /**\r\n     * Run the next frame.\r\n     *\r\n     * @param fixedDelta The elapsed time between this frame and the previous one.\r\n     *\r\n     * @note The engine automatically schedules next frames. You should only\r\n     * use this method for testing.\r\n     */\r\n    nextFrame(fixedDelta = 0) {\r\n        this.#wasm._wl_nextFrame(fixedDelta);\r\n    }\r\n    /**\r\n     * Request an XR session.\r\n     *\r\n     * @note Please use this call instead of directly calling `navigator.xr.requestSession()`.\r\n     * Wonderland Engine requires to be aware that a session is started, and this\r\n     * is done through this call.\r\n     *\r\n     * @param mode The XR mode.\r\n     * @param features An array of required features, e.g., `['local-floor', 'hit-test']`.\r\n     * @param optionalFeatures An array of optional features, e.g., `['bounded-floor', 'depth-sensing']`.\r\n     * @returns A promise resolving with the `XRSession`, a string error message otherwise.\r\n     */\r\n    requestXRSession(mode, features, optionalFeatures = []) {\r\n        return checkXRSupport().then(() => this.#wasm.webxr_requestSession(mode, features, optionalFeatures));\r\n    }\r\n    /**\r\n     * Offer an XR session.\r\n     *\r\n     * Adds an interactive UI element to the browser interface to start an XR\r\n     * session. Browser support is optional, so it's advised to still allow\r\n     * requesting a session with a UI element on the website itself.\r\n     *\r\n     * @note Please use this call instead of directly calling `navigator.xr.offerSession()`.\r\n     * Wonderland Engine requires to be aware that a session is started, and this\r\n     * is done through this call.\r\n     *\r\n     * @param mode The XR mode.\r\n     * @param features An array of required features, e.g., `['local-floor', 'hit-test']`.\r\n     * @param optionalFeatures An array of optional features, e.g., `['bounded-floor', 'depth-sensing']`.\r\n     * @returns A promise resolving with the `XRSession`, a string error message otherwise.\r\n     *\r\n     * @since 1.1.5\r\n     */\r\n    offerXRSession(mode, features, optionalFeatures = []) {\r\n        return checkXRSupport().then(() => this.#wasm.webxr_offerSession(mode, features, optionalFeatures));\r\n    }\r\n    /**\r\n     * Wrap an object ID using {@link Object}.\r\n     *\r\n     * @note This method performs caching and will return the same\r\n     * instance on subsequent calls.\r\n     *\r\n     * @param objectId ID of the object to create.\r\n     *\r\n     * @returns The object\r\n     */\r\n    wrapObject(objectId) {\r\n        const cache = this._objectCache;\r\n        const o = cache[objectId] || (cache[objectId] = new Object3D(this, objectId));\r\n        o['_objectId'] = objectId;\r\n        return o;\r\n    }\r\n    /* Public Getters & Setter */\r\n    /**\r\n     * WebAssembly bridge.\r\n     *\r\n     * @note Use with care. This object is used to communicate\r\n     * with the WebAssembly code throughout the api.\r\n     *\r\n     * @hidden\r\n     */\r\n    get wasm() {\r\n        return this.#wasm;\r\n    }\r\n    /** Canvas element that Wonderland Engine renders to. */\r\n    get canvas() {\r\n        return this.#wasm.canvas;\r\n    }\r\n    /**\r\n     * Current WebXR session or `null` if no session active.\r\n     *\r\n     * @deprecated Use {@link XR.session} on the {@link xr}\r\n     * object instead.\r\n     */\r\n    get xrSession() {\r\n        return this.xr?.session ?? null;\r\n    }\r\n    /**\r\n     * Current WebXR frame or `null` if no session active.\r\n     *\r\n     * @deprecated Use {@link XR.frame} on the {@link xr}\r\n     * object instead.\r\n     */\r\n    get xrFrame() {\r\n        return this.xr?.frame ?? null;\r\n    }\r\n    /**\r\n     * Current WebXR base layer or `null` if no session active.\r\n     *\r\n     * @deprecated Use {@link XR.baseLayer} on the {@link xr}\r\n     * object instead.\r\n     */\r\n    get xrBaseLayer() {\r\n        return this.xr?.baseLayer ?? null;\r\n    }\r\n    /**\r\n     * Current WebXR framebuffer or `null` if no session active.\r\n     *\r\n     * @deprecated Use {@link XR.framebuffers} on the\r\n     * {@link xr} object instead.\r\n     */\r\n    get xrFramebuffer() {\r\n        return this.xr?.framebuffers[0] ?? null;\r\n    }\r\n    /** Framebuffer scale factor. */\r\n    get xrFramebufferScaleFactor() {\r\n        return this.#wasm.webxr_framebufferScaleFactor;\r\n    }\r\n    set xrFramebufferScaleFactor(value) {\r\n        this.#wasm.webxr_framebufferScaleFactor = value;\r\n    }\r\n    /** Physics manager, only available when physx is enabled in the runtime. */\r\n    get physics() {\r\n        return this.#physics;\r\n    }\r\n    /**\r\n     * Texture managger.\r\n     *\r\n     * Use this to load or programmatically create new textures at runtime.\r\n     */\r\n    get textures() {\r\n        return this.#textures;\r\n    }\r\n    /*\r\n     * Enable or disable the mechanism to automatically resize the canvas.\r\n     *\r\n     * Internally, the engine uses a [ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver).\r\n     * Changing the canvas css will thus automatically be tracked by the engine.\r\n     */\r\n    set autoResizeCanvas(flag) {\r\n        const state = !!this.#resizeObserver;\r\n        if (state === flag)\r\n            return;\r\n        if (!flag) {\r\n            this.#resizeObserver?.unobserve(this.canvas);\r\n            this.#resizeObserver = null;\r\n            return;\r\n        }\r\n        this.#resizeObserver = new ResizeObserver((entries) => {\r\n            for (const entry of entries) {\r\n                if (entry.target === this.canvas) {\r\n                    this.resize(entry.contentRect.width, entry.contentRect.height);\r\n                }\r\n            }\r\n        });\r\n        this.#resizeObserver.observe(this.canvas);\r\n    }\r\n    /** `true` if the canvas is automatically resized by the engine. */\r\n    get autoResizeCanvas() {\r\n        return this.#resizeObserver !== null;\r\n    }\r\n    /** Retrieves the runtime version. */\r\n    get runtimeVersion() {\r\n        const wasm = this.#wasm;\r\n        const v = wasm._wl_application_version(wasm._tempMem);\r\n        return {\r\n            major: wasm._tempMemUint16[0],\r\n            minor: wasm._tempMemUint16[1],\r\n            patch: wasm._tempMemUint16[2],\r\n            rc: wasm._tempMemUint16[3],\r\n        };\r\n    }\r\n    /** Engine {@link Logger}. Use it to turn on / off logging. */\r\n    get log() {\r\n        return this.#wasm._log;\r\n    }\r\n    /* Internal-Only Methods */\r\n    /**\r\n     * Initialize the engine.\r\n     *\r\n     * @note Should be called after the WebAssembly is fully loaded.\r\n     *\r\n     * @hidden\r\n     */\r\n    _init() {\r\n        this.scene = new Scene(this);\r\n        /* Force the reference space to 'local'/'viewer' for the loading screen\r\n         * to make sure the head input is at the origin. Doing it this way to\r\n         * avoid adding JS components to the loading screen. */\r\n        const onXRStart = () => {\r\n            this.#initialReferenceSpaceType = this.xr.currentReferenceSpaceType;\r\n            const newSpace = this.xr.referenceSpaceForType('local') ??\r\n                this.xr.referenceSpaceForType('viewer');\r\n            this.xr.currentReferenceSpace = newSpace;\r\n        };\r\n        /* Not once() because the user can enter and exit XR several times\r\n         * during a long loading screen */\r\n        this.onXRSessionStart.add(onXRStart);\r\n        /* This is called before all init()/start()/onActivate() so we avoid\r\n         * overwriting a user-set reference space */\r\n        this.onLoadingScreenEnd.once(() => {\r\n            this.onXRSessionStart.remove(onXRStart);\r\n            if (!this.xr || !this.#initialReferenceSpaceType)\r\n                return;\r\n            this.xr.currentReferenceSpace =\r\n                this.xr.referenceSpaceForType(this.#initialReferenceSpaceType) ??\r\n                    this.xr.referenceSpaceForType('viewer');\r\n            this.#initialReferenceSpaceType = null;\r\n        });\r\n        /* Setup the error handler. This is used to to manage native errors. */\r\n        this.#wasm._wl_set_error_callback(this.#wasm.addFunction((messagePtr) => {\r\n            throw new Error(this.#wasm.UTF8ToString(messagePtr));\r\n        }, 'vi'));\r\n        this.#physics = null;\r\n        if (this.#wasm.withPhysX) {\r\n            /* Setup the physics callback. */\r\n            const physics = new Physics(this);\r\n            this.#wasm._wl_physx_set_collision_callback(this.#wasm.addFunction((a, index, type, b) => {\r\n                const callback = physics._callbacks[a][index];\r\n                const component = new PhysXComponent(this, this.wasm._typeIndexFor('physx'), b);\r\n                callback(type, component);\r\n            }, 'viiii'));\r\n            this.#physics = physics;\r\n        }\r\n        this.resize(this.canvas.clientWidth, this.canvas.clientHeight);\r\n    }\r\n    /**\r\n     * Reset the runtime state, including:\r\n     *     - Component cache\r\n     *     - Images\r\n     *     - Callbacks\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @hidden\r\n     */\r\n    _reset() {\r\n        this._componentCache = {};\r\n        this._objectCache.length = 0;\r\n        this.#textures._reset();\r\n        this.scene.reset();\r\n        this.wasm.reset();\r\n    }\r\n    /**\r\n     * Retrieves a component instance if it exists, or create and cache\r\n     * a new one.\r\n     *\r\n     * @note This api is meant to be used internally. Please have a look at\r\n     * {@link Object3D.addComponent} instead.\r\n     *\r\n     * @param type component type name\r\n     * @param componentType Component manager index\r\n     * @param componentId Component id in the manager\r\n     *\r\n     * @returns JavaScript instance wrapping the native component\r\n     *\r\n     * @hidden\r\n     */\r\n    _wrapComponent(type, componentType, componentId) {\r\n        if (componentId < 0)\r\n            return null;\r\n        /* @todo: extremely slow in JS to do that... Better to use a Map or allocate the array. */\r\n        const c = this._componentCache[componentType] ||\r\n            (this._componentCache[componentType] = []);\r\n        if (c[componentId]) {\r\n            return c[componentId];\r\n        }\r\n        let component;\r\n        if (type == 'collision') {\r\n            component = new CollisionComponent(this, componentType, componentId);\r\n        }\r\n        else if (type == 'text') {\r\n            component = new TextComponent(this, componentType, componentId);\r\n        }\r\n        else if (type == 'view') {\r\n            component = new ViewComponent(this, componentType, componentId);\r\n        }\r\n        else if (type == 'mesh') {\r\n            component = new MeshComponent(this, componentType, componentId);\r\n        }\r\n        else if (type == 'input') {\r\n            component = new InputComponent(this, componentType, componentId);\r\n        }\r\n        else if (type == 'light') {\r\n            component = new LightComponent(this, componentType, componentId);\r\n        }\r\n        else if (type == 'animation') {\r\n            component = new AnimationComponent(this, componentType, componentId);\r\n        }\r\n        else if (type == 'physx') {\r\n            component = new PhysXComponent(this, componentType, componentId);\r\n        }\r\n        else {\r\n            const typeIndex = this.wasm._componentTypeIndices[type];\r\n            const constructor = this.wasm._componentTypes[typeIndex];\r\n            component = new constructor(this);\r\n        }\r\n        /* Sets the manager and identifier from the outside, to\r\n         * simplify the user's constructor. */\r\n        /* @ts-ignore */\r\n        component._engine = this;\r\n        component._manager = componentType;\r\n        component._id = componentId;\r\n        c[componentId] = component;\r\n        return component;\r\n    }\r\n    /**\r\n     * Perform cleanup upon object destruction.\r\n     *\r\n     * @param instance The instance to destroy.\r\n     *\r\n     * @hidden\r\n     */\r\n    _destroyObject(instance) {\r\n        const id = instance.objectId;\r\n        instance._objectId = -1;\r\n        /* Destroy the prototype of this instance to avoid using a dangling object */\r\n        if (this.erasePrototypeOnDestroy && instance) {\r\n            Object.setPrototypeOf(instance, DestroyedObjectInstance);\r\n        }\r\n        /* Remove from the cache to avoid side-effects when\r\n         * re-creating an object with the same id. */\r\n        this._objectCache[id] = null;\r\n    }\r\n    /**\r\n     * Perform cleanup upon component destruction.\r\n     *\r\n     * @param instance The instance to destroy.\r\n     *\r\n     * @hidden\r\n     */\r\n    _destroyComponent(instance) {\r\n        const id = instance._id;\r\n        const manager = instance._manager;\r\n        instance._id = -1;\r\n        instance._manager = -1;\r\n        /* Destroy the prototype of this instance to avoid using a dangling component */\r\n        if (this.erasePrototypeOnDestroy && instance) {\r\n            Object.setPrototypeOf(instance, DestroyedComponentInstance);\r\n        }\r\n        /* Remove from the cache to avoid side-effects when\r\n         * re-creating a component with the same id. */\r\n        const cache = this._componentCache[manager];\r\n        if (cache)\r\n            cache[id] = null;\r\n    }\r\n    /**\r\n     * Perform cleanup upon texture destruction.\r\n     *\r\n     * @param texture The instance to destroy.\r\n     *\r\n     * @hidden\r\n     */\r\n    _destroyTexture(texture) {\r\n        this.textures._destroy(texture);\r\n        if (this.erasePrototypeOnDestroy) {\r\n            Object.setPrototypeOf(texture, DestroyedTextureInstance);\r\n        }\r\n    }\r\n}\r\n", "/**\r\n * Assert that the given bit index is less than 32.\r\n *\r\n * @param bit The bit to test.\r\n */\r\nfunction assert(bit) {\r\n    if (bit >= 32) {\r\n        throw new Error(`BitSet.enable(): Value ${bit} is over 31`);\r\n    }\r\n}\r\n/**\r\n * Stores a bit pattern to quickly test if an index is enabled / disabled.\r\n *\r\n * This class can store up to **32** different values in the range [0; 31].\r\n *\r\n * #### Usage\r\n *\r\n * ```js\r\n * const bitset = new BitSet();\r\n * bitset.enable(10); // Enable bit at index `10`.\r\n * console.log(bitset.enabled(10)); // Prints 'true'.\r\n * ```\r\n *\r\n * #### TypeScript\r\n *\r\n * The set can be typed over an enum:\r\n *\r\n * ```ts\r\n * enum Tag {\r\n *     First = 0,\r\n *     Second = 1,\r\n * }\r\n *\r\n * const bitset = new BitSet<Tag>();\r\n * bitset.enable(Tag.First);\r\n * ```\r\n */\r\nexport class BitSet {\r\n    /** Enabled bits. @hidden */\r\n    _bits = 0;\r\n    /**\r\n     * Enable the bit at the given index.\r\n     *\r\n     * @param bits A spread of all the bits to enable.\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    enable(...bits) {\r\n        for (const bit of bits) {\r\n            assert(bit);\r\n            /* Casts the result to an unsigned integer */\r\n            this._bits |= (1 << bit) >>> 0;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Enable all bits.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    enableAll() {\r\n        this._bits = ~0;\r\n        return this;\r\n    }\r\n    /**\r\n     * Disable the bit at the given index.\r\n     *\r\n     * @param bits A spread of all the bits to disable.\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    disable(...bits) {\r\n        for (const bit of bits) {\r\n            assert(bit);\r\n            /* Casts the result to an unsigned integer */\r\n            this._bits &= ~((1 << bit) >>> 0);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Disable all bits.\r\n     *\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    disableAll() {\r\n        this._bits = 0;\r\n        return this;\r\n    }\r\n    /**\r\n     * Checker whether the bit is set or not.\r\n     *\r\n     * @param bit The bit to check.\r\n     * @returns `true` if it's enabled, `false` otherwise.\r\n     */\r\n    enabled(bit) {\r\n        return !!(this._bits & ((1 << bit) >>> 0));\r\n    }\r\n}\r\n", "import { BitSet } from './bitset.js';\r\n/**\r\n * Logging levels supported by {@link Logger}.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Info\"] = 0] = \"Info\";\r\n    LogLevel[LogLevel[\"Warn\"] = 1] = \"Warn\";\r\n    LogLevel[LogLevel[\"Error\"] = 2] = \"Error\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Logging wrapper.\r\n *\r\n * This is used to allow turning on/off:\r\n *     - `console.log`\r\n *     - `console.warn`\r\n *     - `console.error`\r\n *\r\n * #### Usage\r\n *\r\n * ```js\r\n * import {Logger, LogLevel, LogTag} from '@wonderlandengine/api';\r\n *\r\n * // Create a logger with only the \"error\" and \"warn\" levels activated\r\n * const logger = new Logger(LogLevel.Warn, LogLevel.Error);\r\n *\r\n * // Only the \"error\" and \"warn\" levels are activated,\r\n * // this message isn't logged.\r\n * logger.info(LogTag.Component, 'This message is shushed')\r\n *\r\n * // Prints 'Hello Error!'\r\n * logger.error(LogTag.Component, 'Hello Error!');\r\n *\r\n * // Prints 'Hello Warning!'\r\n * logger.warn(LogTag.Component, 'Hello Warning!');\r\n * ```\r\n *\r\n * The log levels can be changed at anytime using the {@link BitSet} api:\r\n *\r\n * ```js\r\n * // Enable the \"info\" level\r\n * logger.levels.enable(LogLevel.Info);\r\n * * // Disable the \"warn\" level\r\n * logger.levels.disable(LogLevel.Warn);\r\n * ```\r\n *\r\n * #### Tags\r\n *\r\n * In addition, the logger supports tagging messages:\r\n *\r\n * ```js\r\n * import {Logger, LogLevel, LogTag} from '@wonderlandengine/api';\r\n *\r\n * const logger = new Logger(LogLevel.Info);\r\n *\r\n * logger.tags.disableAll();\r\n *\r\n * // All tags are off, this message isn't logged\r\n * logger.info(LogTag.Component, 'This message is shushed');\r\n *\r\n * logger.tags.enable(LogTag.Component);\r\n * logger.info(LogTag.Component, 'Hello World!') // Prints 'Hello World!'\r\n * ```\r\n *\r\n * The tagging system gives another layer of control to enable / disable\r\n * some specific logs.\r\n */\r\nexport class Logger {\r\n    /**\r\n     * Bitset of enabled levels.\r\n     *\r\n     * @hidden\r\n     */\r\n    levels = new BitSet();\r\n    /**\r\n     * Bitset of enabled tags.\r\n     *\r\n     * @hidden\r\n     */\r\n    tags = new BitSet().enableAll();\r\n    /**\r\n     * Create a new logger instance.\r\n     *\r\n     * @param levels Default set of levels to enable.\r\n     */\r\n    constructor(...levels) {\r\n        this.levels.enable(...levels);\r\n    }\r\n    /**\r\n     * Log the message(s) using `console.log`.\r\n     *\r\n     * @param tag Tag represented by a positive integer.\r\n     * @param msg A spread of message to log.\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    info(tag, ...msg) {\r\n        if (this.levels.enabled(LogLevel.Info) && this.tags.enabled(tag)) {\r\n            console.log(...msg);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Log the message(s) using `console.warn`.\r\n     *\r\n     * @param tag Tag represented by a positive integer.\r\n     * @param msg A spread of message to log.\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    warn(tag, ...msg) {\r\n        if (this.levels.enabled(LogLevel.Warn) && this.tags.enabled(tag)) {\r\n            console.warn(...msg);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Log the message(s) using `console.error`.\r\n     *\r\n     * @param tag Tag represented by a positive integer.\r\n     * @param msg A spread of message to log.\r\n     * @returns Reference to self (for method chaining).\r\n     */\r\n    error(tag, ...msg) {\r\n        if (this.levels.enabled(LogLevel.Error) && this.tags.enabled(tag)) {\r\n            console.error(...msg);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n", "import { LogTag } from './index.js';\r\nimport { Type } from './property.js';\r\nimport { RetainEmitter } from './utils/event.js';\r\nimport { Logger } from './utils/logger.js';\r\nimport { inheritProperties, Animation, Component, Material, Mesh, BrokenComponent, Skin, XR, } from './wonderland.js';\r\n/**\r\n * Default component parameter value per type.\r\n */\r\nconst _componentDefaults = new Map([\r\n    [Type.Bool, false],\r\n    [Type.Int, 0],\r\n    [Type.Float, 0.0],\r\n    [Type.String, ''],\r\n    [Type.Enum, undefined],\r\n    [Type.Object, null],\r\n    [Type.Mesh, null],\r\n    [Type.Texture, null],\r\n    [Type.Material, null],\r\n    [Type.Animation, null],\r\n    [Type.Skin, null],\r\n    [Type.Color, [0.0, 0.0, 0.0, 1.0]],\r\n]);\r\n/**\r\n * Setup the defaults value of the properties on a given\r\n * component class.\r\n *\r\n * @param ctor The component class\r\n */\r\nfunction _setupDefaults(ctor) {\r\n    for (const name in ctor.Properties) {\r\n        const p = ctor.Properties[name];\r\n        if (p.type === Type.Enum) {\r\n            /* Enum default can be a string or an index. Convert to and/or\r\n             * sanity-check the index. */\r\n            if (p.values?.length) {\r\n                /* Don't try to look up the default if the user specified a\r\n                 * number or we already converted to one. */\r\n                if (typeof p.default !== 'number') {\r\n                    /* If undefined, missing element or wrong type this returns\r\n                     * -1 which becomes 0 below. This matches editor behavior. */\r\n                    p.default = p.values.indexOf(p.default);\r\n                }\r\n                if (p.default < 0 || p.default >= p.values.length) {\r\n                    p.default = 0;\r\n                }\r\n            }\r\n            else {\r\n                /* There's no index value that makes sense */\r\n                p.default = undefined;\r\n            }\r\n        }\r\n        else {\r\n            p.default = p.default ?? _componentDefaults.get(p.type);\r\n        }\r\n        ctor.prototype[name] = p.default;\r\n    }\r\n}\r\n/**\r\n * Low-level wrapper to interact with the WebAssembly code.\r\n *\r\n * @hidden\r\n */\r\nexport class WASM {\r\n    /**\r\n     * Emscripten worker field.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    worker = '';\r\n    /**\r\n     * Emscripten wasm field.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    wasm = null;\r\n    /**\r\n     * Emscripten canvas.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    canvas = null;\r\n    /** Current WebXR  */\r\n    /**\r\n     * Emscripten WebXR session.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_session = null;\r\n    /**\r\n     * Emscripten WebXR request session callback.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_requestSession = null;\r\n    /**\r\n     * Emscripten WebXR offer session callback.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_offerSession = null;\r\n    /**\r\n     * Emscripten WebXR frame.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_frame = null;\r\n    /**\r\n     * Emscripten current WebXR reference space.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_refSpace = null;\r\n    /**\r\n     * Emscripten WebXR reference spaces.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_refSpaces = null;\r\n    /**\r\n     * Emscripten WebXR current reference space type.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_refSpaceType = null;\r\n    /**\r\n     * Emscripten WebXR GL projection layer.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_baseLayer = null;\r\n    /**\r\n     * Emscripten WebXR framebuffer scale factor.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    webxr_framebufferScaleFactor = 1.0;\r\n    /**\r\n     * Emscripten WebXR framebuffer(s).\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    /* webxr_fbo will not get overwritten if we are rendering to the\r\n     * default framebuffer, e.g., when using WebXR emulator. */\r\n    webxr_fbo = 0;\r\n    /**\r\n     * Convert a WASM memory view to a JavaScript string.\r\n     *\r\n     * @param ptr Pointer start\r\n     * @param ptrEnd Pointer end\r\n     * @returns JavaScript string\r\n     */\r\n    UTF8ViewToString;\r\n    /** Logger instance. */\r\n    _log = new Logger();\r\n    /** If `true`, logs will not spam the console on error. */\r\n    _deactivate_component_on_error = false;\r\n    /** Temporary memory pointer. */\r\n    _tempMem = null;\r\n    /** Temporary memory size. */\r\n    _tempMemSize = 0;\r\n    /** Temporary float memory view. */\r\n    _tempMemFloat = null;\r\n    /** Temporary int memory view. */\r\n    _tempMemInt = null;\r\n    /** Temporary uint8 memory view. */\r\n    _tempMemUint8 = null;\r\n    /** Temporary uint32 memory view. */\r\n    _tempMemUint32 = null;\r\n    /** Temporary uint16 memory view. */\r\n    _tempMemUint16 = null;\r\n    /** Loading screen .bin file data */\r\n    _loadingScreen = null;\r\n    /** List of callbacks triggered when the scene is loaded. */\r\n    _sceneLoadedCallback = [];\r\n    /**\r\n     * Material definition cache. Each pipeline has its own\r\n     * associated material definition.\r\n     */\r\n    _materialDefinitions = [];\r\n    /** Image cache. */\r\n    _images = [];\r\n    /** Component instances. */\r\n    _components = [];\r\n    /** Component Type info. */\r\n    _componentTypes = [];\r\n    /** Index per component type name. */\r\n    _componentTypeIndices = {};\r\n    /** Wonderland engine instance. */\r\n    _engine = null;\r\n    /**\r\n     * `true` if this runtime is using physx.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    _withPhysX = false;\r\n    /** Decoder for UTF8 `ArrayBuffer` to JavaScript string. */\r\n    _utf8Decoder = new TextDecoder('utf8');\r\n    /** JavaScript manager index. */\r\n    _jsManagerIndexCached = null;\r\n    /**\r\n     * Registration index of {@link BrokenComponent}.\r\n     *\r\n     * This is used to return dummy instances when a component\r\n     * isn't registered.\r\n     *\r\n     * @hidden\r\n     */\r\n    _brokenComponentIndex = 0;\r\n    /**\r\n     * Create a new instance of the WebAssembly <> API bridge.\r\n     *\r\n     * @param threads `true` if the runtime used has threads support\r\n     */\r\n    constructor(threads) {\r\n        if (threads) {\r\n            this.UTF8ViewToString = (s, e) => {\r\n                if (!s)\r\n                    return '';\r\n                return this._utf8Decoder.decode(this.HEAPU8.slice(s, e));\r\n            };\r\n            return;\r\n        }\r\n        this.UTF8ViewToString = (s, e) => {\r\n            if (!s)\r\n                return '';\r\n            return this._utf8Decoder.decode(this.HEAPU8.subarray(s, e));\r\n        };\r\n        this._brokenComponentIndex = this._registerComponent(BrokenComponent);\r\n    }\r\n    /**\r\n     * Reset the cache of the library.\r\n     *\r\n     * @note Should only be called when tearing down the runtime.\r\n     */\r\n    reset() {\r\n        /* Cancel in-flight images */\r\n        for (const img of this._images) {\r\n            if (!img || !img.src)\r\n                continue;\r\n            img.src = '';\r\n            img.onload = null;\r\n            img.onerror = null;\r\n        }\r\n        this._images = [];\r\n        this.allocateTempMemory(1024);\r\n        this._materialDefinitions = [];\r\n        this._components = [];\r\n        this._componentTypes = [];\r\n        this._componentTypeIndices = {};\r\n        this._jsManagerIndexCached = null;\r\n        this._brokenComponentIndex = this._registerComponent(BrokenComponent);\r\n    }\r\n    /**\r\n     * Checks whether the given component is registered or not.\r\n     *\r\n     * @param ctor  A string representing the component typename (e.g., `'cursor-component'`).\r\n     * @returns `true` if the component is registered, `false` otherwise.\r\n     */\r\n    isRegistered(type) {\r\n        return type in this._componentTypeIndices;\r\n    }\r\n    /**\r\n     * Register a legacy component in this Emscripten instance.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @param typeName The name of the component.\r\n     * @param params An object containing the parameters (properties).\r\n     * @param object The object's prototype.\r\n     * @returns The registration index\r\n     */\r\n    _registerComponentLegacy(typeName, params, object) {\r\n        const ctor = class CustomComponent extends Component {\r\n        };\r\n        ctor.TypeName = typeName;\r\n        ctor.Properties = params;\r\n        Object.assign(ctor.prototype, object);\r\n        return this._registerComponent(ctor);\r\n    }\r\n    /**\r\n     * Register a class component in this Emscripten instance.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @param ctor The class to register.\r\n     * @returns The registration index.\r\n     */\r\n    _registerComponent(ctor) {\r\n        if (!ctor.TypeName)\r\n            throw new Error('no name provided for component.');\r\n        if (!ctor.prototype._triggerInit) {\r\n            throw new Error(`registerComponent(): Component ${ctor.TypeName} must extend Component`);\r\n        }\r\n        inheritProperties(ctor);\r\n        _setupDefaults(ctor);\r\n        const typeIndex = ctor.TypeName in this._componentTypeIndices\r\n            ? this._componentTypeIndices[ctor.TypeName]\r\n            : this._componentTypes.length;\r\n        this._componentTypes[typeIndex] = ctor;\r\n        this._componentTypeIndices[ctor.TypeName] = typeIndex;\r\n        if (ctor === BrokenComponent)\r\n            return typeIndex;\r\n        this._log.info(LogTag.Engine, 'Registered component', ctor.TypeName, `(class ${ctor.name})`, 'with index', typeIndex);\r\n        if (ctor.onRegister)\r\n            ctor.onRegister(this._engine);\r\n        return typeIndex;\r\n    }\r\n    /**\r\n     * Allocate the requested amount of temporary memory\r\n     * in this WASM instance.\r\n     *\r\n     * @param size The number of bytes to allocate\r\n     */\r\n    allocateTempMemory(size) {\r\n        this._log.info(LogTag.Engine, 'Allocating temp mem:', size);\r\n        this._tempMemSize = size;\r\n        if (this._tempMem)\r\n            this._free(this._tempMem);\r\n        this._tempMem = this._malloc(this._tempMemSize);\r\n        this.updateTempMemory();\r\n    }\r\n    /**\r\n     * @todo: Delete this and only keep `allocateTempMemory`\r\n     *\r\n     * @param size Number of bytes to allocate\r\n     */\r\n    requireTempMem(size) {\r\n        if (this._tempMemSize >= size)\r\n            return;\r\n        /* Grow in 1kb increments */\r\n        this.allocateTempMemory(Math.ceil(size / 1024) * 1024);\r\n    }\r\n    /**\r\n     * Update the temporary memory views. This must be called whenever the\r\n     * temporary memory address changes.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     */\r\n    updateTempMemory() {\r\n        this._tempMemFloat = new Float32Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize >> 2);\r\n        this._tempMemInt = new Int32Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize >> 2);\r\n        this._tempMemUint32 = new Uint32Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize >> 2);\r\n        this._tempMemUint16 = new Uint16Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize >> 1);\r\n        this._tempMemUint8 = new Uint8Array(this.HEAP8.buffer, this._tempMem, this._tempMemSize);\r\n    }\r\n    /**\r\n     * Returns a uint8 buffer view on temporary WASM memory.\r\n     *\r\n     * **Note**: this method might allocate if the requested memory is bigger\r\n     * than the current temporary memory allocated.\r\n     *\r\n     * @param count The number of **elements** required\r\n     * @returns A {@link TypedArray} over the WASM memory\r\n     */\r\n    getTempBufferU8(count) {\r\n        this.requireTempMem(count);\r\n        return this._tempMemUint8;\r\n    }\r\n    /**\r\n     * Returns a uint16 buffer view on temporary WASM memory.\r\n     *\r\n     * **Note**: this method might allocate if the requested memory is bigger\r\n     * than the current temporary memory allocated.\r\n     *\r\n     * @param count The number of **elements** required\r\n     * @returns A {@link TypedArray} over the WASM memory\r\n     */\r\n    getTempBufferU16(count) {\r\n        this.requireTempMem(count * 2);\r\n        return this._tempMemUint16;\r\n    }\r\n    /**\r\n     * Returns a uint32 buffer view on temporary WASM memory.\r\n     *\r\n     * **Note**: this method might allocate if the requested memory is bigger\r\n     * than the current temporary memory allocated.\r\n     *\r\n     * @param count The number of **elements** required.\r\n     * @returns A {@link TypedArray} over the WASM memory.\r\n     */\r\n    getTempBufferU32(count) {\r\n        this.requireTempMem(count * 4);\r\n        return this._tempMemUint32;\r\n    }\r\n    /**\r\n     * Returns a int32 buffer view on temporary WASM memory.\r\n     *\r\n     * **Note**: this method might allocate if the requested memory is bigger\r\n     * than the current temporary memory allocated.\r\n     *\r\n     * @param count The number of **elements** required.\r\n     * @returns A {@link TypedArray} over the WASM memory.\r\n     */\r\n    getTempBufferI32(count) {\r\n        this.requireTempMem(count * 4);\r\n        return this._tempMemInt;\r\n    }\r\n    /**\r\n     * Returns a float32 buffer view on temporary WASM memory.\r\n     *\r\n     * **Note**: this method might allocate if the requested memory is bigger\r\n     * than the current temporary memory allocated.\r\n     *\r\n     * @param count The number of **elements** required.\r\n     * @returns A {@link TypedArray} over the WASM memory.\r\n     */\r\n    getTempBufferF32(count) {\r\n        this.requireTempMem(count * 4);\r\n        return this._tempMemFloat;\r\n    }\r\n    /**\r\n     * Copy the string into temporary WASM memory and retrieve the pointer.\r\n     *\r\n     * @note This method will compute the strlen and append a `\\0`.\r\n     *\r\n     * @note The result should be used **directly** otherwise it might get\r\n     * overridden by any next call modifying the temporary memory.\r\n     *\r\n     * @param str The string to write to temporary memory\r\n     * @param byteOffset The starting byte offset in the temporary memory at which\r\n     *     the string should be written. This is useful when using multiple temporaries.\r\n     * @return The temporary pointer onto the WASM memory\r\n     */\r\n    tempUTF8(str, byteOffset = 0) {\r\n        const strLen = this.lengthBytesUTF8(str) + 1;\r\n        this.requireTempMem(strLen + byteOffset);\r\n        const ptr = this._tempMem + byteOffset;\r\n        this.stringToUTF8(str, ptr, strLen);\r\n        return ptr;\r\n    }\r\n    /**\r\n     * Return the index of the component type.\r\n     *\r\n     * @note This method uses malloc and copies the string\r\n     * to avoid overwriting caller's temporary data.\r\n     *\r\n     * @param type The type\r\n     * @return The component type index\r\n     */\r\n    _typeIndexFor(type) {\r\n        const lengthBytes = this.lengthBytesUTF8(type) + 1;\r\n        const mem = this._malloc(lengthBytes);\r\n        this.stringToUTF8(type, mem, lengthBytes);\r\n        const componentType = this._wl_get_component_manager_index(mem);\r\n        this._free(mem);\r\n        return componentType;\r\n    }\r\n    /**\r\n     * Return the name of component type stored at the given index.\r\n     *\r\n     * @param typeIndex The type index\r\n     * @return The name as a string\r\n     */\r\n    _typeNameFor(typeIndex) {\r\n        return this.UTF8ToString(this._wl_component_manager_name(typeIndex));\r\n    }\r\n    /**\r\n     * Returns `true` if the runtime supports physx or not.\r\n     */\r\n    get withPhysX() {\r\n        return this._withPhysX;\r\n    }\r\n    /** JavaScript manager index. */\r\n    get _jsManagerIndex() {\r\n        if (this._jsManagerIndexCached === null) {\r\n            this._jsManagerIndexCached = this._typeIndexFor('js');\r\n        }\r\n        return this._jsManagerIndexCached;\r\n    }\r\n    /**\r\n     * Set the engine instance holding this bridge.\r\n     *\r\n     * @note This api is meant to be used internally.\r\n     *\r\n     * @param engine The engine instance.\r\n     */\r\n    _setEngine(engine) {\r\n        this._engine = engine;\r\n    }\r\n    /* WebAssembly to JS call bridge. */\r\n    _wljs_xr_session_start(mode) {\r\n        if (this._engine.xr === null) {\r\n            this._engine.xr = new XR(this, mode);\r\n            this._engine.onXRSessionStart.notify(this.webxr_session, mode);\r\n        }\r\n    }\r\n    _wljs_xr_session_end() {\r\n        const startEmitter = this._engine.onXRSessionStart;\r\n        if (startEmitter instanceof RetainEmitter)\r\n            startEmitter.reset();\r\n        this._engine.onXRSessionEnd.notify();\r\n        this._engine.xr = null;\r\n    }\r\n    _wljs_xr_disable() {\r\n        /* @todo This could directly be fully handled in JS. */\r\n        this._engine.arSupported = false;\r\n        this._engine.vrSupported = false;\r\n    }\r\n    _wljs_allocate(numComponents) {\r\n        this._components = new Array(numComponents);\r\n    }\r\n    _wljs_init(withPhysX) {\r\n        this._withPhysX = withPhysX;\r\n        /* Target memory for JS API functions that return arrays */\r\n        this.allocateTempMemory(1024);\r\n    }\r\n    _wljs_reallocate(numComponents) {\r\n        if (numComponents > this._components.length) {\r\n            this._components.length = numComponents;\r\n        }\r\n    }\r\n    _wljs_scene_add_material_definition(definitionId) {\r\n        const definition = new Map();\r\n        /* Cache material definition for faster read/write */\r\n        const nbParams = this._wl_material_definition_get_count(definitionId);\r\n        for (let i = 0; i < nbParams; ++i) {\r\n            const name = this.UTF8ToString(this._wl_material_definition_get_param_name(definitionId, i));\r\n            const t = this._wl_material_definition_get_param_type(definitionId, i);\r\n            definition.set(name, {\r\n                index: i,\r\n                type: {\r\n                    type: t & 0xff,\r\n                    componentCount: (t >> 8) & 0xff,\r\n                    metaType: (t >> 16) & 0xff,\r\n                },\r\n            });\r\n        }\r\n        this._materialDefinitions[definitionId] = definition;\r\n    }\r\n    _wljs_set_component_param_bool(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] = v !== 0;\r\n    }\r\n    _wljs_set_component_param_int(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] = v;\r\n    }\r\n    _wljs_set_component_param_float(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] = v;\r\n    }\r\n    _wljs_set_component_param_string(c, p, pe, v, ve) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        const value = this.UTF8ViewToString(v, ve);\r\n        this._components[c][param] = value;\r\n    }\r\n    _wljs_set_component_param_color(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] = new Float32Array([0, 8, 16, 24].map((s) => ((v >>> s) & 0xff) / 255.0));\r\n    }\r\n    _wljs_set_component_param_object(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] =\r\n            v > 0 ? this._engine.wrapObject(v) : null;\r\n    }\r\n    _wljs_set_component_param_mesh(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] =\r\n            v > 0 ? new Mesh(this._engine, v) : null;\r\n    }\r\n    _wljs_set_component_param_texture(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] =\r\n            v > 0 ? this._engine.textures.wrap(v) : null;\r\n    }\r\n    _wljs_set_component_param_material(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] =\r\n            v > 0 ? new Material(this._engine, v) : null;\r\n    }\r\n    _wljs_set_component_param_animation(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] =\r\n            v > 0 ? new Animation(this._engine, v) : null;\r\n    }\r\n    _wljs_set_component_param_skin(c, p, pe, v) {\r\n        const param = this.UTF8ViewToString(p, pe);\r\n        this._components[c][param] =\r\n            v > 0 ? new Skin(this._engine, v) : null;\r\n    }\r\n    _wljs_get_component_type_index(namePtr, nameEndPtr) {\r\n        const typename = this.UTF8ViewToString(namePtr, nameEndPtr);\r\n        const index = this._componentTypeIndices[typename];\r\n        if (index === undefined) {\r\n            return this._brokenComponentIndex;\r\n        }\r\n        return index;\r\n    }\r\n    _wljs_component_create(jsManagerIndex, index, id, type, object) {\r\n        const ctor = this._componentTypes[type];\r\n        if (!ctor) {\r\n            throw new Error(`Type index ${type} isn't registered`);\r\n        }\r\n        let component = null;\r\n        try {\r\n            component = new ctor();\r\n        }\r\n        catch (e) {\r\n            this._log.error(LogTag.Component, `Exception during instantiation of component ${ctor.TypeName}`);\r\n            this._log.error(LogTag.Component, e);\r\n            component = new BrokenComponent(this._engine);\r\n        }\r\n        /* Sets the manager and identifier from the outside, to simplify the user's constructor. */\r\n        /* @ts-ignore */\r\n        component._engine = this._engine;\r\n        component._manager = jsManagerIndex;\r\n        component._id = id;\r\n        component._object = this._engine.wrapObject(object);\r\n        try {\r\n            component.resetProperties();\r\n        }\r\n        catch (e) {\r\n            this._log.error(LogTag.Component, `Exception during ${component.type} resetProperties() on object ${component.object.name}`);\r\n            this._log.error(LogTag.Component, e);\r\n        }\r\n        this._components[index] = component;\r\n        return component;\r\n    }\r\n    _wljs_component_init(component) {\r\n        const c = this._components[component];\r\n        c._triggerInit();\r\n    }\r\n    _wljs_component_update(component, dt) {\r\n        const c = this._components[component];\r\n        c._triggerUpdate(dt);\r\n    }\r\n    _wljs_component_onActivate(component) {\r\n        const c = this._components[component];\r\n        if (c)\r\n            c._triggerOnActivate();\r\n    }\r\n    _wljs_component_onDeactivate(component) {\r\n        const c = this._components[component];\r\n        c._triggerOnDeactivate();\r\n    }\r\n    _wljs_component_onDestroy(component) {\r\n        const c = this._components[component];\r\n        c._triggerOnDestroy();\r\n    }\r\n    _wljs_swap(a, b) {\r\n        const componentA = this._components[a];\r\n        this._components[a] = this._components[b];\r\n        this._components[b] = componentA;\r\n    }\r\n    _wljs_copy(src, dst) {\r\n        const destComp = this._components[dst];\r\n        try {\r\n            destComp.copy(this._components[src]);\r\n        }\r\n        catch (e) {\r\n            this._log.error(LogTag.Component, `Exception during ${destComp.type} copy() on object ${destComp.object.name}`);\r\n            this._log.error(LogTag.Component, e);\r\n        }\r\n    }\r\n}\r\n/*\r\n * Api <> Runtime compatibility.\r\n *\r\n * Some features exposed in the API are only available from a specific\r\n * runtime version.\r\n *\r\n * Every added feature must throw by default. If the runtime loaded\r\n * has the specific feature, the method will be overwritten by Emscripten\r\n * upon loading.\r\n */\r\nfunction throwInvalidRuntime(version) {\r\n    return function () {\r\n        throw new Error(`Feature added in version ${version}.` +\r\n            `\\n\\t\u2192 Please use a Wonderland Engine editor version >= ${version}`);\r\n    };\r\n}\r\nconst requireRuntime1_1_1 = throwInvalidRuntime('1.1.1');\r\nconst requireRuntime1_1_5 = throwInvalidRuntime('1.1.5');\r\n/** @todo: Remove at 1.2.0 */\r\nWASM.prototype._wl_physx_component_get_offsetTranslation = requireRuntime1_1_1;\r\nWASM.prototype._wl_physx_component_set_offsetTranslation = requireRuntime1_1_1;\r\nWASM.prototype._wl_physx_component_get_offsetTransform = requireRuntime1_1_1;\r\nWASM.prototype._wl_physx_component_set_offsetRotation = requireRuntime1_1_1;\r\nWASM.prototype._wl_object_clone = requireRuntime1_1_1;\r\nWASM.prototype._wl_physx_component_set_sleepOnActivate = requireRuntime1_1_5;\r\nWASM.prototype._wl_physx_component_get_sleepOnActivate = requireRuntime1_1_5;\r\nWASM.prototype.webxr_offerSession = requireRuntime1_1_5;\r\n", "/**\r\n * This file is automatically generated.\r\n *\r\n * **Do not** modify this file directly, but instead update\r\n * the 'write-version.mjs' script.\r\n */\r\n/** Version of this API. */\r\nexport const APIVersion = {\r\n    major: 1,\r\n    minor: 1,\r\n    patch: 5,\r\n    rc: 0\r\n};\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\n/**\r\n * 8thwall camera component.\r\n *\r\n * Sets up the 8thwall pipeline and retrieves tracking events to place an\r\n * object at the location of the tracked AR camera / mobile device.\r\n *\r\n * Use this for SLAM tracking based on 8thwall.\r\n *\r\n * Make sure to enable 8thwall in \"Project Settings\" > \"AR\". See also the\r\n * [AR Getting Started Guide](/getting-started/quick-start-ar)\r\n *\r\n *\r\n * Currently only supports world-tracking (SLAM) using BACK camera.\r\n *\r\n * - remove any occurrences of the old 8thwall-camera component in the editor\r\n * - Add this component to NonVrCamera\r\n *\r\n * IMPORTANT!\r\n * - until it get's fixed, select 'customIndexHtml' in the project settings\r\n * - open a generated index.html and crossorigin=\"anonymous\" attribute to the <script> tag where //apps.8thwall.com/xrweb is loaded\r\n *\r\n *\r\n * ######### Using UI overlays #############\r\n * By default, this component renders own UI to give the user feedback about rejected permissions or tracking errors.\r\n * It can be changed by enabling useCustomUIOverlays flag.\r\n *\r\n * If useCustomUIOverlays is enabled, you are expected handle the following events dispatched by the window object:\r\n * - \"8thwall-request-user-interaction\" - used only on iOS safari. Request a user to perform and interaction with the page so that javascript is allowed to allowed to request a motion/camera/mic permissions.\r\n *  Make sure the window object is dispatching an '8thwall-safe-to-request-permissions' event after interaction has happened.\r\n * ```\r\n * <button onclick=\"window.dispatchEvent(new Event('8thwall-safe-to-request-permissions'))\">Allow Sensors</button>\r\n * ```\r\n *\r\n * - \"8thwall-permission-fail\" - user rejected any of the permissions\r\n *\r\n * - \"8thwall-error\" - runtime 8thwall error occurred\r\n */\r\nclass ARCamera8thwall extends Component {\r\n    static TypeName = '8thwall-camera';\r\n    static Properties = {\r\n        /** Override the WL html overlays for handling camera/motion permissions and error handling */\r\n        useCustomUIOverlays: { type: Type.Bool, default: false },\r\n    };\r\n    /* 8thwall camera pipeline module name */\r\n    name = 'wonderland-engine-8thwall-camera';\r\n    started = false;\r\n    view = null; // cache camera\r\n    position = [0, 0, 0]; // cache 8thwall cam position\r\n    rotation = [0, 0, 0, -1]; // cache 8thwall cam rotation\r\n    glTextureRenderer = null; // cache XR8.GlTextureRenderer.pipelineModule\r\n    promptForDeviceMotion() {\r\n        return new Promise(async (resolve, reject) => {\r\n            // Tell anyone who's interested that we want to get some user interaction\r\n            window.dispatchEvent(new Event('8thwall-request-user-interaction'));\r\n            // Wait until someone response that user interaction happened\r\n            window.addEventListener('8thwall-safe-to-request-permissions', async () => {\r\n                try {\r\n                    const motionEvent = await DeviceMotionEvent.requestPermission();\r\n                    resolve(motionEvent);\r\n                }\r\n                catch (exception) {\r\n                    reject(exception);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    async getPermissions() {\r\n        // iOS \"feature\". If we want to request the DeviceMotion permission, user has to interact with the page at first (touch it).\r\n        // If there was no interaction done so far, we will render a HTML overlay with would get the user to interact with the screen\r\n        if (DeviceMotionEvent && DeviceMotionEvent.requestPermission) {\r\n            try {\r\n                const result = await DeviceMotionEvent.requestPermission();\r\n                // The user must have rejected the motion event on previous page load. (safari remembers this choice).\r\n                if (result !== 'granted') {\r\n                    throw new Error('MotionEvent');\r\n                }\r\n            }\r\n            catch (exception) {\r\n                // User had no interaction with the page so far\r\n                if (exception.name === 'NotAllowedError') {\r\n                    const motionEvent = await this.promptForDeviceMotion();\r\n                    if (motionEvent !== 'granted') {\r\n                        throw new Error('MotionEvent');\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('MotionEvent');\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            // make sure we get the camera stream\r\n            const stream = await navigator.mediaDevices.getUserMedia({\r\n                video: true,\r\n                audio: true,\r\n            });\r\n            // If we successfully acquired the camera stream - we can stop it and wait until 8thwall requests it again\r\n            stream.getTracks().forEach((track) => {\r\n                track.stop();\r\n            });\r\n        }\r\n        catch (exception) {\r\n            throw new Error('Camera');\r\n        }\r\n    }\r\n    init() {\r\n        this.view = this.object.getComponent('view');\r\n        this.onUpdate = this.onUpdate.bind(this);\r\n        this.onAttach = this.onAttach.bind(this);\r\n        this.onException = this.onException.bind(this);\r\n        this.onCameraStatusChange = this.onCameraStatusChange.bind(this);\r\n    }\r\n    async start() {\r\n        this.view = this.object.getComponent('view');\r\n        if (!this.useCustomUIOverlays) {\r\n            OverlaysHandler.init();\r\n        }\r\n        try {\r\n            await this.getPermissions();\r\n        }\r\n        catch (error) {\r\n            // User did not grant the camera or motionEvent permissions\r\n            window.dispatchEvent(new CustomEvent('8thwall-permission-fail', { detail: error }));\r\n            return;\r\n        }\r\n        await this.waitForXR8();\r\n        XR8.XrController.configure({\r\n            disableWorldTracking: false,\r\n        });\r\n        this.glTextureRenderer = XR8.GlTextureRenderer.pipelineModule();\r\n        XR8.addCameraPipelineModules([\r\n            this.glTextureRenderer,\r\n            XR8.XrController.pipelineModule(),\r\n            this,\r\n        ]);\r\n        const config = {\r\n            cameraConfig: {\r\n                direction: XR8.XrConfig.camera().BACK,\r\n            },\r\n            canvas: Module.canvas,\r\n            allowedDevices: XR8.XrConfig.device().ANY,\r\n            ownRunLoop: false,\r\n        };\r\n        XR8.run(config);\r\n    }\r\n    /**\r\n     * @private\r\n     * 8thwall pipeline function\r\n     */\r\n    onAttach(params) {\r\n        this.started = true;\r\n        this.engine.scene.colorClearEnabled = false;\r\n        const gl = Module.ctx;\r\n        const rot = this.object.rotationWorld;\r\n        const pos = this.object.getTranslationWorld([]);\r\n        this.position = Array.from(pos);\r\n        this.rotation = Array.from(rot);\r\n        XR8.XrController.updateCameraProjectionMatrix({\r\n            origin: { x: pos[0], y: pos[1], z: pos[2] },\r\n            facing: { x: rot[0], y: rot[1], z: rot[2], w: rot[3] },\r\n            cam: {\r\n                pixelRectWidth: Module.canvas.width,\r\n                pixelRectHeight: Module.canvas.height,\r\n                nearClipPlane: this.view.near,\r\n                farClipPlane: this.view.far,\r\n            },\r\n        });\r\n        this.engine.scene.onPreRender.push(() => {\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\r\n            XR8.runPreRender(Date.now());\r\n            XR8.runRender(); // <--- tell 8thwall to do it's thing (alternatively call this.glTextureRenderer.onRender() if you only care about camera feed )\r\n        });\r\n        this.engine.scene.onPostRender.push(() => {\r\n            XR8.runPostRender(Date.now());\r\n        });\r\n    }\r\n    /**\r\n     * @private\r\n     * 8thwall pipeline function\r\n     */\r\n    onCameraStatusChange(e) {\r\n        if (e && e.status === 'failed') {\r\n            this.onException(new Error(`Camera failed with status: ${e.status}`));\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * 8thwall pipeline function\r\n     */\r\n    onUpdate(e) {\r\n        if (!e.processCpuResult.reality)\r\n            return;\r\n        const { rotation, position, intrinsics } = e.processCpuResult.reality;\r\n        this.rotation[0] = rotation.x;\r\n        this.rotation[1] = rotation.y;\r\n        this.rotation[2] = rotation.z;\r\n        this.rotation[3] = rotation.w;\r\n        this.position[0] = position.x;\r\n        this.position[1] = position.y;\r\n        this.position[2] = position.z;\r\n        if (intrinsics) {\r\n            const projectionMatrix = this.view.projectionMatrix;\r\n            for (let i = 0; i < 16; i++) {\r\n                /* Some processCpuResult.reality.intrinsics are set to Infinity,\r\n                 * which brakes our projectionMatrix. So we just filter those elements out. */\r\n                if (Number.isFinite(intrinsics[i])) {\r\n                    projectionMatrix[i] = intrinsics[i];\r\n                }\r\n            }\r\n        }\r\n        if (position && rotation) {\r\n            this.object.rotationWorld = this.rotation;\r\n            this.object.setTranslationWorld(this.position);\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * 8thwall pipeline function\r\n     */\r\n    onException(error) {\r\n        console.error('8thwall exception:', error);\r\n        window.dispatchEvent(new CustomEvent('8thwall-error', { detail: error }));\r\n    }\r\n    waitForXR8() {\r\n        return new Promise((resolve, _rej) => {\r\n            if (window.XR8) {\r\n                resolve();\r\n            }\r\n            else {\r\n                window.addEventListener('xrloaded', () => resolve());\r\n            }\r\n        });\r\n    }\r\n}\r\nexport { ARCamera8thwall };\r\nconst OverlaysHandler = {\r\n    init: function () {\r\n        this.handleRequestUserInteraction = this.handleRequestUserInteraction.bind(this);\r\n        this.handlePermissionFail = this.handlePermissionFail.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n        window.addEventListener('8thwall-request-user-interaction', this.handleRequestUserInteraction);\r\n        window.addEventListener('8thwall-permission-fail', this.handlePermissionFail);\r\n        window.addEventListener('8thwall-error', this.handleError);\r\n    },\r\n    handleRequestUserInteraction: function () {\r\n        const overlay = this.showOverlay(requestPermissionOverlay);\r\n        window.addEventListener('8thwall-safe-to-request-permissions', () => {\r\n            overlay.remove();\r\n        });\r\n    },\r\n    handlePermissionFail: function (_reason) {\r\n        this.showOverlay(failedPermissionOverlay);\r\n    },\r\n    handleError: function (_error) {\r\n        this.showOverlay(runtimeErrorOverlay);\r\n    },\r\n    showOverlay: function (htmlContent) {\r\n        const overlay = document.createElement('div');\r\n        overlay.innerHTML = htmlContent;\r\n        document.body.appendChild(overlay);\r\n        return overlay;\r\n    },\r\n};\r\nconst requestPermissionOverlay = `\r\n<style>\r\n  #request-permission-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 999;\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  .request-permission-overlay_title {\r\n    margin: 30px;\r\n    font-size: 32px;\r\n  }\r\n\r\n  .request-permission-overlay_button {\r\n    background-color: #e80086;\r\n    font-size: 22px;\r\n    padding: 10px 30px;\r\n    color: #fff;\r\n    border-radius: 15px;\r\n    border: none;\r\n  }\r\n</style>\r\n\r\n<div id=\"request-permission-overlay\">\r\n  <div class=\"request-permission-overlay_title\">This app requires to use your camera and motion sensors</div>\r\n\r\n  <button class=\"request-permission-overlay_button\" onclick=\"window.dispatchEvent(new Event('8thwall-safe-to-request-permissions'))\">OK</button>\r\n</div>`;\r\nconst failedPermissionOverlay = `\r\n<style>\r\n  #failed-permission-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 999;\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  .failed-permission-overlay_title {\r\n    margin: 30px;\r\n    font-size: 32px;\r\n  }\r\n\r\n  .failed-permission-overlay_button {\r\n    background-color: #e80086;\r\n    font-size: 22px;\r\n    padding: 10px 30px;\r\n    color: #fff;\r\n    border-radius: 15px;\r\n    border: none;\r\n  }\r\n</style>\r\n\r\n<div id=\"failed-permission-overlay\">\r\n  <div class=\"failed-permission-overlay_title\">Failed to grant permissions. Reset the the permissions and refresh the page.</div>\r\n\r\n  <button class=\"failed-permission-overlay_button\" onclick=\"window.location.reload()\">Refresh the page</button>\r\n</div>`;\r\nconst runtimeErrorOverlay = `\r\n<style>\r\n  #wall-error-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 999;\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  .wall-error-overlay_title {\r\n    margin: 30px;\r\n    font-size: 32px;\r\n  }\r\n\r\n  .wall-error-overlay_button {\r\n    background-color: #e80086;\r\n    font-size: 22px;\r\n    padding: 10px 30px;\r\n    color: #fff;\r\n    border-radius: 15px;\r\n    border: none;\r\n  }\r\n</style>\r\n\r\n<div id=\"wall-error-overlay\">\r\n  <div class=\"wall-error-overlay_title\">Error has occurred. Please reload the page</div>\r\n\r\n  <button class=\"wall-error-overlay_button\" onclick=\"window.location.reload()\">Reload</button>\r\n</div>`;\r\n", "const tempVec = new Float32Array(3);\r\nconst tempQuat = new Float32Array(4);\r\nexport function setXRRigidTransformLocal(o, transform) {\r\n    const r = transform.orientation;\r\n    tempQuat[0] = r.x;\r\n    tempQuat[1] = r.y;\r\n    tempQuat[2] = r.z;\r\n    tempQuat[3] = r.w;\r\n    const t = transform.position;\r\n    tempVec[0] = t.x;\r\n    tempVec[1] = t.y;\r\n    tempVec[2] = t.z;\r\n    o.resetPositionRotation();\r\n    o.setRotationLocal(tempQuat);\r\n    o.translateLocal(tempVec);\r\n}\r\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, Emitter } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { setXRRigidTransformLocal } from './utils/webxr.js';\r\nvar tempVec3 = new Float32Array(3);\r\nvar tempQuat = new Float32Array(4);\r\n/**\r\n * Sets the location of the object to the location of an XRAnchor\r\n *\r\n * Create anchors using the `Anchor.create()` static function.\r\n *\r\n * Example for use with cursor:\r\n * ```js\r\n * cursorTarget.onClick.add((object, cursor, originalEvent) => {\r\n *     /* Only events in XR will have a frame attached *\\/\r\n *     if(!originalEvent.frame) return;\r\n *     Anchor.create(anchorObject, {uuid: id, persist: true}, originalEvent.frame);\r\n * });\r\n * ```\r\n */\r\nclass Anchor extends Component {\r\n    static TypeName = 'anchor';\r\n    /* Static management of all anchors */\r\n    static #anchors = [];\r\n    persist = false;\r\n    /** Unique identifier to load a persistent anchor from, or empty/null if unknown */\r\n    uuid = null;\r\n    /** The xrAnchor, if created */\r\n    xrAnchor = null;\r\n    /** Emits events when the anchor is created either by being restored or newly created */\r\n    onCreate = new Emitter();\r\n    /** Whether the anchor is currently being tracked */\r\n    visible = false;\r\n    /** Emits an event when this anchor starts tracking */\r\n    onTrackingFound = new Emitter();\r\n    /** Emits an event when this anchor stops tracking */\r\n    onTrackingLost = new Emitter();\r\n    /** XRFrame to use for creating the anchor */\r\n    xrFrame = null;\r\n    /** XRHitTestResult to use for creating the anchor */\r\n    xrHitResult = null;\r\n    /** Retrieve all anchors of the current scene */\r\n    static getAllAnchors() {\r\n        return Anchor.#anchors;\r\n    }\r\n    static #addAnchor(anchor) {\r\n        Anchor.#anchors.push(anchor);\r\n    }\r\n    static #removeAnchor(anchor) {\r\n        const index = Anchor.#anchors.indexOf(anchor);\r\n        if (index < 0)\r\n            return;\r\n        Anchor.#anchors.splice(index, 1);\r\n    }\r\n    /**\r\n     * Create a new anchor\r\n     *\r\n     * @param o Object to attach the component to\r\n     * @param params Parameters for the anchor component\r\n     * @param frame XRFrame to use for anchor cration, if null, will use the current frame if available\r\n     * @param hitResult Optional hit-test result to create the anchor with\r\n     * @returns Promise for the newly created anchor component\r\n     */\r\n    static create(o, params, frame, hitResult) {\r\n        const a = o.addComponent(Anchor, { ...params, active: false });\r\n        if (a === null)\r\n            return null;\r\n        a.xrHitResult = hitResult ?? null;\r\n        a.xrFrame = frame ?? null;\r\n        a.onCreate.once(() => ((a.xrFrame = null), (a.xrHitResult = null)));\r\n        a.active = true;\r\n        return a.onCreate.promise();\r\n    }\r\n    #getFrame() {\r\n        return this.xrFrame || this.engine.xr.frame;\r\n    }\r\n    async #createAnchor() {\r\n        if (!this.#getFrame().createAnchor) {\r\n            throw new Error(\"Cannot create anchor - anchors not supported, did you enable the 'anchors' WebXR feature?\");\r\n        }\r\n        if (this.xrHitResult) {\r\n            if (this.xrHitResult.createAnchor === undefined) {\r\n                throw new Error('Requested anchor on XRHitTestResult, but WebXR hit-test feature is not available.');\r\n            }\r\n            return this.xrHitResult.createAnchor();\r\n        }\r\n        else {\r\n            this.object.getTranslationWorld(tempVec3);\r\n            tempQuat.set(this.object.rotationWorld);\r\n            const rotation = tempQuat;\r\n            const anchorPose = new XRRigidTransform({ x: tempVec3[0], y: tempVec3[1], z: tempVec3[2] }, { x: rotation[0], y: rotation[1], z: rotation[2], w: rotation[3] });\r\n            return this.#getFrame()?.createAnchor(anchorPose, this.engine.xr.currentReferenceSpace);\r\n        }\r\n    }\r\n    #onAddAnchor(anchor) {\r\n        if (!anchor)\r\n            return;\r\n        if (this.persist) {\r\n            if (anchor.requestPersistentHandle !== undefined) {\r\n                anchor.requestPersistentHandle().then((uuid) => {\r\n                    this.uuid = uuid;\r\n                    this.#onCreate(anchor);\r\n                    Anchor.#addAnchor(this);\r\n                });\r\n                return;\r\n            }\r\n            else {\r\n                console.warn('anchor: Persistent anchors are not supported by your client. Ignoring persist property.');\r\n            }\r\n        }\r\n        this.#onCreate(anchor);\r\n    }\r\n    #onRestoreAnchor(anchor) {\r\n        this.#onCreate(anchor);\r\n    }\r\n    #onCreate(anchor) {\r\n        this.xrAnchor = anchor;\r\n        this.onCreate.notify(this);\r\n    }\r\n    start() {\r\n        if (this.uuid && this.engine.xr) {\r\n            this.persist = true;\r\n            if (this.engine.xr.session.restorePersistentAnchor === undefined) {\r\n                console.warn('anchor: Persistent anchors are not supported by your client. Ignoring persist property.');\r\n            }\r\n            this.engine.xr.session.restorePersistentAnchor(this.uuid).then(this.#onRestoreAnchor.bind(this));\r\n        }\r\n        else if (this.#getFrame()) {\r\n            this.#createAnchor().then(this.#onAddAnchor.bind(this));\r\n        }\r\n        else {\r\n            throw new Error('Anchors can only be created during the XR frame in an active XR session');\r\n        }\r\n    }\r\n    update() {\r\n        if (!this.xrAnchor || !this.engine.xr)\r\n            return;\r\n        /* We need to use the actual frame from the draw callback here */\r\n        const pose = this.engine.xr.frame.getPose(this.xrAnchor.anchorSpace, this.engine.xr.currentReferenceSpace);\r\n        const visible = !!pose;\r\n        if (visible != this.visible) {\r\n            this.visible = visible;\r\n            (visible ? this.onTrackingFound : this.onTrackingLost).notify(this);\r\n        }\r\n        if (pose) {\r\n            setXRRigidTransformLocal(this.object, pose.transform);\r\n        }\r\n    }\r\n    onDestroy() {\r\n        Anchor.#removeAnchor(this);\r\n    }\r\n}\r\n__decorate([\r\n    property.bool(false)\r\n], Anchor.prototype, \"persist\", void 0);\r\n__decorate([\r\n    property.string()\r\n], Anchor.prototype, \"uuid\", void 0);\r\nexport { Anchor };\r\n", "import { Component, Emitter } from '@wonderlandengine/api';\r\n/**\r\n * Click/hover/move/button target for [cursor](#cursor).\r\n *\r\n * To trigger code when clicking, hovering, unhovering, moving cursor, pressing\r\n * cursor button or releasing cursor button, use `.addClickFunction(f)`,\r\n * `.addHoverFunction(f)`, `.addUnHoverFunction(f)`,\r\n * `.addMoveFunction(f)`, `.addDownFunction(f)` and\r\n * `.addUpFunction(f)` respectively with any `function f() {}`.\r\n *\r\n * To call members on a different component, you can set up a cursor target like\r\n * so:\r\n *\r\n * ```js\r\n * start: function() {\r\n *   let target = this.object.addComponent('cursor-target');\r\n *   target.onClick.add(this.onClick.bind(this));\r\n * },\r\n * onClick: function() {\r\n *   console.log(this.object.name, \"was clicked!\");\r\n * }\r\n * ```\r\n * **Functions:**\r\n *\r\n * ```js\r\n * const target = this.object.getComponent(CursorTarget);\r\n * const callback = function(object, cursorComponent) {};\r\n *\r\n * target.onHover.add(callback);\r\n * target.onHover.remove(callback);\r\n *\r\n * target.onUnHover.add(callback);\r\n * target.onUnHover.remove(callback);\r\n *\r\n * target.onClick.add(callback);\r\n * target.onClick.remove(callback);\r\n *\r\n * target.onMove.add(callback);\r\n * target.onMove.remove(callback);\r\n *\r\n * target.onDown.add(callback);\r\n * target.onDown.remove(callback);\r\n *\r\n * target.onUp.add(callback);\r\n * target.onUp.remove(callback);\r\n * ```\r\n *\r\n * **Requirements:**\r\n * - a `collision` component to be attached to the same object.\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nclass CursorTarget extends Component {\r\n    static TypeName = 'cursor-target';\r\n    static Properties = {};\r\n    /** Emitter for events when the target is hovered */\r\n    onHover = new Emitter();\r\n    /** Emitter for events when the target is unhovered */\r\n    onUnhover = new Emitter();\r\n    /** Emitter for events when the target is clicked */\r\n    onClick = new Emitter();\r\n    /** Emitter for events when the cursor moves on the target */\r\n    onMove = new Emitter();\r\n    /** Emitter for events when the user pressed the select button on the target */\r\n    onDown = new Emitter();\r\n    /** Emitter for events when the user unpressed the select button on the target */\r\n    onUp = new Emitter();\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onHover.add(f);\r\n     */\r\n    addHoverFunction(f) {\r\n        this.onHover.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onHover.remove(f);\r\n     */\r\n    removeHoverFunction(f) {\r\n        this.onHover.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onUnhover.add(f);\r\n     */\r\n    addUnHoverFunction(f) {\r\n        this.onUnhover.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onUnhover.remove(f);\r\n     */\r\n    removeUnHoverFunction(f) {\r\n        this.onUnhover.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    this.onClick.add(f);\r\n     */\r\n    addClickFunction(f) {\r\n        this.onClick.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onClick.remove(f);\r\n     */\r\n    removeClickFunction(f) {\r\n        this.onClick.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onMove.add(f);\r\n     */\r\n    addMoveFunction(f) {\r\n        this.onMove.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onMove.remove(f);\r\n     */\r\n    removeMoveFunction(f) {\r\n        this.onMove.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onDown.add(f);\r\n     */\r\n    addDownFunction(f) {\r\n        this.onDown.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onDown.remove(f);\r\n     */\r\n    removeDownFunction(f) {\r\n        this.onDown.remove(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onUp.add(f);\r\n     */\r\n    addUpFunction(f) {\r\n        this.onUp.add(f);\r\n    }\r\n    /**\r\n     * @deprecated Use the emitter instead.\r\n     *\r\n     * @example\r\n     *    component.onUp.remove(f);\r\n     */\r\n    removeUpFunction(f) {\r\n        this.onUp.remove(f);\r\n    }\r\n}\r\nexport { CursorTarget };\r\n", "/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\r\n\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\nvar degree = Math.PI / 180;\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\n\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\n\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}\r\nif (!Math.hypot) Math.hypot = function () {\r\n  var y = 0,\r\n      i = arguments.length;\r\n\r\n  while (i--) {\r\n    y += arguments[i] * arguments[i];\r\n  }\r\n\r\n  return Math.sqrt(y);\r\n};", "import * as glMatrix from \"./common.js\";\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\n\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\n\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\n\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\r\n\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n\r\n  det = 1.0 / det;\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\n\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n}\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\n\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\n\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n  return out;\r\n}\r\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\r\n\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n\r\n  det = 1.0 / det;\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  return out;\r\n}\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\n\r\nexport function str(a) {\r\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\r\n}\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\n\r\nexport function frob(a) {\r\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\r\n}\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\n\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\n\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\n\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\n\r\nexport var mul = multiply;\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\n\r\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\n\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\n\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\n\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\r\n\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n\r\n  det = 1.0 / det;\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\n\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\r\n\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15]; // Cache only the current line of the second matrix\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[4];\r\n  b1 = b[5];\r\n  b2 = b[6];\r\n  b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[8];\r\n  b1 = b[9];\r\n  b2 = b[10];\r\n  b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  b0 = b[12];\r\n  b1 = b[13];\r\n  b2 = b[14];\r\n  b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00, a01, a02, a03;\r\n  var a10, a11, a12, a13;\r\n  var a20, a21, a22, a23;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];\r\n    a01 = a[1];\r\n    a02 = a[2];\r\n    a03 = a[3];\r\n    a10 = a[4];\r\n    a11 = a[5];\r\n    a12 = a[6];\r\n    a13 = a[7];\r\n    a20 = a[8];\r\n    a21 = a[9];\r\n    a22 = a[10];\r\n    a23 = a[11];\r\n    out[0] = a00;\r\n    out[1] = a01;\r\n    out[2] = a02;\r\n    out[3] = a03;\r\n    out[4] = a10;\r\n    out[5] = a11;\r\n    out[6] = a12;\r\n    out[7] = a13;\r\n    out[8] = a20;\r\n    out[9] = a21;\r\n    out[10] = a22;\r\n    out[11] = a23;\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\n\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.hypot(x, y, z);\r\n  var s, c, t;\r\n  var a00, a01, a02, a03;\r\n  var a10, a11, a12, a13;\r\n  var a20, a21, a22, a23;\r\n  var b00, b01, b02;\r\n  var b10, b11, b12;\r\n  var b20, b21, b22;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n  a00 = a[0];\r\n  a01 = a[1];\r\n  a02 = a[2];\r\n  a03 = a[3];\r\n  a10 = a[4];\r\n  a11 = a[5];\r\n  a12 = a[6];\r\n  a13 = a[7];\r\n  a20 = a[8];\r\n  a21 = a[9];\r\n  a22 = a[10];\r\n  a23 = a[11]; // Construct the elements of the rotation matrix\r\n\r\n  b00 = x * x * t + c;\r\n  b01 = y * x * t + z * s;\r\n  b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;\r\n  b11 = y * y * t + c;\r\n  b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;\r\n  b21 = y * z * t - x * s;\r\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\r\n\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  } // Perform axis-specific matrix multiplication\r\n\r\n\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  } // Perform axis-specific matrix multiplication\r\n\r\n\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  } // Perform axis-specific matrix multiplication\r\n\r\n\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.hypot(x, y, z);\r\n  var s, c, t;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c; // Perform rotation-specific matrix multiplication\r\n\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\r\n\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\r\n\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\n\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\r\n\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\n\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n  return out;\r\n}\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\n\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n  out[0] = Math.hypot(m11, m12, m13);\r\n  out[1] = Math.hypot(m21, m22, m23);\r\n  out[2] = Math.hypot(m31, m32, m33);\r\n  return out;\r\n}\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\n\r\nexport function getRotation(out, mat) {\r\n  var scaling = new glMatrix.ARRAY_TYPE(3);\r\n  getScaling(scaling, mat);\r\n  var is1 = 1 / scaling[0];\r\n  var is2 = 1 / scaling[1];\r\n  var is3 = 1 / scaling[2];\r\n  var sm11 = mat[0] * is1;\r\n  var sm12 = mat[1] * is2;\r\n  var sm13 = mat[2] * is3;\r\n  var sm21 = mat[4] * is1;\r\n  var sm22 = mat[5] * is2;\r\n  var sm23 = mat[6] * is3;\r\n  var sm31 = mat[8] * is1;\r\n  var sm32 = mat[9] * is2;\r\n  var sm33 = mat[10] * is3;\r\n  var trace = sm11 + sm22 + sm33;\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (sm23 - sm32) / S;\r\n    out[1] = (sm31 - sm13) / S;\r\n    out[2] = (sm12 - sm21) / S;\r\n  } else if (sm11 > sm22 && sm11 > sm33) {\r\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\r\n    out[3] = (sm23 - sm32) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (sm12 + sm21) / S;\r\n    out[2] = (sm31 + sm13) / S;\r\n  } else if (sm22 > sm33) {\r\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\r\n    out[3] = (sm31 - sm13) / S;\r\n    out[0] = (sm12 + sm21) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (sm23 + sm32) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\r\n    out[3] = (sm12 - sm21) / S;\r\n    out[0] = (sm31 + sm13) / S;\r\n    out[1] = (sm23 + sm32) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\r\n * which matches WebGL/OpenGL's clip volume.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function perspectiveNO(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Alias for {@link mat4.perspectiveNO}\r\n * @function\r\n */\r\n\r\nexport var perspective = perspectiveNO;\r\n/**\r\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\r\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function perspectiveZO(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = far * nf;\r\n    out[14] = far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -near;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\r\n * which matches WebGL/OpenGL's clip volume.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function orthoNO(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Alias for {@link mat4.orthoNO}\r\n * @function\r\n */\r\n\r\nexport var ortho = orthoNO;\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\r\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function orthoZO(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = near * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n  len = 1 / Math.hypot(z0, z1, z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.hypot(x0, x1, x2);\r\n\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n  len = Math.hypot(y0, y1, y2);\r\n\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\n\r\nexport function str(a) {\r\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\r\n}\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\n\r\nexport function frob(a) {\r\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\r\n}\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\n\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\n\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\n\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\n\r\nexport var mul = multiply;\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\n\r\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\n\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\n\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\n\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\n\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n\r\n  return rad;\r\n}\r\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\r\n\r\nexport function getAngle(a, b) {\r\n  var dotproduct = dot(a, b);\r\n  return Math.acos(2 * dotproduct * dotproduct - 1);\r\n}\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\r\n\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\n\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\n\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\n\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\n\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\r\n\r\nexport function exp(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  var r = Math.sqrt(x * x + y * y + z * z);\r\n  var et = Math.exp(w);\r\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\r\n  out[0] = x * s;\r\n  out[1] = y * s;\r\n  out[2] = z * s;\r\n  out[3] = et * Math.cos(r);\r\n  return out;\r\n}\r\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\r\n\r\nexport function ln(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  var r = Math.sqrt(x * x + y * y + z * z);\r\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\r\n  out[0] = x * t;\r\n  out[1] = y * t;\r\n  out[2] = z * t;\r\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\r\n  return out;\r\n}\r\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\r\n\r\nexport function pow(out, a, b) {\r\n  ln(out, a);\r\n  scale(out, out, b);\r\n  exp(out, out);\r\n  return out;\r\n}\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\n\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\r\n\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\r\n\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  } // calculate coefficients\r\n\r\n\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  } // calculate final values\r\n\r\n\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n  return out;\r\n}\r\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\n\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\n\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\n\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\n\r\nexport function str(a) {\r\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\r\n}\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\n\r\nexport var clone = vec4.clone;\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\n\r\nexport var fromValues = vec4.fromValues;\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nexport var copy = vec4.copy;\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nexport var set = vec4.set;\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nexport var add = vec4.add;\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\n\r\nexport var mul = multiply;\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nexport var scale = vec4.scale;\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\n\r\nexport var dot = vec4.dot;\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nexport var lerp = vec4.lerp;\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\n\r\nexport var length = vec4.length;\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\n\r\nexport var len = length;\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\n\r\nexport var squaredLength = vec4.squaredLength;\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\n\r\nexport var sqrLen = squaredLength;\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\n\r\nexport var normalize = vec4.normalize;\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nexport var exactEquals = vec4.exactEquals;\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nexport var equals = vec4.equals;\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\n\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\n\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n    return out;\r\n  };\r\n}();\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\n\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();", "import * as glMatrix from \"./common.js\";\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\n\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\n\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\n\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.hypot(x, y, z);\r\n}\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\n\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\n\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.hypot(x, y, z);\r\n}\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\n\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\n\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n  }\r\n\r\n  out[0] = a[0] * len;\r\n  out[1] = a[1] * len;\r\n  out[2] = a[2] * len;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\n\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n  return out;\r\n}\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n  return out;\r\n}\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2]; // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\r\n\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\r\n\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\r\n\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function rotateX(out, a, b, rad) {\r\n  var p = [],\r\n      r = []; //Translate point to the origin\r\n\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2]; //perform rotation\r\n\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\r\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\r\n\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function rotateY(out, a, b, rad) {\r\n  var p = [],\r\n      r = []; //Translate point to the origin\r\n\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2]; //perform rotation\r\n\r\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\r\n\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function rotateZ(out, a, b, rad) {\r\n  var p = [],\r\n      r = []; //Translate point to the origin\r\n\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2]; //perform rotation\r\n\r\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\r\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\r\n  r[2] = p[2]; //translate to correct position\r\n\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n  return out;\r\n}\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\n\r\nexport function angle(a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\r\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\r\n      mag = mag1 * mag2,\r\n      cosine = mag && dot(a, b) / mag;\r\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\r\n}\r\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\r\n\r\nexport function zero(out) {\r\n  out[0] = 0.0;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\n\r\nexport function str(a) {\r\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\r\n}\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\n\r\nexport var sub = subtract;\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\n\r\nexport var mul = multiply;\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\n\r\nexport var div = divide;\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\n\r\nexport var dist = distance;\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\n\r\nexport var sqrDist = squaredDistance;\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\n\r\nexport var len = length;\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\n\r\nexport var sqrLen = squaredLength;\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\n\r\nexport var forEach = function () {\r\n  var vec = create();\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i, l;\r\n\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];\r\n      vec[1] = a[i + 1];\r\n      vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];\r\n      a[i + 1] = vec[1];\r\n      a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();", "import * as glMatrix from \"./common.js\";\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\n\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\n\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\n\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\n\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.hypot(x, y, z, w);\r\n}\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\n\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\n\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.hypot(x, y, z, w);\r\n}\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\n\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n  }\r\n\r\n  out[0] = x * len;\r\n  out[1] = y * len;\r\n  out[2] = z * len;\r\n  out[3] = w * len;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\n\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\r\n\r\nexport function cross(out, u, v, w) {\r\n  var A = v[0] * w[1] - v[1] * w[0],\r\n      B = v[0] * w[2] - v[2] * w[0],\r\n      C = v[0] * w[3] - v[3] * w[0],\r\n      D = v[1] * w[2] - v[2] * w[1],\r\n      E = v[1] * w[3] - v[3] * w[1],\r\n      F = v[2] * w[3] - v[3] * w[2];\r\n  var G = u[0];\r\n  var H = u[1];\r\n  var I = u[2];\r\n  var J = u[3];\r\n  out[0] = H * F - I * E + J * D;\r\n  out[1] = -(G * F) + I * C - J * B;\r\n  out[2] = G * E - H * C + J * A;\r\n  out[3] = -(G * D) + H * B - I * A;\r\n  return out;\r\n}\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3]; // calculate quat * vec\r\n\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\r\n\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\r\n\r\nexport function zero(out) {\r\n  out[0] = 0.0;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\n\r\nexport function str(a) {\r\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\r\n}\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\n\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\n\r\nexport var sub = subtract;\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\n\r\nexport var mul = multiply;\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\n\r\nexport var div = divide;\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\n\r\nexport var dist = distance;\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\n\r\nexport var sqrDist = squaredDistance;\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\n\r\nexport var len = length;\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\n\r\nexport var sqrLen = squaredLength;\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\n\r\nexport var forEach = function () {\r\n  var vec = create();\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i, l;\r\n\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];\r\n      vec[1] = a[i + 1];\r\n      vec[2] = a[i + 2];\r\n      vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];\r\n      a[i + 1] = vec[1];\r\n      a[i + 2] = vec[2];\r\n      a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();", "import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\n\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\n\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\n\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\n\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q a normalized quaternion\r\n * @param {ReadonlyVec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\n\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyVec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\n\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\r\n * @param {ReadonlyQuat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\n\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {ReadonlyMat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\n\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\n\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\n\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\n\r\nexport var getReal = quat.copy;\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {ReadonlyQuat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\n\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\n\r\nexport var setReal = quat.copy;\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\n\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\n\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat} q quaternion to rotate by\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n\r\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\n\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\n\r\nexport var mul = multiply;\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\n\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\n\r\nexport var dot = quat.dot;\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {ReadonlyQuat2} a the first operand\r\n * @param {ReadonlyQuat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\n\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\n\r\nexport var length = quat.length;\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\n\r\nexport var len = length;\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\n\r\nexport var squaredLength = quat.squaredLength;\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\n\r\nexport var sqrLen = squaredLength;\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {ReadonlyQuat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\n\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n\r\n  return out;\r\n}\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\n\r\nexport function str(a) {\r\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\r\n}\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quaternion.\r\n * @param {ReadonlyQuat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\n\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat2} a the first dual quat.\r\n * @param {ReadonlyQuat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\n\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, Emitter } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { setXRRigidTransformLocal } from './utils/webxr.js';\r\n/**\r\n * Sets up a [WebXR Device API \"Hit Test\"](https://immersive-web.github.io/hit-test/)\r\n * and places the object to the hit location.\r\n *\r\n * **Requirements:**\r\n *  - Specify `'hit-test'` in the required or optional features on the AR button in your html file.\r\n *    See [Wastepaperbin AR](/showcase/wpb-ar) as an example.\r\n */\r\nclass HitTestLocation extends Component {\r\n    static TypeName = 'hit-test-location';\r\n    tempScaling = new Float32Array(3);\r\n    visible = false;\r\n    xrHitTestSource = null;\r\n    /** Reference space for creating the hit test when the session starts */\r\n    xrReferenceSpace = null;\r\n    /**\r\n     * For maintaining backwards compatibility: Whether to scale the object to 0 and back.\r\n     * @deprecated Use onHitLost and onHitFound instead.\r\n     */\r\n    scaleObject = true;\r\n    /** Emits an event when the hit test switches from visible to invisible */\r\n    onHitLost = new Emitter();\r\n    /** Emits an event when the hit test switches from invisible to visible */\r\n    onHitFound = new Emitter();\r\n    onSessionStartCallback = null;\r\n    onSessionEndCallback = null;\r\n    start() {\r\n        this.onSessionStartCallback = this.onXRSessionStart.bind(this);\r\n        this.onSessionEndCallback = this.onXRSessionEnd.bind(this);\r\n        if (this.scaleObject) {\r\n            this.tempScaling.set(this.object.scalingLocal);\r\n            this.object.scale([0, 0, 0]);\r\n            this.onHitLost.add(() => {\r\n                this.tempScaling.set(this.object.scalingLocal);\r\n                this.object.scale([0, 0, 0]);\r\n            });\r\n            this.onHitFound.add(() => {\r\n                this.object.scalingLocal.set(this.tempScaling);\r\n                this.object.setDirty();\r\n            });\r\n        }\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.add(this.onSessionEndCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.remove(this.onSessionEndCallback);\r\n    }\r\n    update() {\r\n        const wasVisible = this.visible;\r\n        if (this.xrHitTestSource) {\r\n            const frame = this.engine.xrFrame;\r\n            if (!frame)\r\n                return;\r\n            let hitTestResults = frame.getHitTestResults(this.xrHitTestSource);\r\n            if (hitTestResults.length > 0) {\r\n                let pose = hitTestResults[0].getPose(this.engine.xr.currentReferenceSpace);\r\n                this.visible = !!pose;\r\n                if (pose) {\r\n                    setXRRigidTransformLocal(this.object, pose.transform);\r\n                }\r\n            }\r\n            else {\r\n                this.visible = false;\r\n            }\r\n        }\r\n        /* Emit events for visible state change */\r\n        if (this.visible != wasVisible) {\r\n            (this.visible ? this.onHitFound : this.onHitLost).notify(this);\r\n        }\r\n    }\r\n    getHitTestResults(frame = this.engine.xr?.frame ?? null) {\r\n        if (!frame)\r\n            return [];\r\n        /* May happen if the hit test source couldn't be created */\r\n        if (!this.xrHitTestSource)\r\n            return [];\r\n        return frame.getHitTestResults(this.xrHitTestSource);\r\n    }\r\n    onXRSessionStart(session) {\r\n        if (session.requestHitTestSource === undefined) {\r\n            console.error('hit-test-location: hit test feature not available. Deactivating component.');\r\n            this.active = false;\r\n            return;\r\n        }\r\n        session\r\n            .requestHitTestSource({\r\n            space: this.xrReferenceSpace ??\r\n                this.engine.xr.referenceSpaceForType('viewer'),\r\n        })\r\n            .then((hitTestSource) => {\r\n            this.xrHitTestSource = hitTestSource;\r\n        })\r\n            .catch(console.error);\r\n    }\r\n    onXRSessionEnd() {\r\n        if (!this.xrHitTestSource)\r\n            return;\r\n        this.xrHitTestSource.cancel();\r\n        this.xrHitTestSource = null;\r\n    }\r\n}\r\n__decorate([\r\n    property.bool(true)\r\n], HitTestLocation.prototype, \"scaleObject\", void 0);\r\nexport { HitTestLocation };\r\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, ViewComponent, Emitter, } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { vec3, mat4 } from 'gl-matrix';\r\nimport { CursorTarget } from './cursor-target.js';\r\nimport { HitTestLocation } from './hit-test-location.js';\r\nconst tempVec = new Float32Array(3);\r\nconst ZERO = [0, 0, 0];\r\n/** Global target for {@link Cursor} */\r\nclass CursorTargetEmitters {\r\n    /** Emitter for events when the target is hovered */\r\n    onHover = new Emitter();\r\n    /** Emitter for events when the target is unhovered */\r\n    onUnhover = new Emitter();\r\n    /** Emitter for events when the target is clicked */\r\n    onClick = new Emitter();\r\n    /** Emitter for events when the cursor moves on the target */\r\n    onMove = new Emitter();\r\n    /** Emitter for events when the user pressed the select button on the target */\r\n    onDown = new Emitter();\r\n    /** Emitter for events when the user unpressed the select button on the target */\r\n    onUp = new Emitter();\r\n}\r\n/**\r\n * 3D cursor for desktop/mobile/VR.\r\n *\r\n * Implements a ray-casting cursor into the scene. To react to\r\n * clicking/hover/unhover/cursor down/cursor up/move use a\r\n * [cursor-target](#cursor-target).\r\n *\r\n * For VR, the ray is cast in direction of\r\n * [this.object.getForward()](/jsapi/object/#getforward). For desktop and mobile, the\r\n * forward vector is inverse-projected to account for where on screen the user clicked.\r\n *\r\n * `.globalTarget` can be used to call callbacks for all objects, even those that\r\n * do not have a cursor target attached, but match the collision group.\r\n *\r\n * `.hitTestTarget` can be used to call callbacks WebXR hit test results,\r\n *\r\n * See [Animation Example](/showcase/animation).\r\n */\r\nclass Cursor extends Component {\r\n    static TypeName = 'cursor';\r\n    /* Dependencies is deprecated, but we keep it here for compatibility\r\n     * with 1.0.0-rc2 until 1.0.0 is released */\r\n    static Dependencies = [HitTestLocation];\r\n    static onRegister(engine) {\r\n        engine.registerComponent(HitTestLocation);\r\n    }\r\n    _collisionMask = 0;\r\n    _onDeactivateCallbacks = [];\r\n    _input = null;\r\n    _origin = new Float32Array(3);\r\n    _cursorObjScale = new Float32Array(3);\r\n    _direction = new Float32Array(3);\r\n    _projectionMatrix = new Float32Array(16);\r\n    _viewComponent = null;\r\n    _isDown = false;\r\n    _lastIsDown = false;\r\n    _arTouchDown = false;\r\n    _lastPointerPos = new Float32Array(2);\r\n    _lastCursorPosOnTarget = new Float32Array(3);\r\n    _hitTestLocation = null;\r\n    _hitTestObject = null;\r\n    _onSessionStartCallback = null;\r\n    /**\r\n     * Whether the cursor (and cursorObject) is visible, i.e. pointing at an object\r\n     * that matches the collision group\r\n     */\r\n    visible = true;\r\n    /** Currently hovered object */\r\n    hoveringObject = null;\r\n    /** CursorTarget component of the currently hovered object */\r\n    hoveringObjectTarget = null;\r\n    /** Whether the cursor is hovering reality via hit-test */\r\n    hoveringReality = false;\r\n    /**\r\n     * Global target lets you receive global cursor events on any object.\r\n     */\r\n    globalTarget = new CursorTargetEmitters();\r\n    /**\r\n     * Hit test target lets you receive cursor events for \"reality\", if\r\n     * `useWebXRHitTest` is set to `true`.\r\n     *\r\n     * @example\r\n     * ```js\r\n     * cursor.hitTestTarget.onClick.add((hit, cursor) => {\r\n     *     // User clicked on reality\r\n     * });\r\n     * ```\r\n     */\r\n    hitTestTarget = new CursorTargetEmitters();\r\n    /** World position of the cursor */\r\n    cursorPos = new Float32Array(3);\r\n    /** Collision group for the ray cast. Only objects in this group will be affected by this cursor. */\r\n    collisionGroup = 1;\r\n    /** (optional) Object that visualizes the cursor's ray. */\r\n    cursorRayObject = null;\r\n    /** Axis along which to scale the `cursorRayObject`. */\r\n    cursorRayScalingAxis = 2;\r\n    /** (optional) Object that visualizes the cursor's hit location. */\r\n    cursorObject = null;\r\n    /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n    handedness = 0;\r\n    /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n    rayCastMode = 0;\r\n    /** Maximum distance for the cursor's ray cast. */\r\n    maxDistance = 100;\r\n    /** Whether to set the CSS style of the mouse cursor on desktop */\r\n    styleCursor = true;\r\n    /**\r\n     * Use WebXR hit-test if available.\r\n     *\r\n     * Attaches a hit-test-location component to the cursorObject, which will be used\r\n     * by the cursor to send events to the hitTestTarget with HitTestResult.\r\n     */\r\n    useWebXRHitTest = false;\r\n    _onViewportResize = () => {\r\n        if (!this._viewComponent)\r\n            return;\r\n        /* Projection matrix will change if the viewport is resized, which will affect the\r\n         * projection matrix because of the aspect ratio. */\r\n        mat4.invert(this._projectionMatrix, this._viewComponent.projectionMatrix);\r\n    };\r\n    start() {\r\n        this._collisionMask = 1 << this.collisionGroup;\r\n        if (this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if (!inputComp) {\r\n                console.warn('cursor component on object', this.object.name, 'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            }\r\n            else {\r\n                this.handedness = inputComp.handedness || 'none';\r\n                this._input = inputComp;\r\n            }\r\n        }\r\n        else {\r\n            this.handedness = ['left', 'right', 'none'][this.handedness - 1];\r\n        }\r\n        this._viewComponent = this.object.getComponent(ViewComponent);\r\n        if (this.useWebXRHitTest) {\r\n            this._hitTestObject = this.engine.scene.addObject(this.object);\r\n            this._hitTestLocation =\r\n                this._hitTestObject.addComponent(HitTestLocation, {\r\n                    scaleObject: false,\r\n                }) ?? null;\r\n        }\r\n        this._onSessionStartCallback = this.setupVREvents.bind(this);\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this._onSessionStartCallback);\r\n        this.engine.onResize.add(this._onViewportResize);\r\n        this._setCursorVisibility(true);\r\n        /* If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n         * otherwise just use the objects transformation */\r\n        if (this._viewComponent != null) {\r\n            const canvas = this.engine.canvas;\r\n            const onClick = this.onClick.bind(this);\r\n            const onPointerMove = this.onPointerMove.bind(this);\r\n            const onPointerDown = this.onPointerDown.bind(this);\r\n            const onPointerUp = this.onPointerUp.bind(this);\r\n            canvas.addEventListener('click', onClick);\r\n            canvas.addEventListener('pointermove', onPointerMove);\r\n            canvas.addEventListener('pointerdown', onPointerDown);\r\n            canvas.addEventListener('pointerup', onPointerUp);\r\n            this._onDeactivateCallbacks.push(() => {\r\n                canvas.removeEventListener('click', onClick);\r\n                canvas.removeEventListener('pointermove', onPointerMove);\r\n                canvas.removeEventListener('pointerdown', onPointerDown);\r\n                canvas.removeEventListener('pointerup', onPointerUp);\r\n            });\r\n        }\r\n        this._onViewportResize();\r\n    }\r\n    _setCursorRayTransform(hitPosition) {\r\n        if (!this.cursorRayObject)\r\n            return;\r\n        const dist = vec3.dist(this._origin, hitPosition);\r\n        this.cursorRayObject.setPositionLocal([0.0, 0.0, -dist / 2]);\r\n        if (this.cursorRayScalingAxis != 4) {\r\n            /* Scale only the requested axis, relative to the original scaling */\r\n            tempVec.fill(1);\r\n            tempVec[this.cursorRayScalingAxis] = dist / 2;\r\n            this.cursorRayObject.setScalingLocal(tempVec);\r\n        }\r\n    }\r\n    _setCursorVisibility(visible) {\r\n        if (this.visible == visible)\r\n            return;\r\n        this.visible = visible;\r\n        if (!this.cursorObject)\r\n            return;\r\n        if (visible) {\r\n            this.cursorObject.setScalingWorld(this._cursorObjScale);\r\n        }\r\n        else {\r\n            this.cursorObject.getScalingWorld(this._cursorObjScale);\r\n            this.cursorObject.scaleLocal([0, 0, 0]);\r\n        }\r\n    }\r\n    update() {\r\n        /* If in VR, set the cursor ray based on object transform */\r\n        /* Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence */\r\n        if (this.engine.xr &&\r\n            this._arTouchDown &&\r\n            this._input &&\r\n            this.engine.xr.session.inputSources[0].handedness === 'none' &&\r\n            this.engine.xr.session.inputSources[0].gamepad) {\r\n            /* WebXR AR input */\r\n            const p = this.engine.xr.session.inputSources[0].gamepad.axes;\r\n            /* Screenspace Y is inverted */\r\n            this._direction[0] = p[0];\r\n            this._direction[1] = -p[1];\r\n            this._direction[2] = -1.0;\r\n            this.applyTransformAndProjectDirection();\r\n        }\r\n        else if (this.engine.xr && this._input && this._input.xrInputSource) {\r\n            /* WebXR VR input */\r\n            this._direction[0] = 0;\r\n            this._direction[1] = 0;\r\n            this._direction[2] = -1.0;\r\n            this.applyTransformToDirection();\r\n        }\r\n        else if (this._viewComponent) {\r\n            /* Apply potentially changed transform to last stored pointer\r\n             * position */\r\n            this.updateDirection();\r\n        }\r\n        this.rayCast(null, this.engine.xr?.frame);\r\n        if (this.cursorObject) {\r\n            if (this.hoveringObject &&\r\n                (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)) {\r\n                this._setCursorVisibility(true);\r\n                this.cursorObject.setPositionWorld(this.cursorPos);\r\n                this._setCursorRayTransform(this.cursorPos);\r\n            }\r\n            else {\r\n                this._setCursorVisibility(false);\r\n            }\r\n        }\r\n    }\r\n    /* Returns the hovered cursor target, if available */\r\n    notify(event, originalEvent) {\r\n        const target = this.hoveringObject;\r\n        if (target) {\r\n            const cursorTarget = this.hoveringObjectTarget;\r\n            if (cursorTarget)\r\n                cursorTarget[event].notify(target, this, originalEvent ?? undefined);\r\n            this.globalTarget[event].notify(target, this, originalEvent ?? undefined);\r\n        }\r\n    }\r\n    hoverBehaviour(rayHit, hitTestResult, doClick, originalEvent) {\r\n        /* Old API version does not return null for objects[0] if no hit */\r\n        const hit = !this.hoveringReality && rayHit.hitCount > 0 ? rayHit.objects[0] : null;\r\n        if (hit) {\r\n            if (!this.hoveringObject || !this.hoveringObject.equals(hit)) {\r\n                /* Unhover previous, if exists */\r\n                if (this.hoveringObject) {\r\n                    this.notify('onUnhover', originalEvent);\r\n                }\r\n                /* Hover new object */\r\n                this.hoveringObject = hit;\r\n                this.hoveringObjectTarget = this.hoveringObject.getComponent(CursorTarget);\r\n                if (this.styleCursor)\r\n                    this.engine.canvas.style.cursor = 'pointer';\r\n                this.notify('onHover', originalEvent);\r\n            }\r\n        }\r\n        else if (this.hoveringObject) {\r\n            /* Previously hovering object, now hovering nothing */\r\n            this.notify('onUnhover', originalEvent);\r\n            this.hoveringObject = null;\r\n            this.hoveringObjectTarget = null;\r\n            if (this.styleCursor)\r\n                this.engine.canvas.style.cursor = 'default';\r\n        }\r\n        if (this.hoveringObject) {\r\n            /* onDown/onUp for object */\r\n            if (this._isDown !== this._lastIsDown) {\r\n                this.notify(this._isDown ? 'onDown' : 'onUp', originalEvent);\r\n            }\r\n            /* onClick for object */\r\n            if (doClick)\r\n                this.notify('onClick', originalEvent);\r\n        }\r\n        else if (this.hoveringReality) {\r\n            /* onDown/onUp for hit test */\r\n            if (this._isDown !== this._lastIsDown) {\r\n                (this._isDown ? this.hitTestTarget.onDown : this.hitTestTarget.onUp).notify(hitTestResult, this, originalEvent ?? undefined);\r\n            }\r\n            /* onClick for hit test */\r\n            if (doClick)\r\n                this.hitTestTarget.onClick.notify(hitTestResult, this, originalEvent ?? undefined);\r\n        }\r\n        /* onMove */\r\n        if (hit) {\r\n            if (this.hoveringObject) {\r\n                this.hoveringObject.transformPointInverseWorld(tempVec, this.cursorPos);\r\n            }\r\n            else {\r\n                tempVec.set(this.cursorPos);\r\n            }\r\n            if (!vec3.equals(this._lastCursorPosOnTarget, tempVec)) {\r\n                this.notify('onMove', originalEvent);\r\n                this._lastCursorPosOnTarget.set(tempVec);\r\n            }\r\n        }\r\n        else if (this.hoveringReality) {\r\n            if (!vec3.equals(this._lastCursorPosOnTarget, this.cursorPos)) {\r\n                this.hitTestTarget.onMove.notify(hitTestResult, this, originalEvent ?? undefined);\r\n                this._lastCursorPosOnTarget.set(this.cursorPos);\r\n            }\r\n        }\r\n        else {\r\n            this._lastCursorPosOnTarget.set(this.cursorPos);\r\n        }\r\n        this._lastIsDown = this._isDown;\r\n    }\r\n    /**\r\n     * Setup event listeners on session object\r\n     * @param s WebXR session\r\n     *\r\n     * Sets up 'select' and 'end' events.\r\n     */\r\n    setupVREvents(s) {\r\n        if (!s)\r\n            console.error('setupVREvents called without a valid session');\r\n        /* Because we remove the callback in .active and another component might\r\n         * deactivate the cursor during onXRSessionStart, we make sure the cursor\r\n         * really is active when we run this */\r\n        if (!this.active)\r\n            return;\r\n        /* If in VR, one-time bind the listener */\r\n        const onSelect = this.onSelect.bind(this);\r\n        s.addEventListener('select', onSelect);\r\n        const onSelectStart = this.onSelectStart.bind(this);\r\n        s.addEventListener('selectstart', onSelectStart);\r\n        const onSelectEnd = this.onSelectEnd.bind(this);\r\n        s.addEventListener('selectend', onSelectEnd);\r\n        this._onDeactivateCallbacks.push(() => {\r\n            if (!this.engine.xr)\r\n                return;\r\n            s.removeEventListener('select', onSelect);\r\n            s.removeEventListener('selectstart', onSelectStart);\r\n            s.removeEventListener('selectend', onSelectEnd);\r\n        });\r\n        /* After AR session was entered, the projection matrix changed */\r\n        this._onViewportResize();\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this._onSessionStartCallback);\r\n        this.engine.onResize.remove(this._onViewportResize);\r\n        this._setCursorVisibility(false);\r\n        if (this.hoveringObject)\r\n            this.notify('onUnhover', null);\r\n        if (this.cursorRayObject)\r\n            this.cursorRayObject.setScalingLocal(ZERO);\r\n        /* Ensure all event listeners are removed */\r\n        for (const f of this._onDeactivateCallbacks)\r\n            f();\r\n        this._onDeactivateCallbacks.length = 0;\r\n    }\r\n    onDestroy() {\r\n        this._hitTestObject?.destroy();\r\n    }\r\n    /** 'select' event listener */\r\n    onSelect(e) {\r\n        if (e.inputSource.handedness != this.handedness)\r\n            return;\r\n        this.rayCast(e, e.frame, true);\r\n    }\r\n    /** 'selectstart' event listener */\r\n    onSelectStart(e) {\r\n        this._arTouchDown = true;\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this._isDown = true;\r\n            this.rayCast(e, e.frame);\r\n        }\r\n    }\r\n    /** 'selectend' event listener */\r\n    onSelectEnd(e) {\r\n        this._arTouchDown = false;\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this._isDown = false;\r\n            this.rayCast(e, e.frame);\r\n        }\r\n    }\r\n    /** 'pointermove' event listener */\r\n    onPointerMove(e) {\r\n        /* Don't care about secondary pointers */\r\n        if (!e.isPrimary)\r\n            return;\r\n        this.updateMousePos(e);\r\n        this.rayCast(e, null);\r\n    }\r\n    /** 'click' event listener */\r\n    onClick(e) {\r\n        this.updateMousePos(e);\r\n        this.rayCast(e, null, true);\r\n    }\r\n    /** 'pointerdown' event listener */\r\n    onPointerDown(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if (!e.isPrimary || e.button !== 0)\r\n            return;\r\n        this.updateMousePos(e);\r\n        this._isDown = true;\r\n        this.rayCast(e);\r\n    }\r\n    /** 'pointerup' event listener */\r\n    onPointerUp(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if (!e.isPrimary || e.button !== 0)\r\n            return;\r\n        this.updateMousePos(e);\r\n        this._isDown = false;\r\n        this.rayCast(e);\r\n    }\r\n    /**\r\n     * Update mouse position in non-VR mode and raycast for new position\r\n     * @returns @ref WL.RayHit for new position.\r\n     */\r\n    updateMousePos(e) {\r\n        this._lastPointerPos[0] = e.clientX;\r\n        this._lastPointerPos[1] = e.clientY;\r\n        this.updateDirection();\r\n    }\r\n    updateDirection() {\r\n        const bounds = this.engine.canvas.getBoundingClientRect();\r\n        /* Get direction in normalized device coordinate space from mouse position */\r\n        const left = this._lastPointerPos[0] / bounds.width;\r\n        const top = this._lastPointerPos[1] / bounds.height;\r\n        this._direction[0] = left * 2 - 1;\r\n        this._direction[1] = -top * 2 + 1;\r\n        this._direction[2] = -1.0;\r\n        this.applyTransformAndProjectDirection();\r\n    }\r\n    applyTransformAndProjectDirection() {\r\n        /* Reverse-project the direction into view space */\r\n        vec3.transformMat4(this._direction, this._direction, this._projectionMatrix);\r\n        vec3.normalize(this._direction, this._direction);\r\n        this.applyTransformToDirection();\r\n    }\r\n    applyTransformToDirection() {\r\n        this.object.transformVectorWorld(this._direction, this._direction);\r\n        this.object.getPositionWorld(this._origin);\r\n    }\r\n    rayCast(originalEvent, frame = null, doClick = false) {\r\n        const rayHit = this.rayCastMode == 0\r\n            ? this.engine.scene.rayCast(this._origin, this._direction, this._collisionMask)\r\n            : this.engine.physics.rayCast(this._origin, this._direction, this._collisionMask, this.maxDistance);\r\n        let hitResultDistance = Infinity;\r\n        let hitTestResult = null;\r\n        if (this._hitTestLocation?.visible) {\r\n            this._hitTestObject.getPositionWorld(this.cursorPos);\r\n            hitResultDistance = vec3.distance(this.object.getPositionWorld(tempVec), this.cursorPos);\r\n            hitTestResult = this._hitTestLocation?.getHitTestResults(frame)[0];\r\n        }\r\n        let hoveringReality = false;\r\n        if (rayHit.hitCount > 0) {\r\n            const d = rayHit.distances[0];\r\n            if (hitResultDistance >= d) {\r\n                /* Override cursorPos set by hit test location */\r\n                this.cursorPos.set(rayHit.locations[0]);\r\n            }\r\n            else {\r\n                hoveringReality = true;\r\n            }\r\n        }\r\n        else if (hitResultDistance < Infinity) {\r\n            /* cursorPos already set */\r\n        }\r\n        else {\r\n            this.cursorPos.fill(0);\r\n        }\r\n        if (hoveringReality && !this.hoveringReality) {\r\n            this.hitTestTarget.onHover.notify(hitTestResult, this);\r\n        }\r\n        else if (!hoveringReality && this.hoveringReality) {\r\n            this.hitTestTarget.onUnhover.notify(hitTestResult, this);\r\n        }\r\n        this.hoveringReality = hoveringReality;\r\n        this.hoverBehaviour(rayHit, hitTestResult, doClick, originalEvent);\r\n        return rayHit;\r\n    }\r\n}\r\n__decorate([\r\n    property.int(1)\r\n], Cursor.prototype, \"collisionGroup\", void 0);\r\n__decorate([\r\n    property.object()\r\n], Cursor.prototype, \"cursorRayObject\", void 0);\r\n__decorate([\r\n    property.enum(['x', 'y', 'z', 'none'], 'z')\r\n], Cursor.prototype, \"cursorRayScalingAxis\", void 0);\r\n__decorate([\r\n    property.object()\r\n], Cursor.prototype, \"cursorObject\", void 0);\r\n__decorate([\r\n    property.enum(['input component', 'left', 'right', 'none'], 'input component')\r\n], Cursor.prototype, \"handedness\", void 0);\r\n__decorate([\r\n    property.enum(['collision', 'physx'], 'collision')\r\n], Cursor.prototype, \"rayCastMode\", void 0);\r\n__decorate([\r\n    property.float(100)\r\n], Cursor.prototype, \"maxDistance\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], Cursor.prototype, \"styleCursor\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], Cursor.prototype, \"useWebXRHitTest\", void 0);\r\nexport { Cursor };\r\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { quat2 } from 'gl-matrix';\r\n/**\r\n * Prints some limited debug information about the object.\r\n *\r\n * Information consists of: This object's name, an object parameter's name,\r\n * the object's world translation, world transform and local transform.\r\n *\r\n * Mainly used by engine developers for debug purposes or as example code.\r\n */\r\nclass DebugObject extends Component {\r\n    static TypeName = 'debug-object';\r\n    /** A second object to print the name of */\r\n    obj = null;\r\n    start() {\r\n        let origin = new Float32Array(3);\r\n        quat2.getTranslation(origin, this.object.transformWorld);\r\n        console.log('Debug object:', this.object.name);\r\n        console.log('Other object:', this.obj?.name);\r\n        console.log('\\ttranslation', origin);\r\n        console.log('\\ttransformWorld', this.object.transformWorld);\r\n        console.log('\\ttransformLocal', this.object.transformLocal);\r\n    }\r\n}\r\n__decorate([\r\n    property.object()\r\n], DebugObject.prototype, \"obj\", void 0);\r\nexport { DebugObject };\r\n", "import { Component } from '@wonderlandengine/api';\r\n/**\r\n * Enables interaction with cursor-targets through collision overlaps,\r\n * e.g. on the tip of a finger on a tracked hand.\r\n *\r\n * **Requirements:**\r\n *  - A collision component (usually a sphere with `0.05` radius) on the same object\r\n *\r\n * @since 0.8.5\r\n */\r\nclass FingerCursor extends Component {\r\n    static TypeName = 'finger-cursor';\r\n    static Properties = {};\r\n    init() {\r\n        this.lastTarget = null;\r\n    }\r\n    start() {\r\n        this.tip = this.object.getComponent('collision');\r\n    }\r\n    update() {\r\n        const overlaps = this.tip.queryOverlaps();\r\n        let overlapFound = null;\r\n        for (let i = 0; i < overlaps.length; ++i) {\r\n            const o = overlaps[i].object;\r\n            const target = o.getComponent('cursor-target');\r\n            if (target) {\r\n                if (!target.equals(this.lastTarget)) {\r\n                    target.onHover(o, this);\r\n                    target.onClick(o, this);\r\n                }\r\n                overlapFound = target;\r\n                break;\r\n            }\r\n        }\r\n        if (!overlapFound) {\r\n            if (this.lastTarget)\r\n                this.lastTarget.onUnhover(this.lastTarget.object, this);\r\n            this.lastTarget = null;\r\n            return;\r\n        }\r\n        else {\r\n            this.lastTarget = overlapFound;\r\n        }\r\n    }\r\n}\r\nexport { FingerCursor };\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\n/**\r\n * Applies [fixed foveation](https://www.w3.org/TR/webxrlayers-1/#dom-xrcompositionlayer-fixedfoveation)\r\n * once a WebXR session is started\r\n *\r\n * Fixed foveation reduces shading cost at the periphery by rendering at lower resolutions at the\r\n * edges of the users vision.\r\n */\r\nclass FixedFoveation extends Component {\r\n    static TypeName = 'fixed-foveation';\r\n    static Properties = {\r\n        /** Amount to apply from 0 (none) to 1 (full) */\r\n        fixedFoveation: { type: Type.Float, default: 0.5 },\r\n    };\r\n    start() {\r\n        this.onSessionStartCallback = this.setFixedFoveation.bind(this);\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n    }\r\n    setFixedFoveation() {\r\n        this.engine.xr.baseLayer.fixedFoveation = this.fixedFoveation;\r\n    }\r\n}\r\nexport { FixedFoveation };\r\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, MeshComponent, } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { vec3, quat } from 'gl-matrix';\r\nimport { setXRRigidTransformLocal } from './utils/webxr.js';\r\nconst ORDERED_JOINTS = [\r\n    'wrist',\r\n    'thumb-metacarpal',\r\n    'thumb-phalanx-proximal',\r\n    'thumb-phalanx-distal',\r\n    'thumb-tip',\r\n    'index-finger-metacarpal',\r\n    'index-finger-phalanx-proximal',\r\n    'index-finger-phalanx-intermediate',\r\n    'index-finger-phalanx-distal',\r\n    'index-finger-tip',\r\n    'middle-finger-metacarpal',\r\n    'middle-finger-phalanx-proximal',\r\n    'middle-finger-phalanx-intermediate',\r\n    'middle-finger-phalanx-distal',\r\n    'middle-finger-tip',\r\n    'ring-finger-metacarpal',\r\n    'ring-finger-phalanx-proximal',\r\n    'ring-finger-phalanx-intermediate',\r\n    'ring-finger-phalanx-distal',\r\n    'ring-finger-tip',\r\n    'pinky-finger-metacarpal',\r\n    'pinky-finger-phalanx-proximal',\r\n    'pinky-finger-phalanx-intermediate',\r\n    'pinky-finger-phalanx-distal',\r\n    'pinky-finger-tip',\r\n];\r\nconst invTranslation = vec3.create();\r\nconst invRotation = quat.create();\r\nconst tempVec0 = vec3.create();\r\nconst tempVec1 = vec3.create();\r\n/**\r\n * Easy hand tracking through the WebXR Device API\r\n * [\"Hand Input\" API](https://immersive-web.github.io/webxr-hand-input/).\r\n *\r\n * Allows displaying hands either as sphere-joints or skinned mesh.\r\n *\r\n * To react to grabbing, use `this.isGrabbing()`. For other gestures, refer\r\n * to `this.joints` - an array of [WL.Object](/jsapi/object) and use the joint\r\n * indices listed [in the WebXR Hand Input specification](https://immersive-web.github.io/webxr-hand-input/#skeleton-joints-section).\r\n *\r\n * It is often desired to use either hand tracking or controllers, not both.\r\n * This component provides `deactivateChildrenWithoutPose` to hide the hand\r\n * tracking visualization if no pose is available and `controllerToDeactivate`\r\n * for disabling another object once a hand tracking pose *is* available.\r\n * Outside of XR sessions, tracking or controllers are neither enabled nor disabled\r\n * to play well with the [vr-mode-active-switch](#vr-mode-active-switch) component.\r\n *\r\n * **Requirements:**\r\n *  - To use hand-tracking, enable \"joint tracking\" in `chrome://flags` on\r\n *    Oculus Browser for Oculus Quest/Oculus Quest 2.\r\n *\r\n * See [Hand Tracking Example](/showcase/hand-tracking).\r\n */\r\nclass HandTracking extends Component {\r\n    static TypeName = 'hand-tracking';\r\n    /** Handedness determining whether to receive tracking input from right or left hand */\r\n    handedness = 0;\r\n    /** (optional) Mesh to use to visualize joints */\r\n    jointMesh = null;\r\n    /** Material to use for display. Applied to either the spawned skinned mesh or the joint spheres. */\r\n    jointMaterial = null;\r\n    /** (optional) Skin to apply tracked joint poses to. If not present,\r\n     * joint spheres will be used for display instead. */\r\n    handSkin = null;\r\n    /** Deactivate children if no pose was tracked */\r\n    deactivateChildrenWithoutPose = true;\r\n    /** Controller objects to activate including children if no pose is available */\r\n    controllerToDeactivate = null;\r\n    init() {\r\n        this.handedness = ['left', 'right'][this.handedness];\r\n    }\r\n    joints = {};\r\n    session = null;\r\n    /* Whether last update had a hand pose */\r\n    hasPose = false;\r\n    _childrenActive = true;\r\n    start() {\r\n        if (!('XRHand' in window)) {\r\n            console.warn('WebXR Hand Tracking not supported by this browser.');\r\n            this.active = false;\r\n            return;\r\n        }\r\n        if (this.handSkin) {\r\n            const skin = this.handSkin;\r\n            const jointIds = skin.jointIds;\r\n            /* Map the wrist */\r\n            this.joints[ORDERED_JOINTS[0]] = this.engine.wrapObject(jointIds[0]);\r\n            /* Index in ORDERED_JOINTS that we are mapping to our joints */\r\n            /* Skip thumb0 joint, start at thumb1 */\r\n            for (let j = 0; j < jointIds.length; ++j) {\r\n                const joint = this.engine.wrapObject(jointIds[j]);\r\n                /* tip joints are only needed for joint rendering, so we skip those while mapping */\r\n                this.joints[joint.name] = joint;\r\n            }\r\n            /* If we have a hand skin, no need to spawn the joints-based one */\r\n            return;\r\n        }\r\n        /* Spawn joints */\r\n        const jointObjects = this.engine.scene.addObjects(ORDERED_JOINTS.length, this.object, ORDERED_JOINTS.length);\r\n        for (let j = 0; j < ORDERED_JOINTS.length; ++j) {\r\n            const joint = jointObjects[j];\r\n            joint.addComponent(MeshComponent, {\r\n                mesh: this.jointMesh,\r\n                material: this.jointMaterial,\r\n            });\r\n            this.joints[ORDERED_JOINTS[j]] = joint;\r\n            joint.name = ORDERED_JOINTS[j];\r\n        }\r\n    }\r\n    update(dt) {\r\n        if (!this.engine.xr)\r\n            return;\r\n        this.hasPose = false;\r\n        if (this.engine.xr.session.inputSources) {\r\n            for (let i = 0; i < this.engine.xr.session.inputSources.length; ++i) {\r\n                const inputSource = this.engine.xr.session.inputSources[i];\r\n                if (!inputSource?.hand || inputSource?.handedness != this.handedness)\r\n                    continue;\r\n                const wristSpace = inputSource.hand.get('wrist');\r\n                if (wristSpace) {\r\n                    const p = this.engine.xr.frame.getJointPose(wristSpace, this.engine.xr.currentReferenceSpace);\r\n                    if (p) {\r\n                        setXRRigidTransformLocal(this.object, p.transform);\r\n                    }\r\n                }\r\n                this.object.getRotationLocal(invRotation);\r\n                quat.conjugate(invRotation, invRotation);\r\n                this.object.getPositionLocal(invTranslation);\r\n                /* There is a bone 'wrist', but it just sits on the root\r\n                 * object. It could have an initial transform we want to\r\n                 * clear for skinning, though. */\r\n                this.joints['wrist'].resetTransform();\r\n                /* Wrist is already handled, so start at 1 */\r\n                for (let j = 0; j < ORDERED_JOINTS.length; ++j) {\r\n                    const jointName = ORDERED_JOINTS[j];\r\n                    const joint = this.joints[jointName];\r\n                    if (!joint)\r\n                        continue;\r\n                    let jointPose = null;\r\n                    const jointSpace = inputSource.hand.get(jointName);\r\n                    if (jointSpace) {\r\n                        jointPose = this.engine.xr.frame.getJointPose(jointSpace, this.engine.xr.currentReferenceSpace);\r\n                    }\r\n                    if (jointPose) {\r\n                        this.hasPose = true;\r\n                        joint.resetPositionRotation();\r\n                        joint.translateLocal([\r\n                            jointPose.transform.position.x - invTranslation[0],\r\n                            jointPose.transform.position.y - invTranslation[1],\r\n                            jointPose.transform.position.z - invTranslation[2],\r\n                        ]);\r\n                        joint.rotateLocal(invRotation);\r\n                        joint.rotateObject([\r\n                            jointPose.transform.orientation.x,\r\n                            jointPose.transform.orientation.y,\r\n                            jointPose.transform.orientation.z,\r\n                            jointPose.transform.orientation.w,\r\n                        ]);\r\n                        if (!this.handSkin) {\r\n                            /* Last joint radius of each finger is null */\r\n                            const r = jointPose.radius || 0.007;\r\n                            joint.setScalingLocal([r, r, r]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!this.hasPose && this._childrenActive) {\r\n            this._childrenActive = false;\r\n            if (this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(false);\r\n            }\r\n            if (this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = true;\r\n                this.setChildrenActive(true, this.controllerToDeactivate);\r\n            }\r\n        }\r\n        else if (this.hasPose && !this._childrenActive) {\r\n            this._childrenActive = true;\r\n            if (this.deactivateChildrenWithoutPose) {\r\n                this.setChildrenActive(true);\r\n            }\r\n            if (this.controllerToDeactivate) {\r\n                this.controllerToDeactivate.active = false;\r\n                this.setChildrenActive(false, this.controllerToDeactivate);\r\n            }\r\n        }\r\n    }\r\n    setChildrenActive(active, object) {\r\n        object = object || this.object;\r\n        const children = object.children;\r\n        for (const o of children) {\r\n            o.active = active;\r\n            this.setChildrenActive(active, o);\r\n        }\r\n    }\r\n    isGrabbing() {\r\n        this.joints['index-finger-tip'].getPositionLocal(tempVec0);\r\n        this.joints['thumb-tip'].getPositionLocal(tempVec1);\r\n        return vec3.sqrDist(tempVec0, tempVec1) < 0.001;\r\n    }\r\n}\r\n__decorate([\r\n    property.enum(['left', 'right'])\r\n], HandTracking.prototype, \"handedness\", void 0);\r\n__decorate([\r\n    property.mesh()\r\n], HandTracking.prototype, \"jointMesh\", void 0);\r\n__decorate([\r\n    property.material()\r\n], HandTracking.prototype, \"jointMaterial\", void 0);\r\n__decorate([\r\n    property.skin()\r\n], HandTracking.prototype, \"handSkin\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], HandTracking.prototype, \"deactivateChildrenWithoutPose\", void 0);\r\n__decorate([\r\n    property.object()\r\n], HandTracking.prototype, \"controllerToDeactivate\", void 0);\r\nexport { HandTracking };\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\nimport 'howler';\r\n/**\r\n * (Spatial) audio listener based on [Howler.js](https://howlerjs.com/).\r\n *\r\n * Retrieves the location and orientation of the object and passes it\r\n * to [Howler.pos()](https://github.com/goldfire/howler.js#posx-y-z-id)\r\n * and [Howler.orientation()](https://github.com/goldfire/howler.js#orientationx-y-z-id).\r\n */\r\nclass HowlerAudioListener extends Component {\r\n    static TypeName = 'howler-audio-listener';\r\n    static Properties = {\r\n        /** Whether audio should be spatialized/positional. */\r\n        spatial: { type: Type.Bool, default: true },\r\n    };\r\n    init() {\r\n        this.origin = new Float32Array(3);\r\n        this.fwd = new Float32Array(3);\r\n        this.up = new Float32Array(3);\r\n    }\r\n    update() {\r\n        if (!this.spatial)\r\n            return;\r\n        this.object.getTranslationWorld(this.origin);\r\n        this.object.getForward(this.fwd);\r\n        this.object.getUp(this.up);\r\n        Howler.pos(this.origin[0], this.origin[1], this.origin[2]);\r\n        Howler.orientation(this.fwd[0], this.fwd[1], this.fwd[2], this.up[0], this.up[1], this.up[2]);\r\n    }\r\n}\r\nexport { HowlerAudioListener };\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\nimport 'howler';\r\n/**\r\n * (Spatial) audio source based on [Howler.js](https://howlerjs.com/).\r\n *\r\n * Creates a Howler audio source, plays an audio file on it and updates\r\n * its position.\r\n *\r\n * Optimizes the position update to only update if the difference to last\r\n * position is larger than half a centimeter. To force updates (e.g. if\r\n * the sound source is _very_ close to the listener),\r\n * use `.updatePosition()`.\r\n */\r\nclass HowlerAudioSource extends Component {\r\n    static TypeName = 'howler-audio-source';\r\n    static Properties = {\r\n        /** Volume */\r\n        volume: { type: Type.Float, default: 1.0 },\r\n        /** Whether audio should be spatialized/positional */\r\n        spatial: { type: Type.Bool, default: true },\r\n        /** Whether to loop the sound */\r\n        loop: { type: Type.Bool, default: false },\r\n        /** Whether to start playing automatically */\r\n        autoplay: { type: Type.Bool, default: false },\r\n        /** URL to a sound file to play */\r\n        src: { type: Type.String, default: '' },\r\n    };\r\n    start() {\r\n        this.audio = new Howl({\r\n            src: [this.src],\r\n            loop: this.loop,\r\n            volume: this.volume,\r\n            autoplay: this.autoplay,\r\n        });\r\n        this.lastPlayedAudioId = null;\r\n        this.origin = new Float32Array(3);\r\n        this.lastOrigin = new Float32Array(3);\r\n        if (this.spatial && this.autoplay) {\r\n            this.updatePosition();\r\n            this.play();\r\n        }\r\n    }\r\n    update() {\r\n        if (!this.spatial || !this.lastPlayedAudioId)\r\n            return;\r\n        this.object.getTranslationWorld(this.origin);\r\n        /* Only call pos() if the position moved more than half a centimeter\r\n         * otherwise this gets very performance heavy.\r\n         * Smaller movement should only be perceivable if close to the\r\n         * ear anyway. */\r\n        if (Math.abs(this.lastOrigin[0] - this.origin[0]) > 0.005 ||\r\n            Math.abs(this.lastOrigin[1] - this.origin[1]) > 0.005 ||\r\n            Math.abs(this.lastOrigin[2] - this.origin[2]) > 0.005) {\r\n            this.updatePosition();\r\n        }\r\n    }\r\n    updatePosition() {\r\n        this.audio.pos(this.origin[0], this.origin[1], this.origin[2], this.lastPlayedAudioId);\r\n        this.lastOrigin.set(this.origin);\r\n    }\r\n    play() {\r\n        if (this.lastPlayedAudioId)\r\n            this.audio.stop(this.lastPlayedAudioId);\r\n        this.lastPlayedAudioId = this.audio.play();\r\n        if (this.spatial)\r\n            this.updatePosition();\r\n    }\r\n    stop() {\r\n        if (!this.lastPlayedAudioId)\r\n            return;\r\n        this.audio.stop(this.lastPlayedAudioId);\r\n        this.lastPlayedAudioId = null;\r\n    }\r\n    onDeactivate() {\r\n        /* Stop sound when component is deactivated or destroyed, e.g.\r\n         * when switching scenes */\r\n        this.stop();\r\n    }\r\n}\r\nexport { HowlerAudioSource };\r\n", "/**\r\n * Set the diffuse/flat texture of known pipelines.\r\n *\r\n * @param mat Material to set the texture on\r\n * @param texture Texture to set\r\n * @param customTextureProperty Texture property to set or `'auto'` to automatically\r\n *      detect the right texture property based on known pipeline.\r\n * @returns `true` if the property was set, `false` otherwise.\r\n */\r\nexport function setFirstMaterialTexture(mat, texture, customTextureProperty) {\r\n    if (customTextureProperty !== 'auto') {\r\n        // @ts-ignore\r\n        mat[customTextureProperty] = texture;\r\n        return true;\r\n    }\r\n    const shader = mat.shader;\r\n    if (shader === 'Flat Opaque Textured') {\r\n        // @ts-ignore\r\n        mat.flatTexture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'Phong Opaque Textured' ||\r\n        shader === 'Foliage' ||\r\n        shader === 'Phong Normalmapped' ||\r\n        shader === 'Phong Lightmapped') {\r\n        // @ts-ignore\r\n        mat.diffuseTexture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'Particle') {\r\n        // @ts-ignore\r\n        mat.mainTexture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'DistanceFieldVector') {\r\n        // @ts-ignore\r\n        mat.vectorTexture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'Background' || shader === 'Sky') {\r\n        // @ts-ignore\r\n        mat.texture = texture;\r\n        return true;\r\n    }\r\n    else if (shader === 'Physical Opaque Textured') {\r\n        // @ts-ignore\r\n        mat.albedoTexture = texture;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n", "import { Component, Property } from '@wonderlandengine/api';\r\nimport { setFirstMaterialTexture } from './utils/utils.js';\r\n/**\r\n * Downloads an image from URL and applies it as `diffuseTexture` or `flatTexture`\r\n * to an attached mesh component.\r\n *\r\n * Materials from the following shaders are supported:\r\n *  - \"Phong Opaque Textured\"\r\n *  - \"Flat Opaque Textured\"\r\n *  - \"Background\"\r\n *  - \"Physical Opaque Textured\"\r\n *  - \"Foliage\"\r\n */\r\nclass ImageTexture extends Component {\r\n    static TypeName = 'image-texture';\r\n    static Properties = {\r\n        /** URL to download the image from */\r\n        url: Property.string(),\r\n        /** Material to apply the video texture to */\r\n        material: Property.material(),\r\n        /** Name of the texture property to set */\r\n        textureProperty: Property.string('auto'),\r\n    };\r\n    start() {\r\n        if (!this.material) {\r\n            throw Error('image-texture: material property not set');\r\n        }\r\n        this.engine.textures\r\n            .load(this.url, 'anonymous')\r\n            .then((texture) => {\r\n            const mat = this.material;\r\n            if (!setFirstMaterialTexture(mat, texture, this.textureProperty)) {\r\n                console.error('Shader', mat.shader, 'not supported by image-texture');\r\n            }\r\n        })\r\n            .catch(console.err);\r\n    }\r\n}\r\nexport { ImageTexture };\r\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { vec3 } from 'gl-matrix';\r\nconst preventDefault = (e) => { e.preventDefault(); };\r\n/**\r\n * Controls the camera orientation through mouse movement.\r\n *\r\n * Efficiently implemented to affect object orientation only\r\n * when the mouse moves.\r\n */\r\nclass MouseLookComponent extends Component {\r\n    static TypeName = 'mouse-look';\r\n    /** Mouse look sensitivity */\r\n    sensitity = 0.25;\r\n    /** Require a mouse button to be pressed to control view.\r\n     * Otherwise view will allways follow mouse movement */\r\n    requireMouseDown = true;\r\n    /** If \"moveOnClick\" is enabled, mouse button which should\r\n     * be held down to control view */\r\n    mouseButtonIndex = 0;\r\n    /** Enables pointer lock on \"mousedown\" event on canvas */\r\n    pointerLockOnClick = false;\r\n    currentRotationY = 0;\r\n    currentRotationX = 0;\r\n    origin = new Float32Array(3);\r\n    parentOrigin = new Float32Array(3);\r\n    rotationX = 0;\r\n    rotationY = 0;\r\n    mouseDown = false;\r\n    onActivate() {\r\n        document.addEventListener('mousemove', this.onMouseMove);\r\n        const canvas = this.engine.canvas;\r\n        if (this.pointerLockOnClick) {\r\n            canvas.addEventListener('mousedown', this.requestPointerLock);\r\n        }\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex === 2) {\r\n                canvas.addEventListener('contextmenu', preventDefault, false);\r\n            }\r\n            canvas.addEventListener('mousedown', this.onMouseDown);\r\n            canvas.addEventListener('mouseup', this.onMouseUp);\r\n        }\r\n    }\r\n    onDeactivate() {\r\n        document.removeEventListener('mousemove', this.onMouseMove);\r\n        const canvas = this.engine.canvas;\r\n        if (this.pointerLockOnClick) {\r\n            canvas.removeEventListener('mousedown', this.requestPointerLock);\r\n        }\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex === 2) {\r\n                canvas.removeEventListener('contextmenu', preventDefault, false);\r\n            }\r\n            canvas.removeEventListener('mousedown', this.onMouseDown);\r\n            canvas.removeEventListener('mouseup', this.onMouseUp);\r\n        }\r\n    }\r\n    requestPointerLock = () => {\r\n        const canvas = this.engine.canvas;\r\n        canvas.requestPointerLock =\r\n            canvas.requestPointerLock ||\r\n                canvas.mozRequestPointerLock ||\r\n                canvas.webkitRequestPointerLock;\r\n        canvas.requestPointerLock();\r\n    };\r\n    onMouseDown = (e) => {\r\n        if (e.button === this.mouseButtonIndex) {\r\n            this.mouseDown = true;\r\n            document.body.style.cursor = 'grabbing';\r\n            if (e.button === 1) {\r\n                e.preventDefault();\r\n                /* Prevent scrolling */\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    onMouseUp = (e) => {\r\n        if (e.button === this.mouseButtonIndex) {\r\n            this.mouseDown = false;\r\n            document.body.style.cursor = 'initial';\r\n        }\r\n    };\r\n    onMouseMove = (e) => {\r\n        if (this.active && (this.mouseDown || !this.requireMouseDown)) {\r\n            this.rotationY = (-this.sensitity * e.movementX) / 100;\r\n            this.rotationX = (-this.sensitity * e.movementY) / 100;\r\n            this.currentRotationX += this.rotationX;\r\n            this.currentRotationY += this.rotationY;\r\n            /* 1.507 = PI/2 = 90\u00B0 */\r\n            this.currentRotationX = Math.min(1.507, this.currentRotationX);\r\n            this.currentRotationX = Math.max(-1.507, this.currentRotationX);\r\n            this.object.getPositionWorld(this.origin);\r\n            const parent = this.object.parent;\r\n            if (parent) {\r\n                parent.getPositionWorld(this.parentOrigin);\r\n                vec3.sub(this.origin, this.origin, this.parentOrigin);\r\n            }\r\n            this.object.resetPositionRotation();\r\n            this.object.rotateAxisAngleRadLocal([1, 0, 0], this.currentRotationX);\r\n            this.object.rotateAxisAngleRadLocal([0, 1, 0], this.currentRotationY);\r\n            this.object.translateLocal(this.origin);\r\n        }\r\n    };\r\n}\r\n__decorate([\r\n    property.float(0.25)\r\n], MouseLookComponent.prototype, \"sensitity\", void 0);\r\n__decorate([\r\n    property.bool(true)\r\n], MouseLookComponent.prototype, \"requireMouseDown\", void 0);\r\n__decorate([\r\n    property.int()\r\n], MouseLookComponent.prototype, \"mouseButtonIndex\", void 0);\r\n__decorate([\r\n    property.bool(false)\r\n], MouseLookComponent.prototype, \"pointerLockOnClick\", void 0);\r\nexport { MouseLookComponent };\r\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\n/**\r\n * Set player height for a Y-offset above the ground for\r\n * 'local' and 'viewer' reference spaces.\r\n */\r\nclass PlayerHeight extends Component {\r\n    static TypeName = 'player-height';\r\n    height = 1.75;\r\n    onSessionStartCallback;\r\n    onSessionEndCallback;\r\n    start() {\r\n        this.object.resetPositionRotation();\r\n        this.object.translateLocal([0.0, this.height, 0.0]);\r\n        this.onSessionStartCallback = this.onXRSessionStart.bind(this);\r\n        this.onSessionEndCallback = this.onXRSessionEnd.bind(this);\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.add(this.onSessionEndCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.remove(this.onSessionEndCallback);\r\n    }\r\n    onXRSessionStart() {\r\n        const type = this.engine.xr?.currentReferenceSpaceType;\r\n        if (type !== 'local' && type !== 'viewer') {\r\n            this.object.resetPositionRotation();\r\n        }\r\n    }\r\n    onXRSessionEnd() {\r\n        const type = this.engine.xr?.currentReferenceSpaceType;\r\n        if (type !== 'local' && type !== 'viewer') {\r\n            this.object.resetPositionRotation();\r\n            this.object.translateLocal([0.0, this.height, 0.0]);\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    property.float(1.75)\r\n], PlayerHeight.prototype, \"height\", void 0);\r\nexport { PlayerHeight };\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\n/**\r\n * Sets the target framerate\r\n *\r\n * [Updates the target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-updatetargetframerate)\r\n * to the closest [supported target framerate](https://immersive-web.github.io/webxr/#dom-xrsession-supportedFrameRates)\r\n * to the given `framerate`.\r\n *\r\n * The target framerate is used for the device's VR compositor as an indication of how often to refresh the\r\n * screen with new images. This means the app will be asked to produce frames in more regular intervals,\r\n * potentially spending less time on frames that are likely to be dropped.\r\n *\r\n * For apps with heavy load, setting a well matching target framerate can improve the apps rendering stability\r\n * and reduce stutter.\r\n *\r\n * Likewise, the target framerate can be used to enable 120Hz refresh rates on Oculus Quest 2 on simpler apps.\r\n */\r\nclass TargetFramerate extends Component {\r\n    static TypeName = 'target-framerate';\r\n    static Properties = {\r\n        framerate: { type: Type.Float, default: 90.0 },\r\n    };\r\n    start() {\r\n        this.onSessionStartCallback = this.setTargetFramerate.bind(this);\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n    }\r\n    setTargetFramerate(s) {\r\n        if (s.supportedFrameRates && s.updateTargetFrameRate) {\r\n            const a = this.engine.xr.session.supportedFrameRates;\r\n            a.sort((a, b) => Math.abs(a - this.framerate) - Math.abs(b - this.framerate));\r\n            this.engine.xr.session.updateTargetFrameRate(a[0]);\r\n        }\r\n    }\r\n}\r\nexport { TargetFramerate };\r\n", "import { vec3, quat2 } from 'gl-matrix';\r\nimport { Component, Type } from '@wonderlandengine/api';\r\n/**\r\n * Teleport VR locomotion.\r\n *\r\n * See [Teleport Example](/showcase/teleport).\r\n */\r\nclass TeleportComponent extends Component {\r\n    static TypeName = 'teleport';\r\n    static Properties = {\r\n        /** Object that will be placed as indiciation forwhere the player will teleport to. */\r\n        teleportIndicatorMeshObject: { type: Type.Object },\r\n        /** Root of the player, the object that will be positioned on teleportation. */\r\n        camRoot: { type: Type.Object },\r\n        /** Non-vr camera for use outside of VR */\r\n        cam: { type: Type.Object },\r\n        /** Left eye for use in VR*/\r\n        eyeLeft: { type: Type.Object },\r\n        /** Right eye for use in VR*/\r\n        eyeRight: { type: Type.Object },\r\n        /** Handedness for VR cursors to accept trigger events only from respective controller. */\r\n        handedness: {\r\n            type: Type.Enum,\r\n            values: ['input component', 'left', 'right', 'none'],\r\n            default: 'input component',\r\n        },\r\n        /** Collision group of valid \"floor\" objects that can be teleported on */\r\n        floorGroup: { type: Type.Int, default: 1 },\r\n        /** How far the thumbstick needs to be pushed to have the teleport target indicator show up */\r\n        thumbstickActivationThreshhold: { type: Type.Float, default: -0.7 },\r\n        /** How far the thumbstick needs to be released to execute the teleport */\r\n        thumbstickDeactivationThreshhold: { type: Type.Float, default: 0.3 },\r\n        /** Offset to apply to the indicator object, e.g. to avoid it from Z-fighting with the floor */\r\n        indicatorYOffset: { type: Type.Float, default: 0.01 },\r\n        /** Mode for raycasting, whether to use PhysX or simple collision components */\r\n        rayCastMode: {\r\n            type: Type.Enum,\r\n            values: ['collision', 'physx'],\r\n            default: 'collision',\r\n        },\r\n        /** Max distance for PhysX raycast */\r\n        maxDistance: { type: Type.Float, default: 100.0 },\r\n    };\r\n    init() {\r\n        this._prevThumbstickAxis = new Float32Array(2);\r\n        this._tempVec = new Float32Array(3);\r\n        this._tempVec0 = new Float32Array(3);\r\n        this._currentIndicatorRotation = 0;\r\n        this.input = this.object.getComponent('input');\r\n        if (!this.input) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: input component is required on the object');\r\n            return;\r\n        }\r\n        if (!this.teleportIndicatorMeshObject) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: Teleport indicator mesh is missing');\r\n            return;\r\n        }\r\n        if (!this.camRoot) {\r\n            console.error(this.object.name, 'generic-teleport-component.js: camRoot not set');\r\n            return;\r\n        }\r\n        this.isIndicating = false;\r\n        this.indicatorHidden = true;\r\n        this.hitSpot = new Float32Array(3);\r\n        this._hasHit = false;\r\n        this._extraRotation = 0;\r\n        this._currentStickAxes = new Float32Array(2);\r\n    }\r\n    start() {\r\n        if (this.cam) {\r\n            this.isMouseIndicating = false;\r\n            canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n            canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n        }\r\n        if (this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if (!inputComp) {\r\n                console.warn('teleport component on object', this.object.name, 'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            }\r\n            else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        }\r\n        else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n        this.onSessionStartCallback = this.setupVREvents.bind(this);\r\n        this.teleportIndicatorMeshObject.active = false;\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n    }\r\n    /* Get current camera Y rotation */\r\n    _getCamRotation() {\r\n        this.eyeLeft.getForward(this._tempVec);\r\n        this._tempVec[1] = 0;\r\n        vec3.normalize(this._tempVec, this._tempVec);\r\n        return Math.atan2(this._tempVec[0], this._tempVec[2]);\r\n    }\r\n    update() {\r\n        let inputLength = 0;\r\n        if (this.gamepad && this.gamepad.axes) {\r\n            this._currentStickAxes[0] = this.gamepad.axes[2];\r\n            this._currentStickAxes[1] = this.gamepad.axes[3];\r\n            inputLength =\r\n                Math.abs(this._currentStickAxes[0]) + Math.abs(this._currentStickAxes[1]);\r\n        }\r\n        if (!this.isIndicating &&\r\n            this._prevThumbstickAxis[1] >= this.thumbstickActivationThreshhold &&\r\n            this._currentStickAxes[1] < this.thumbstickActivationThreshhold) {\r\n            this.isIndicating = true;\r\n        }\r\n        else if (this.isIndicating &&\r\n            inputLength < this.thumbstickDeactivationThreshhold) {\r\n            this.isIndicating = false;\r\n            this.teleportIndicatorMeshObject.active = false;\r\n            if (this._hasHit) {\r\n                this._teleportPlayer(this.hitSpot, this._extraRotation);\r\n            }\r\n        }\r\n        if (this.isIndicating && this.teleportIndicatorMeshObject && this.input) {\r\n            const origin = this._tempVec0;\r\n            this.object.getPositionWorld(origin);\r\n            const direction = this.object.getForwardWorld(this._tempVec);\r\n            let rayHit = (this.rayHit =\r\n                this.rayCastMode == 0\r\n                    ? this.engine.scene.rayCast(origin, direction, 1 << this.floorGroup)\r\n                    : this.engine.physics.rayCast(origin, direction, 1 << this.floorGroup, this.maxDistance));\r\n            if (rayHit.hitCount > 0) {\r\n                this.indicatorHidden = false;\r\n                this._extraRotation =\r\n                    Math.PI +\r\n                        Math.atan2(this._currentStickAxes[0], this._currentStickAxes[1]);\r\n                this._currentIndicatorRotation =\r\n                    this._getCamRotation() + (this._extraRotation - Math.PI);\r\n                this.teleportIndicatorMeshObject.resetPositionRotation();\r\n                this.teleportIndicatorMeshObject.rotateAxisAngleRad([0, 1, 0], this._currentIndicatorRotation);\r\n                this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n                this.teleportIndicatorMeshObject.translate([\r\n                    0.0,\r\n                    this.indicatorYOffset,\r\n                    0.0,\r\n                ]);\r\n                this.teleportIndicatorMeshObject.active = true;\r\n                this.hitSpot.set(rayHit.locations[0]);\r\n                this._hasHit = true;\r\n            }\r\n            else {\r\n                if (!this.indicatorHidden) {\r\n                    this.teleportIndicatorMeshObject.active = false;\r\n                    this.indicatorHidden = true;\r\n                }\r\n                this._hasHit = false;\r\n            }\r\n        }\r\n        else if (this.teleportIndicatorMeshObject && this.isMouseIndicating) {\r\n            this.onMousePressed();\r\n        }\r\n        this._prevThumbstickAxis.set(this._currentStickAxes);\r\n    }\r\n    setupVREvents(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        s.addEventListener('end', function () {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.gamepad = null;\r\n            this.session = null;\r\n        }.bind(this));\r\n        if (s.inputSources && s.inputSources.length) {\r\n            for (let i = 0; i < s.inputSources.length; i++) {\r\n                let inputSource = s.inputSources[i];\r\n                if (inputSource.handedness == this.handedness) {\r\n                    this.gamepad = inputSource.gamepad;\r\n                }\r\n            }\r\n        }\r\n        s.addEventListener('inputsourceschange', function (e) {\r\n            if (e.added && e.added.length) {\r\n                for (let i = 0; i < e.added.length; i++) {\r\n                    let inputSource = e.added[i];\r\n                    if (inputSource.handedness == this.handedness) {\r\n                        this.gamepad = inputSource.gamepad;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n    }\r\n    onMouseDown() {\r\n        this.isMouseIndicating = true;\r\n    }\r\n    onMouseUp() {\r\n        this.isMouseIndicating = false;\r\n        this.teleportIndicatorMeshObject.active = false;\r\n        if (this._hasHit) {\r\n            this._teleportPlayer(this.hitSpot, 0.0);\r\n        }\r\n    }\r\n    onMousePressed() {\r\n        let origin = [0, 0, 0];\r\n        this.cam.getPositionWorld(origin);\r\n        const direction = this.cam.getForward(this._tempVec);\r\n        let rayHit = (this.rayHit =\r\n            this.rayCastMode == 0\r\n                ? this.engine.scene.rayCast(origin, direction, 1 << this.floorGroup)\r\n                : this.engine.physics.rayCast(origin, direction, 1 << this.floorGroup, this.maxDistance));\r\n        if (rayHit.hitCount > 0) {\r\n            this.indicatorHidden = false;\r\n            direction[1] = 0;\r\n            vec3.normalize(direction, direction);\r\n            this._currentIndicatorRotation =\r\n                -Math.sign(direction[2]) * Math.acos(direction[0]) - Math.PI * 0.5;\r\n            this.teleportIndicatorMeshObject.resetPositionRotation();\r\n            this.teleportIndicatorMeshObject.rotateAxisAngleRad([0, 1, 0], this._currentIndicatorRotation);\r\n            this.teleportIndicatorMeshObject.translate(rayHit.locations[0]);\r\n            this.teleportIndicatorMeshObject.active = true;\r\n            this.hitSpot = rayHit.locations[0];\r\n            this._hasHit = true;\r\n        }\r\n        else {\r\n            if (!this.indicatorHidden) {\r\n                this.teleportIndicatorMeshObject.active = false;\r\n                this.indicatorHidden = true;\r\n            }\r\n            this._hasHit = false;\r\n        }\r\n    }\r\n    _teleportPlayer(newPosition, rotationToAdd) {\r\n        this.camRoot.rotateAxisAngleRad([0, 1, 0], rotationToAdd);\r\n        const p = this._tempVec;\r\n        const p1 = this._tempVec0;\r\n        if (this.session) {\r\n            this.eyeLeft.getPositionWorld(p);\r\n            this.eyeRight.getPositionWorld(p1);\r\n            vec3.add(p, p, p1);\r\n            vec3.scale(p, p, 0.5);\r\n        }\r\n        else {\r\n            this.cam.getPositionWorld(p);\r\n        }\r\n        this.camRoot.getPositionWorld(p1);\r\n        vec3.sub(p, p1, p);\r\n        p[0] += newPosition[0];\r\n        p[1] = newPosition[1];\r\n        p[2] += newPosition[2];\r\n        this.camRoot.setPositionWorld(p);\r\n    }\r\n}\r\nexport { TeleportComponent };\r\n", "import { Component, Type, Mesh, MeshIndexType, MeshAttribute } from '@wonderlandengine/api';\r\nimport { vec3 } from 'gl-matrix';\r\nconst direction = vec3.create();\r\nconst offset = vec3.create();\r\nconst normal = vec3.create();\r\n/**\r\n * Dynamic mesh-based trail\r\n *\r\n * This component keeps track of the world position of the object it's added to.\r\n * At a fixed interval the world position is stored as start and end points of the trail segments.\r\n *\r\n * The trail tapers off along its length. UV texture coordinates are setup such that the\r\n * U-axis covers the width of the trail and the V-axis covers the length of the trail.\r\n * This allows the trail's appearance to be defined using a texture.\r\n */\r\nclass Trail extends Component {\r\n    static TypeName = 'trail';\r\n    static Properties = {\r\n        /** The material to apply to the trail mesh */\r\n        material: { type: Type.Material },\r\n        /** The number of segments in the trail mesh */\r\n        segments: { type: Type.Int, default: 50 },\r\n        /** The time interval before recording a new point */\r\n        interval: { type: Type.Float, default: 0.1 },\r\n        /** The width of the trail (in world space) */\r\n        width: { type: Type.Float, default: 1.0 },\r\n        /** Whether or not the trail should taper off */\r\n        taper: { type: Type.Bool, default: true },\r\n        /**\r\n         * The maximum delta time in seconds, above which the trail resets.\r\n         * This prevents the trail from jumping around when updates happen\r\n         * infrequently (e.g. when the tab doesn't have focus).\r\n         */\r\n        resetThreshold: { type: Type.Float, default: 0.5 },\r\n    };\r\n    init() {\r\n        this.points = new Array(this.segments + 1);\r\n        for (let i = 0; i < this.points.length; ++i) {\r\n            this.points[i] = vec3.create();\r\n        }\r\n        /* The points array is circular, so keep track of its head */\r\n        this.currentPointOffset = 0;\r\n        this.up = [0, 1, 0];\r\n        this.timeTillNext = this.interval;\r\n    }\r\n    start() {\r\n        this.trailContainer = this.engine.scene.addObject();\r\n        this.meshComp = this.trailContainer.addComponent('mesh');\r\n        this.meshComp.material = this.material;\r\n        /* Each point will have two vertices; one on either side */\r\n        const vertexCount = 2 * this.points.length;\r\n        /* Each segment consists of two triangles */\r\n        this.indexData = new Uint32Array(6 * this.segments);\r\n        for (let i = 0, v = 0; i < vertexCount - 2; i += 2, v += 6) {\r\n            this.indexData\r\n                .subarray(v, v + 6)\r\n                .set([i + 1, i + 0, i + 2, i + 2, i + 3, i + 1]);\r\n        }\r\n        this.mesh = new Mesh(this.engine, {\r\n            vertexCount: vertexCount,\r\n            indexData: this.indexData,\r\n            indexType: MeshIndexType.UnsignedInt,\r\n        });\r\n        this.meshComp.mesh = this.mesh;\r\n    }\r\n    updateVertices() {\r\n        const positions = this.mesh.attribute(MeshAttribute.Position);\r\n        const texCoords = this.mesh.attribute(MeshAttribute.TextureCoordinate);\r\n        const normals = this.mesh.attribute(MeshAttribute.Normal);\r\n        vec3.set(direction, 0, 0, 0);\r\n        for (let i = 0; i < this.points.length; ++i) {\r\n            const curr = this.points[(this.currentPointIndex + i + 1) % this.points.length];\r\n            const next = this.points[(this.currentPointIndex + i + 2) % this.points.length];\r\n            /* The last point has no next, so re-use the direction of the previous segment */\r\n            if (i !== this.points.length - 1) {\r\n                vec3.sub(direction, next, curr);\r\n            }\r\n            vec3.cross(offset, this.up, direction);\r\n            vec3.normalize(offset, offset);\r\n            const timeFraction = 1.0 - this.timeTillNext / this.interval;\r\n            const fraction = (i - timeFraction) / this.segments;\r\n            vec3.scale(offset, offset, ((this.taper ? fraction : 1.0) * this.width) / 2.0);\r\n            positions.set(i * 2, [\r\n                curr[0] - offset[0],\r\n                curr[1] - offset[1],\r\n                curr[2] - offset[2],\r\n            ]);\r\n            positions.set(i * 2 + 1, [\r\n                curr[0] + offset[0],\r\n                curr[1] + offset[1],\r\n                curr[2] + offset[2],\r\n            ]);\r\n            if (normals) {\r\n                vec3.cross(normal, direction, offset);\r\n                vec3.normalize(normal, normal);\r\n                normals.set(i * 2, normal);\r\n                normals.set(i * 2 + 1, normal);\r\n            }\r\n            if (texCoords) {\r\n                texCoords.set(i * 2, [0, fraction]);\r\n                texCoords.set(i * 2 + 1, [1, fraction]);\r\n            }\r\n        }\r\n        /* Notify WLE that the mesh has changed */\r\n        this.mesh.update();\r\n    }\r\n    resetTrail() {\r\n        this.object.getTranslationWorld(this.points[0]);\r\n        for (let i = 1; i < this.points.length; ++i) {\r\n            vec3.copy(this.points[i], this.points[0]);\r\n        }\r\n        this.currentPointIndex = 0;\r\n        this.timeTillNext = this.interval;\r\n    }\r\n    update(dt) {\r\n        this.timeTillNext -= dt;\r\n        if (dt > this.resetThreshold) {\r\n            this.resetTrail();\r\n        }\r\n        if (this.timeTillNext < 0) {\r\n            this.currentPointIndex = (this.currentPointIndex + 1) % this.points.length;\r\n            this.timeTillNext = (this.timeTillNext % this.interval) + this.interval;\r\n        }\r\n        this.object.getTranslationWorld(this.points[this.currentPointIndex]);\r\n        this.updateVertices();\r\n    }\r\n    onActivate() {\r\n        this.resetTrail();\r\n    }\r\n    onDestroy() {\r\n        this.trailContainer.destroy();\r\n        this.mesh.destroy();\r\n    }\r\n}\r\nexport { Trail };\r\n", "import { Component, Property } from '@wonderlandengine/api';\r\nimport { vec3 } from 'gl-matrix';\r\nfunction clamp(v, a, b) {\r\n    return Math.max(a, Math.min(v, b));\r\n}\r\nconst rootScaling = new Float32Array(3);\r\nconst tempQuat = new Float32Array(4);\r\nconst middlePos = new Float32Array(3);\r\nconst endPos = new Float32Array(3);\r\nconst targetPos = new Float32Array(3);\r\nconst helperPos = new Float32Array(3);\r\nconst rootTransform = new Float32Array(8);\r\nconst middleTransform = new Float32Array(8);\r\nconst endTransform = new Float32Array(8);\r\n/**\r\n * Solve inverse kinematics for a two joint chains\r\n *\r\n * Inspired by http://theorangeduck.com/page/simple-two-joint\r\n */\r\nconst twoJointIK = (function () {\r\n    const ta = new Float32Array(3);\r\n    const ca = new Float32Array(3);\r\n    const ba = new Float32Array(3);\r\n    const ab = new Float32Array(3);\r\n    const cb = new Float32Array(3);\r\n    const axis0 = new Float32Array(3);\r\n    const axis1 = new Float32Array(3);\r\n    const temp = new Float32Array(3);\r\n    return function (root, middle, b, c, targetPos, eps, helper) {\r\n        /* a = [0, 0, 0], since everything is computed in root-space */\r\n        ba.set(b);\r\n        const lab = vec3.length(ba);\r\n        vec3.sub(ta, b, c);\r\n        const lcb = vec3.length(ta);\r\n        ta.set(targetPos);\r\n        const lat = clamp(vec3.length(ta), eps, lab + lcb - eps);\r\n        ca.set(c);\r\n        vec3.scale(ab, b, -1);\r\n        vec3.sub(cb, c, b);\r\n        vec3.normalize(ca, ca);\r\n        vec3.normalize(ba, ba);\r\n        vec3.normalize(ab, ab);\r\n        vec3.normalize(cb, cb);\r\n        vec3.normalize(ta, ta);\r\n        /* Supposedly numerical errors can cause the dot to go out of -1, 1 range */\r\n        const ac_ab_0 = Math.acos(clamp(vec3.dot(ca, ba), -1, 1));\r\n        const ba_bc_0 = Math.acos(clamp(vec3.dot(ab, cb), -1, 1));\r\n        const ac_at_0 = Math.acos(clamp(vec3.dot(ca, ta), -1, 1));\r\n        const ac_ab_1 = Math.acos(clamp((lcb * lcb - lab * lab - lat * lat) / (-2 * lab * lat), -1, 1));\r\n        const ba_bc_1 = Math.acos(clamp((lat * lat - lab * lab - lcb * lcb) / (-2 * lab * lcb), -1, 1));\r\n        if (helper) {\r\n            vec3.sub(ba, helper, b);\r\n            vec3.normalize(ba, ba);\r\n        }\r\n        vec3.cross(axis0, ca, ba);\r\n        vec3.normalize(axis0, axis0);\r\n        vec3.cross(axis1, c, targetPos);\r\n        vec3.normalize(axis1, axis1);\r\n        middle.transformVectorInverseLocal(temp, axis0);\r\n        root.rotateAxisAngleRadObject(axis1, ac_at_0);\r\n        root.rotateAxisAngleRadObject(axis0, ac_ab_1 - ac_ab_0);\r\n        middle.rotateAxisAngleRadObject(axis0, ba_bc_1 - ba_bc_0);\r\n    };\r\n})();\r\n/**\r\n * Inverse kinematics for two-joint chains (e.g. knees or elbows)\r\n */\r\nclass TwoJointIkSolver extends Component {\r\n    static TypeName = 'two-joint-ik-solver';\r\n    static Properties = {\r\n        /** Root bone, never moves */\r\n        root: Property.object(),\r\n        /** Bone attached to the root */\r\n        middle: Property.object(),\r\n        /** Bone attached to the middle */\r\n        end: Property.object(),\r\n        /** Target the joins should reach for */\r\n        target: Property.object(),\r\n        /** Flag for copying rotation from target to end */\r\n        copyTargetRotation: Property.bool(true),\r\n        /** Helper object to use to determine joint rotation axis */\r\n        helper: Property.object(),\r\n    };\r\n    time = 0;\r\n    start() {\r\n        this.root.getTransformLocal(rootTransform);\r\n        this.middle.getTransformLocal(middleTransform);\r\n        this.end.getTransformLocal(endTransform);\r\n    }\r\n    update(dt) {\r\n        this.time += dt;\r\n        /* Reset to original pose for stability */\r\n        this.root.setTransformLocal(rootTransform);\r\n        this.middle.setTransformLocal(middleTransform);\r\n        this.end.setTransformLocal(endTransform);\r\n        this.root.getScalingWorld(rootScaling);\r\n        /* Get joint positions in root-space */\r\n        this.middle.getPositionLocal(middlePos);\r\n        this.end.getPositionLocal(endPos);\r\n        this.middle.transformPointLocal(endPos, endPos);\r\n        if (this.helper) {\r\n            /* Get helper position in root space */\r\n            this.helper.getPositionWorld(helperPos);\r\n            this.root.transformPointInverseWorld(helperPos, helperPos);\r\n            vec3.div(helperPos, helperPos, rootScaling);\r\n        }\r\n        /* Get target position in root space */\r\n        this.target.getPositionWorld(targetPos);\r\n        this.root.transformPointInverseWorld(targetPos, targetPos);\r\n        vec3.div(targetPos, targetPos, rootScaling);\r\n        twoJointIK(this.root, this.middle, middlePos, endPos, targetPos, 0.01, this.helper ? helperPos : null, this.time);\r\n        if (this.copyTargetRotation) {\r\n            this.end.setRotationWorld(this.target.getRotationWorld(tempQuat));\r\n        }\r\n    }\r\n}\r\nexport { TwoJointIkSolver };\r\n", "import { Component, Texture, Property } from '@wonderlandengine/api';\r\nimport { setFirstMaterialTexture } from './utils/utils.js';\r\n/**\r\n * Downloads a video from URL and applies it as `diffuseTexture` or `flatTexture`\r\n * on given material.\r\n *\r\n * Video textures need to be updated regularly whenever\r\n * a new frame is available. This component handles the\r\n * detection of a new frame and updates the texture to\r\n * reflect the video's current frame.\r\n *\r\n * Materials from the following shaders are supported:\r\n *  - \"Phong Opaque Textured\"\r\n *  - \"Flat Opaque Textured\"\r\n *  - \"Background\"\r\n *  - \"Physical Opaque Textured\"\r\n *  - \"Foliage\"\r\n *\r\n * The video can be accessed through `this.video`:\r\n *\r\n * ```js\r\n *   let videoTexture = this.object.getComponent('video-texture');\r\n *   videoTexture.video.play();\r\n *   videoTexture.video.pause();\r\n * ```\r\n *\r\n * See [Video Example](/showcase/video).\r\n */\r\nclass VideoTexture extends Component {\r\n    static TypeName = 'video-texture';\r\n    static Properties = {\r\n        /** URL to download video from */\r\n        url: Property.string(),\r\n        /** Material to apply the video texture to */\r\n        material: Property.material(),\r\n        /** Whether to loop the video */\r\n        loop: Property.bool(true),\r\n        /** Whether to automatically start playing the video */\r\n        autoplay: Property.bool(true),\r\n        /** Whether to mute sound */\r\n        muted: Property.bool(true),\r\n        /** Name of the texture property to set */\r\n        textureProperty: Property.string('auto'),\r\n    };\r\n    init() {\r\n        if (!this.material) {\r\n            throw Error('video-texture: material property not set');\r\n        }\r\n        this.loaded = false;\r\n        this.frameUpdateRequested = true;\r\n    }\r\n    start() {\r\n        this.video = document.createElement('video');\r\n        this.video.src = this.url;\r\n        this.video.crossOrigin = 'anonymous';\r\n        this.video.playsInline = true;\r\n        this.video.loop = this.loop;\r\n        this.video.muted = this.muted;\r\n        this.video.addEventListener('playing', () => {\r\n            this.loaded = true;\r\n        });\r\n        if (this.autoplay) {\r\n            const playAfterUserGesture = () => {\r\n                this.video.play();\r\n                window.removeEventListener('click', playAfterUserGesture);\r\n                window.removeEventListener('touchstart', playAfterUserGesture);\r\n            };\r\n            window.addEventListener('click', playAfterUserGesture);\r\n            window.addEventListener('touchstart', playAfterUserGesture);\r\n        }\r\n    }\r\n    applyTexture() {\r\n        const mat = this.material;\r\n        const shader = mat.shader;\r\n        const texture = (this.texture = new Texture(this.engine, this.video));\r\n        if (!setFirstMaterialTexture(mat, texture, this.textureProperty)) {\r\n            console.error('Shader', shader, 'not supported by video-texture');\r\n        }\r\n        if ('requestVideoFrameCallback' in this.video) {\r\n            this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n        }\r\n        else {\r\n            this.video.addEventListener('timeupdate', () => {\r\n                this.frameUpdateRequested = true;\r\n            });\r\n        }\r\n    }\r\n    update(dt) {\r\n        if (this.loaded && this.frameUpdateRequested) {\r\n            if (this.texture) {\r\n                this.texture.update();\r\n            }\r\n            else {\r\n                /* Apply texture on first frame update request */\r\n                this.applyTexture();\r\n            }\r\n            this.frameUpdateRequested = false;\r\n        }\r\n    }\r\n    updateVideo() {\r\n        this.frameUpdateRequested = true;\r\n        this.video.requestVideoFrameCallback(this.updateVideo.bind(this));\r\n    }\r\n}\r\nexport { VideoTexture };\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\n/**\r\n * Allows switching all other components on an object to active/inactive\r\n * depending on whether a VR/AR session is active.\r\n *\r\n * Useful for hiding controllers until the user enters VR for example.\r\n */\r\nclass VrModeActiveSwitch extends Component {\r\n    static TypeName = 'vr-mode-active-switch';\r\n    static Properties = {\r\n        /** When components should be active: In VR or when not in VR */\r\n        activateComponents: {\r\n            type: Type.Enum,\r\n            values: ['in VR', 'in non-VR'],\r\n            default: 'in VR',\r\n        },\r\n        /** Whether child object's components should be affected */\r\n        affectChildren: { type: Type.Bool, default: true },\r\n    };\r\n    start() {\r\n        this.components = [];\r\n        this.getComponents(this.object);\r\n        /* Initial activation/deactivation */\r\n        this.onXRSessionEnd();\r\n        this.onSessionStartCallback = this.onXRSessionStart.bind(this);\r\n        this.onSessionEndCallback = this.onXRSessionEnd.bind(this);\r\n    }\r\n    onActivate() {\r\n        this.engine.onXRSessionStart.add(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.add(this.onSessionEndCallback);\r\n    }\r\n    onDeactivate() {\r\n        this.engine.onXRSessionStart.remove(this.onSessionStartCallback);\r\n        this.engine.onXRSessionEnd.remove(this.onSessionEndCallback);\r\n    }\r\n    getComponents(obj) {\r\n        const comps = obj.getComponents().filter((c) => c.type !== 'vr-mode-active-switch');\r\n        this.components = this.components.concat(comps);\r\n        if (this.affectChildren) {\r\n            let children = obj.children;\r\n            for (let i = 0; i < children.length; ++i) {\r\n                this.getComponents(children[i]);\r\n            }\r\n        }\r\n    }\r\n    setComponentsActive(active) {\r\n        const comps = this.components;\r\n        for (let i = 0; i < comps.length; ++i) {\r\n            comps[i].active = active;\r\n        }\r\n    }\r\n    onXRSessionStart() {\r\n        this.setComponentsActive(this.activateComponents == 0);\r\n    }\r\n    onXRSessionEnd() {\r\n        this.setComponentsActive(this.activateComponents != 0);\r\n    }\r\n}\r\nexport { VrModeActiveSwitch };\r\n", "var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Collider, CollisionComponent, Component, Emitter, Mesh, MeshAttribute, MeshComponent, MeshIndexType, } from '@wonderlandengine/api';\r\nimport { property } from '@wonderlandengine/api/decorators.js';\r\nimport { setXRRigidTransformLocal } from './utils/webxr.js';\r\n// FIXME: earcut overrides default export, breaking our tests\r\nimport earcut from 'earcut';\r\nconst tempVec3 = new Float32Array(3);\r\n/** Compute minimum and maxium extents of given list of contour points */\r\nfunction extentsFromContour(out, points) {\r\n    if (points.length == 0)\r\n        return out;\r\n    let absMaxX = Math.abs(points[0].x);\r\n    let absMaxZ = Math.abs(points[0].z);\r\n    for (let i = 1; i < points.length; ++i) {\r\n        absMaxX = Math.max(absMaxX, Math.abs(points[i].x));\r\n        absMaxZ = Math.max(absMaxZ, Math.abs(points[i].z));\r\n    }\r\n    out[0] = absMaxX;\r\n    out[1] = 0;\r\n    out[2] = absMaxZ;\r\n}\r\n/** Check whether x lies between a and b */\r\nfunction within(x, a, b) {\r\n    if (a > b)\r\n        return x < a && x > b;\r\n    return x > a && x < b;\r\n}\r\n/**\r\n * Check whether given point on plane's bounding box is inside plane's polygon\r\n *\r\n * @param p 3D point in plane's local space, Y value is ignored, since it is assumed\r\n *     that the point was checked against the plane's bounding box.\r\n * @param plane XRPlane that has `XRPlane.polygon`\r\n * @returns `true` if the point lies on the plane\r\n */\r\nexport function isPointLocalOnXRPlanePolygon(p, plane) {\r\n    const points = plane.polygon;\r\n    if (points.length < 3)\r\n        return false;\r\n    /* Count ray intersections: even == inside, odd == outside */\r\n    const pX = p[0];\r\n    const pZ = p[2];\r\n    let intersections = 0;\r\n    for (let n = 0, l = points.length - 1; n < points.length; ++n) {\r\n        const aX = points[l].x;\r\n        const aZ = points[l].z;\r\n        const s = (points[n].z - aZ) / (points[n].x - aX);\r\n        const x = Math.abs((pZ - aZ) / s);\r\n        if (x >= 0.0 && x <= 1.0 && within(x + pX, aX, points[n].x))\r\n            ++intersections;\r\n        l = n;\r\n    }\r\n    return (intersections & 1) == 0;\r\n}\r\n/**\r\n * Check whether given point on plane's bounding box is inside plane's polygon\r\n *\r\n * @param p 3D point to test. It is assumed that the point was checked against\r\n *     the plane's bounding box beforehand.\r\n * @param plane XRPlane that has `XRPlane.polygon`\r\n * @returns `true` if the point lies on the plane\r\n */\r\nexport function isPointWorldOnXRPlanePolygon(object, p, plane) {\r\n    if (plane.polygon.length < 3)\r\n        return false;\r\n    isPointLocalOnXRPlanePolygon(object.transformPointInverseWorld(tempVec3, p), plane);\r\n}\r\n/**\r\n * Create a plane mesh from a list of contour points\r\n *\r\n * @param engine Engine to create the mesh with\r\n * @param points Contour points\r\n * @param meshToUpdate Optional mesh to update instead of creating a new one.\r\n */\r\nfunction planeMeshFromContour(engine, points, meshToUpdate = null) {\r\n    const vertexCount = points.length;\r\n    const vertices = new Float32Array(vertexCount * 2);\r\n    for (let i = 0, d = 0; i < vertexCount; ++i, d += 2) {\r\n        vertices[d] = points[i].x;\r\n        vertices[d + 1] = points[i].z;\r\n    }\r\n    const triangles = earcut(vertices);\r\n    const mesh = meshToUpdate ||\r\n        new Mesh(engine, {\r\n            vertexCount,\r\n            /* Assumption here that we will never have more than 256 points\r\n             * in the detected plane meshes! */\r\n            indexType: MeshIndexType.UnsignedByte,\r\n            indexData: triangles,\r\n        });\r\n    if (mesh.vertexCount !== vertexCount) {\r\n        console.warn('vertexCount of meshToUpdate did not match required vertexCount');\r\n        return mesh;\r\n    }\r\n    const positions = mesh.attribute(MeshAttribute.Position);\r\n    const textureCoords = mesh.attribute(MeshAttribute.TextureCoordinate);\r\n    const normals = mesh.attribute(MeshAttribute.Normal);\r\n    tempVec3[1] = 0;\r\n    for (let i = 0, s = 0; i < vertexCount; ++i, s += 2) {\r\n        tempVec3[0] = vertices[s];\r\n        tempVec3[2] = vertices[s + 1];\r\n        positions.set(i, tempVec3);\r\n    }\r\n    textureCoords?.set(0, vertices);\r\n    if (normals) {\r\n        tempVec3[0] = 0;\r\n        tempVec3[1] = 1;\r\n        tempVec3[2] = 0;\r\n        for (let i = 0; i < vertexCount; ++i) {\r\n            normals.set(i, tempVec3);\r\n        }\r\n    }\r\n    if (meshToUpdate)\r\n        mesh.update();\r\n    return mesh;\r\n}\r\n/**\r\n * Generate meshes and collisions for XRPlanes using [WebXR Device API - Plane Detection](https://immersive-web.github.io/real-world-geometry/plane-detection.html).\r\n */\r\nclass PlaneDetection extends Component {\r\n    static TypeName = 'plane-detection';\r\n    /**\r\n     * Material to assign to created plane meshes or `null` if meshes should not be created.\r\n     */\r\n    planeMaterial = null;\r\n    /**\r\n     * Collision mask to assign to newly created collision components or a negative value if\r\n     * collision components should not be created.\r\n     */\r\n    collisionMask = -1;\r\n    /** Map of all planes and their last updated timestamps */\r\n    planes = new Map();\r\n    /** Objects generated for each XRPlane */\r\n    planeObjects = new Map();\r\n    /** Called when a plane starts tracking */\r\n    onPlaneFound = new Emitter();\r\n    /** Called when a plane stops tracking */\r\n    onPlaneLost = new Emitter();\r\n    update() {\r\n        if (!this.engine.xr?.frame)\r\n            return;\r\n        // @ts-ignore\r\n        if (this.engine.xr.frame.detectedPlanes === undefined) {\r\n            console.error('plane-detection: WebXR feature not available.');\r\n            this.active = false;\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        const detectedPlanes = this.engine.xr.frame.detectedPlanes;\r\n        for (const [plane, _] of this.planes) {\r\n            if (!detectedPlanes.has(plane)) {\r\n                this.#planeLost(plane);\r\n            }\r\n        }\r\n        detectedPlanes.forEach((plane) => {\r\n            if (this.planes.has(plane)) {\r\n                if (plane.lastChangedTime > this.planes.get(plane)) {\r\n                    this.#planeUpdate(plane);\r\n                }\r\n            }\r\n            else {\r\n                this.#planeFound(plane);\r\n            }\r\n            this.#planeUpdatePose(plane);\r\n        });\r\n    }\r\n    #planeLost(plane) {\r\n        this.planes.delete(plane);\r\n        const o = this.planeObjects.get(plane);\r\n        this.onPlaneLost.notify(plane, o);\r\n        /* User might destroy the object */\r\n        if (o.objectId > 0)\r\n            o.destroy();\r\n    }\r\n    #planeFound(plane) {\r\n        this.planes.set(plane, plane.lastChangedTime);\r\n        const o = this.engine.scene.addObject(this.object);\r\n        this.planeObjects.set(plane, o);\r\n        if (this.planeMaterial) {\r\n            o.addComponent(MeshComponent, {\r\n                mesh: planeMeshFromContour(this.engine, plane.polygon),\r\n                material: this.planeMaterial,\r\n            });\r\n        }\r\n        if (this.collisionMask >= 0) {\r\n            extentsFromContour(tempVec3, plane.polygon);\r\n            tempVec3[1] = 0.025;\r\n            o.addComponent(CollisionComponent, {\r\n                group: this.collisionMask,\r\n                collider: Collider.Box,\r\n                extents: tempVec3,\r\n            });\r\n        }\r\n        this.onPlaneFound.notify(plane, o);\r\n    }\r\n    #planeUpdate(plane) {\r\n        this.planes.set(plane, plane.lastChangedTime);\r\n        const planeMesh = this.planeObjects.get(plane).getComponent(MeshComponent);\r\n        if (!planeMesh)\r\n            return;\r\n        planeMeshFromContour(this.engine, plane.polygon, planeMesh.mesh);\r\n    }\r\n    #planeUpdatePose(plane) {\r\n        const o = this.planeObjects.get(plane);\r\n        const pose = this.engine.xr.frame.getPose(plane.planeSpace, this.engine.xr.currentReferenceSpace);\r\n        if (!pose) {\r\n            o.active = false;\r\n            return;\r\n        }\r\n        setXRRigidTransformLocal(o, pose.transform);\r\n    }\r\n}\r\n__decorate([\r\n    property.material()\r\n], PlaneDetection.prototype, \"planeMaterial\", void 0);\r\n__decorate([\r\n    property.int()\r\n], PlaneDetection.prototype, \"collisionMask\", void 0);\r\nexport { PlaneDetection };\r\n", "import { Component, Type } from '@wonderlandengine/api';\r\nimport { vec3, mat4, quat, quat2 } from 'gl-matrix';\r\nconst VRM_ROLL_AXES = {\r\n    X: [1.0, 0.0, 0.0],\r\n    Y: [0.0, 1.0, 0.0],\r\n    Z: [0.0, 0.0, 1.0],\r\n};\r\nconst VRM_AIM_AXES = {\r\n    PositiveX: [1.0, 0.0, 0.0],\r\n    NegativeX: [-1.0, 0.0, 0.0],\r\n    PositiveY: [0.0, 1.0, 0.0],\r\n    NegativeY: [0.0, -1.0, 0.0],\r\n    PositiveZ: [0.0, 0.0, 1.0],\r\n    NegativeZ: [0.0, 0.0, -1.0],\r\n};\r\n/**\r\n * Component for loading and handling VRM 1.0 models.\r\n *\r\n * Posing of the model should be done exclusively by rotating the bones. These can be\r\n * accessed using the `.bones` property and follow the VRM bone naming. Note that not\r\n * all VRM models will have all possible bones. The rest pose (T-pose) is captured in\r\n * the `.restPose` property. Resetting a bone to its rest pose can be done as follows:\r\n * ```js\r\n * vrmComponent.bones[vrmBoneName].rotationLocal = vrmComponent.restPose[vrmBoneName];\r\n * ```\r\n *\r\n * Moving the model through the world should be done by moving the object this component\r\n * is attached to. In other words, by moving the root of the VRM model. The bones and any\r\n * descendant objects should *not* be used to move the VRM model.\r\n *\r\n * The core extension `VRMC_vrm` as well as the`VRMC_springBone` and `VRMC_node_constraint`\r\n * extensions are supported.\r\n *\r\n * **Limitations:**\r\n * - No support for `VRMC_material_mtoon`\r\n * - Expressions aren't supported\r\n * - Expression based lookAt isn't supported\r\n * - Mesh annotation mode `auto` is not supported (first person mode)\r\n */\r\nclass Vrm extends Component {\r\n    static TypeName = 'vrm';\r\n    static Properties = {\r\n        /** URL to a VRM file to load */\r\n        src: { type: Type.String },\r\n        /** Object the VRM is looking at */\r\n        lookAtTarget: { type: Type.Object },\r\n    };\r\n    /** Meta information about the VRM model */\r\n    meta = null;\r\n    /** The humanoid bones of the VRM model */\r\n    bones = {\r\n        /* Torso */\r\n        hips: null,\r\n        spine: null,\r\n        chest: null,\r\n        upperChest: null,\r\n        neck: null,\r\n        /* Head */\r\n        head: null,\r\n        leftEye: null,\r\n        rightEye: null,\r\n        jaw: null,\r\n        /* Legs */\r\n        leftUpperLeg: null,\r\n        leftLowerLeg: null,\r\n        leftFoot: null,\r\n        leftToes: null,\r\n        rightUpperLeg: null,\r\n        rightLowerLeg: null,\r\n        rightFoot: null,\r\n        rightToes: null,\r\n        /* Arms */\r\n        leftShoulder: null,\r\n        leftUpperArm: null,\r\n        leftLowerArm: null,\r\n        leftHand: null,\r\n        rightShoulder: null,\r\n        rightUpperArm: null,\r\n        rightLowerArm: null,\r\n        rightHand: null,\r\n        /* Fingers */\r\n        leftThumbMetacarpal: null,\r\n        leftThumbProximal: null,\r\n        leftThumbDistal: null,\r\n        leftIndexProximal: null,\r\n        leftIndexIntermediate: null,\r\n        leftIndexDistal: null,\r\n        leftMiddleProximal: null,\r\n        leftMiddleIntermediate: null,\r\n        leftMiddleDistal: null,\r\n        leftRingProximal: null,\r\n        leftRingIntermediate: null,\r\n        leftRingDistal: null,\r\n        leftLittleProximal: null,\r\n        leftLittleIntermediate: null,\r\n        leftLittleDistal: null,\r\n        rightThumbMetacarpal: null,\r\n        rightThumbProximal: null,\r\n        rightThumbDistal: null,\r\n        rightIndexProximal: null,\r\n        rightIndexIntermediate: null,\r\n        rightIndexDistal: null,\r\n        rightMiddleProximal: null,\r\n        rightMiddleIntermediate: null,\r\n        rightMiddleDistal: null,\r\n        rightRingProximal: null,\r\n        rightRingIntermediate: null,\r\n        rightRingDistal: null,\r\n        rightLittleProximal: null,\r\n        rightLittleIntermediate: null,\r\n        rightLittleDistal: null,\r\n    };\r\n    /** Rotations of the bones in the rest pose (T-pose) */\r\n    restPose = {};\r\n    /* All node constraints, ordered to deal with dependencies */\r\n    _nodeConstraints = [];\r\n    /* VRMC_springBone chains */\r\n    _springChains = [];\r\n    /* Spherical colliders for spring bones */\r\n    _sphereColliders = [];\r\n    /* Capsule shaped colliders for spring bones */\r\n    _capsuleColliders = [];\r\n    /* Indicates which meshes are rendered in first/third person views */\r\n    _firstPersonAnnotations = [];\r\n    /* Contains details for (bone type) lookAt behaviour */\r\n    _lookAt = null;\r\n    /* Whether or not the VRM component has been initialized with `initializeVrm` */\r\n    _initialized = false;\r\n    init() {\r\n        this._tempV3 = vec3.create();\r\n        this._tempV3A = vec3.create();\r\n        this._tempV3B = vec3.create();\r\n        this._tempQuat = quat.create();\r\n        this._tempQuatA = quat.create();\r\n        this._tempQuatB = quat.create();\r\n        this._tempMat4A = mat4.create();\r\n        this._tempQuat2 = quat2.create();\r\n        this._tailToShape = vec3.create();\r\n        this._headToTail = vec3.create();\r\n        this._inertia = vec3.create();\r\n        this._stiffness = vec3.create();\r\n        this._external = vec3.create();\r\n        this._rightVector = vec3.set(vec3.create(), 1, 0, 0);\r\n        this._upVector = vec3.set(vec3.create(), 0, 1, 0);\r\n        this._forwardVector = vec3.set(vec3.create(), 0, 0, 1);\r\n        this._identityQuat = quat.identity(quat.create());\r\n        this._rad2deg = 180.0 / Math.PI;\r\n    }\r\n    start() {\r\n        if (!this.src) {\r\n            console.error('vrm: src property not set');\r\n            return;\r\n        }\r\n        this.engine.scene\r\n            .append(this.src, { loadGltfExtensions: true })\r\n            .then(({ root, extensions }) => {\r\n            root.children.forEach((child) => (child.parent = this.object));\r\n            this._initializeVrm(extensions);\r\n            root.destroy();\r\n        });\r\n    }\r\n    /**\r\n     * Parses the VRM glTF extensions and initializes the vrm component.\r\n     * @param {GLTFExtensions} extensions The glTF extensions for the VRM model\r\n     */\r\n    _initializeVrm(extensions) {\r\n        if (this._initialized) {\r\n            throw Error('VRM component has already been initialized');\r\n        }\r\n        const VRMC_vrm = extensions.root['VRMC_vrm'];\r\n        if (!VRMC_vrm) {\r\n            throw Error('Missing VRM extensions');\r\n        }\r\n        if (VRMC_vrm.specVersion !== '1.0') {\r\n            throw Error(`Unsupported VRM version, only 1.0 is supported, but encountered '${VRMC_vrm.specVersion}'`);\r\n        }\r\n        this.meta = VRMC_vrm.meta;\r\n        this._parseHumanoid(VRMC_vrm.humanoid, extensions);\r\n        if (VRMC_vrm.firstPerson) {\r\n            this._parseFirstPerson(VRMC_vrm.firstPerson, extensions);\r\n        }\r\n        if (VRMC_vrm.lookAt) {\r\n            this._parseLookAt(VRMC_vrm.lookAt);\r\n        }\r\n        this._findAndParseNodeConstraints(extensions);\r\n        const springBone = extensions.root['VRMC_springBone'];\r\n        if (springBone) {\r\n            this._parseAndInitializeSpringBones(springBone, extensions);\r\n        }\r\n        this._initialized = true;\r\n    }\r\n    _parseHumanoid(humanoid, extensions) {\r\n        for (const boneName in humanoid.humanBones) {\r\n            if (!(boneName in this.bones)) {\r\n                console.warn(`Unrecognized bone '${boneName}'`);\r\n                continue;\r\n            }\r\n            const node = humanoid.humanBones[boneName].node;\r\n            const objectId = extensions.idMapping[node];\r\n            this.bones[boneName] = this.engine.wrapObject(objectId);\r\n            this.restPose[boneName] = quat.copy(quat.create(), this.bones[boneName].rotationLocal);\r\n        }\r\n    }\r\n    _parseFirstPerson(firstPerson, extensions) {\r\n        for (const meshAnnotation of firstPerson.meshAnnotations) {\r\n            const annotation = {\r\n                node: this.engine.wrapObject(extensions.idMapping[meshAnnotation.node]),\r\n                firstPerson: true,\r\n                thirdPerson: true,\r\n            };\r\n            switch (meshAnnotation.type) {\r\n                case 'firstPersonOnly':\r\n                    annotation.thirdPerson = false;\r\n                    break;\r\n                case 'thirdPersonOnly':\r\n                    annotation.firstPerson = false;\r\n                    break;\r\n                case 'both':\r\n                    break;\r\n                case 'auto':\r\n                    console.warn(\"First person mesh annotation type 'auto' is not supported, treating as 'both'!\");\r\n                    break;\r\n                default:\r\n                    console.error(`Invalid mesh annotation type '${meshAnnotation.type}'`);\r\n                    break;\r\n            }\r\n            this._firstPersonAnnotations.push(annotation);\r\n        }\r\n    }\r\n    _parseLookAt(lookAt) {\r\n        if (lookAt.type !== 'bone') {\r\n            console.warn(`Unsupported lookAt type '${lookAt.type}', only 'bone' is supported`);\r\n            return;\r\n        }\r\n        const parseRangeMap = (rangeMap) => {\r\n            return {\r\n                inputMaxValue: rangeMap.inputMaxValue,\r\n                outputScale: rangeMap.outputScale,\r\n            };\r\n        };\r\n        this._lookAt = {\r\n            offsetFromHeadBone: lookAt.offsetFromHeadBone || [0, 0, 0],\r\n            horizontalInner: parseRangeMap(lookAt.rangeMapHorizontalInner),\r\n            horizontalOuter: parseRangeMap(lookAt.rangeMapHorizontalOuter),\r\n            verticalDown: parseRangeMap(lookAt.rangeMapVerticalDown),\r\n            verticalUp: parseRangeMap(lookAt.rangeMapVerticalUp),\r\n        };\r\n    }\r\n    _findAndParseNodeConstraints(extensions) {\r\n        const traverse = (object) => {\r\n            const nodeExtensions = extensions.node[object.objectId];\r\n            if (nodeExtensions && 'VRMC_node_constraint' in nodeExtensions) {\r\n                const nodeConstraintExtension = nodeExtensions['VRMC_node_constraint'];\r\n                const constraint = nodeConstraintExtension.constraint;\r\n                let type, axis;\r\n                if ('roll' in constraint) {\r\n                    type = 'roll';\r\n                    axis = VRM_ROLL_AXES[constraint.roll.rollAxis];\r\n                }\r\n                else if ('aim' in constraint) {\r\n                    type = 'aim';\r\n                    axis = VRM_AIM_AXES[constraint.aim.aimAxis];\r\n                }\r\n                else if ('rotation' in constraint) {\r\n                    type = 'rotation';\r\n                }\r\n                if (type) {\r\n                    const source = this.engine.wrapObject(extensions.idMapping[constraint[type].source]);\r\n                    this._nodeConstraints.push({\r\n                        type,\r\n                        source,\r\n                        destination: object,\r\n                        axis: axis,\r\n                        weight: constraint[type].weight,\r\n                        /* Rest pose */\r\n                        destinationRestLocalRotation: quat.copy(quat.create(), object.rotationLocal),\r\n                        sourceRestLocalRotation: quat.copy(quat.create(), source.rotationLocal),\r\n                        sourceRestLocalRotationInv: quat.invert(quat.create(), source.rotationLocal),\r\n                    });\r\n                }\r\n                else {\r\n                    console.warn('Unrecognized or invalid VRMC_node_constraint, ignoring it');\r\n                }\r\n            }\r\n            for (const child of object.children) {\r\n                traverse(child);\r\n            }\r\n        };\r\n        traverse(this.object);\r\n    }\r\n    _parseAndInitializeSpringBones(springBone, extensions) {\r\n        const colliders = (springBone.colliders || []).map((collider, i) => {\r\n            const shapeType = 'capsule' in collider.shape ? 'capsule' : 'sphere';\r\n            return {\r\n                id: i,\r\n                object: this.engine.wrapObject(extensions.idMapping[collider.node]),\r\n                shape: {\r\n                    isCapsule: shapeType === 'capsule',\r\n                    radius: collider.shape[shapeType].radius,\r\n                    offset: collider.shape[shapeType].offset,\r\n                    tail: collider.shape[shapeType].tail,\r\n                },\r\n                cache: {\r\n                    head: vec3.create(),\r\n                    tail: vec3.create(),\r\n                },\r\n            };\r\n        });\r\n        this._sphereColliders = colliders.filter((c) => !c.shape.isCapsule);\r\n        this._capsuleColliders = colliders.filter((c) => c.shape.isCapsule);\r\n        const colliderGroups = (springBone.colliderGroups || []).map((group) => ({\r\n            name: group.name,\r\n            colliders: group.colliders.map((c) => colliders[c]),\r\n        }));\r\n        for (const spring of springBone.springs) {\r\n            const joints = [];\r\n            for (const joint of spring.joints) {\r\n                const springJoint = {\r\n                    hitRadius: 0.0,\r\n                    stiffness: 1.0,\r\n                    gravityPower: 0.0,\r\n                    gravityDir: [0.0, -1.0, 0.0],\r\n                    dragForce: 0.5,\r\n                    node: null,\r\n                    state: null,\r\n                };\r\n                Object.assign(springJoint, joint);\r\n                springJoint.node = this.engine.wrapObject(extensions.idMapping[springJoint.node]);\r\n                joints.push(springJoint);\r\n            }\r\n            const springChainColliders = (spring.colliderGroups || []).flatMap((cg) => colliderGroups[cg].colliders);\r\n            this._springChains.push({\r\n                name: spring.name,\r\n                center: spring.center\r\n                    ? this.engine.wrapObject(extensions.idMapping[spring.center])\r\n                    : null,\r\n                joints,\r\n                sphereColliders: springChainColliders.filter((c) => !c.shape.isCapsule),\r\n                capsuleColliders: springChainColliders.filter((c) => c.shape.isCapsule),\r\n            });\r\n        }\r\n        /* Initialize spring bone joint state */\r\n        for (const springChain of this._springChains) {\r\n            for (let i = 0; i < springChain.joints.length - 1; ++i) {\r\n                const springBoneJoint = springChain.joints[i];\r\n                const childSpringBoneJoint = springChain.joints[i + 1];\r\n                const springBonePosition = springBoneJoint.node.getTranslationWorld(vec3.create());\r\n                const childSpringBonePosition = childSpringBoneJoint.node.getTranslationWorld(vec3.create());\r\n                const boneDirection = vec3.subtract(this._tempV3A, springBonePosition, childSpringBonePosition);\r\n                const state = {\r\n                    prevTail: childSpringBonePosition,\r\n                    currentTail: vec3.copy(vec3.create(), childSpringBonePosition),\r\n                    initialLocalRotation: quat.copy(quat.create(), springBoneJoint.node.rotationLocal),\r\n                    initialLocalTransformInvert: quat2.invert(quat2.create(), springBoneJoint.node.transformLocal),\r\n                    boneAxis: vec3.normalize(vec3.create(), childSpringBoneJoint.node.getTranslationLocal(this._tempV3)),\r\n                    /* Ensure bone length is at least 1cm to avoid jittery behaviour from zero-length bones */\r\n                    boneLength: Math.max(0.01, vec3.length(boneDirection)),\r\n                    /* Tail positions in center space, if needed */\r\n                    prevTailCenter: null,\r\n                    currentTailCenter: null,\r\n                };\r\n                if (springChain.center) {\r\n                    state.prevTailCenter = springChain.center.transformPointInverseWorld(vec3.create(), childSpringBonePosition);\r\n                    state.currentTailCenter = vec3.copy(vec3.create(), childSpringBonePosition);\r\n                }\r\n                springBoneJoint.state = state;\r\n            }\r\n        }\r\n    }\r\n    update(dt) {\r\n        if (!this._initialized) {\r\n            return;\r\n        }\r\n        /* 1. Resolve humanoid bones (performed by user) */\r\n        /* 2. Resolve LookAt (bone type) as the position of the head is determined */\r\n        this._resolveLookAt();\r\n        /* 3. Expression update (TODO) */\r\n        /* 4. Apply Expression (TODO) */\r\n        /* 5. Resolve constraints */\r\n        this._resolveConstraints();\r\n        /* 6. Resolve Spring Bone */\r\n        this._updateSpringBones(dt);\r\n    }\r\n    _rangeMap(rangeMap, input) {\r\n        const maxValue = rangeMap.inputMaxValue;\r\n        const outputScale = rangeMap.outputScale;\r\n        return (Math.min(input, maxValue) / maxValue) * outputScale;\r\n    }\r\n    _resolveLookAt() {\r\n        if (!this._lookAt || !this.lookAtTarget) {\r\n            return;\r\n        }\r\n        const lookAtSource = this.bones.head.transformPointWorld(this._tempV3A, this._lookAt.offsetFromHeadBone);\r\n        const lookAtTarget = this.lookAtTarget.getTranslationWorld(this._tempV3B);\r\n        const lookAtDirection = vec3.sub(this._tempV3A, lookAtTarget, lookAtSource);\r\n        vec3.normalize(lookAtDirection, lookAtDirection);\r\n        /* Convert the direction into LookAt space */\r\n        this.bones.head.parent.transformVectorInverseWorld(lookAtDirection);\r\n        const z = vec3.dot(lookAtDirection, this._forwardVector);\r\n        const x = vec3.dot(lookAtDirection, this._rightVector);\r\n        const yaw = Math.atan2(x, z) * this._rad2deg;\r\n        const xz = Math.sqrt(x * x + z * z);\r\n        const y = vec3.dot(lookAtDirection, this._upVector);\r\n        let pitch = Math.atan2(-y, xz) * this._rad2deg;\r\n        /* Limit pitch */\r\n        if (pitch > 0) {\r\n            pitch = this._rangeMap(this._lookAt.verticalDown, pitch);\r\n        }\r\n        else {\r\n            pitch = -this._rangeMap(this._lookAt.verticalUp, -pitch);\r\n        }\r\n        /* Left eye (limit yaw) */\r\n        if (this.bones.leftEye) {\r\n            let yawLeft = yaw;\r\n            if (yawLeft > 0) {\r\n                yawLeft = this._rangeMap(this._lookAt.horizontalInner, yawLeft);\r\n            }\r\n            else {\r\n                yawLeft = -this._rangeMap(this._lookAt.horizontalOuter, -yawLeft);\r\n            }\r\n            const eyeRotation = quat.fromEuler(this._tempQuatA, pitch, yawLeft, 0);\r\n            this.bones.leftEye.rotationLocal = quat.multiply(eyeRotation, this.restPose.leftEye, eyeRotation);\r\n        }\r\n        /* Right eye (limit yaw) */\r\n        if (this.bones.rightEye) {\r\n            let yawRight = yaw;\r\n            if (yawRight > 0) {\r\n                yawRight = this._rangeMap(this._lookAt.horizontalOuter, yawRight);\r\n            }\r\n            else {\r\n                yawRight = -this._rangeMap(this._lookAt.horizontalInner, -yawRight);\r\n            }\r\n            const eyeRotation = quat.fromEuler(this._tempQuatA, pitch, yawRight, 0);\r\n            this.bones.rightEye.rotationLocal = quat.multiply(eyeRotation, this.restPose.rightEye, eyeRotation);\r\n        }\r\n    }\r\n    _resolveConstraints() {\r\n        for (const nodeConstraint of this._nodeConstraints) {\r\n            this._resolveConstraint(nodeConstraint);\r\n        }\r\n    }\r\n    _resolveConstraint(nodeConstraint) {\r\n        const dstRestQuat = nodeConstraint.destinationRestLocalRotation;\r\n        const srcRestQuatInv = nodeConstraint.sourceRestLocalRotationInv;\r\n        const targetQuat = quat.identity(this._tempQuatA);\r\n        switch (nodeConstraint.type) {\r\n            case 'roll':\r\n                {\r\n                    const deltaSrcQuat = quat.multiply(this._tempQuatA, srcRestQuatInv, nodeConstraint.source.rotationLocal);\r\n                    /* source to parent */\r\n                    const deltaSrcQuatInParent = quat.multiply(this._tempQuatA, nodeConstraint.sourceRestLocalRotation, deltaSrcQuat);\r\n                    quat.mul(deltaSrcQuatInParent, deltaSrcQuatInParent, srcRestQuatInv);\r\n                    /* parent to destination */\r\n                    const dstRestQuatInv = quat.invert(this._tempQuatB, dstRestQuat);\r\n                    const deltaSrcQuatInDst = quat.multiply(this._tempQuatB, dstRestQuatInv, deltaSrcQuatInParent);\r\n                    quat.multiply(deltaSrcQuatInDst, deltaSrcQuatInDst, dstRestQuat);\r\n                    const toVec = vec3.transformQuat(this._tempV3A, nodeConstraint.axis, deltaSrcQuatInDst);\r\n                    const fromToQuat = quat.rotationTo(this._tempQuatA, nodeConstraint.axis, toVec);\r\n                    quat.mul(targetQuat, dstRestQuat, quat.invert(this._tempQuat, fromToQuat));\r\n                    quat.mul(targetQuat, targetQuat, deltaSrcQuatInDst);\r\n                }\r\n                break;\r\n            case 'aim':\r\n                {\r\n                    const dstParentWorldQuat = nodeConstraint.destination.parent.rotationWorld;\r\n                    /* fromVec = aimAxis.applyQuaternion( dstParentWorldQuat * dstRestQuat ) */\r\n                    const fromVec = vec3.transformQuat(this._tempV3A, nodeConstraint.axis, dstRestQuat);\r\n                    vec3.transformQuat(fromVec, fromVec, dstParentWorldQuat);\r\n                    /* toVec = ( srcWorldPos - dstWorldPos ).normalized */\r\n                    const toVec = nodeConstraint.source.getTranslationWorld(this._tempV3B);\r\n                    vec3.sub(toVec, toVec, nodeConstraint.destination.getTranslationWorld(this._tempV3));\r\n                    vec3.normalize(toVec, toVec);\r\n                    /* fromToQuat = Quaternion.fromToRotation( fromVec, toVec ) */\r\n                    const fromToQuat = quat.rotationTo(this._tempQuatA, fromVec, toVec);\r\n                    quat.mul(targetQuat, quat.invert(this._tempQuat, dstParentWorldQuat), fromToQuat);\r\n                    quat.mul(targetQuat, targetQuat, dstParentWorldQuat);\r\n                    quat.mul(targetQuat, targetQuat, dstRestQuat);\r\n                }\r\n                break;\r\n            case 'rotation':\r\n                {\r\n                    const srcDeltaQuat = quat.mul(targetQuat, srcRestQuatInv, nodeConstraint.source.rotationLocal);\r\n                    quat.mul(targetQuat, dstRestQuat, srcDeltaQuat);\r\n                }\r\n                break;\r\n        }\r\n        /* Apply constraint */\r\n        quat.slerp(targetQuat, dstRestQuat, targetQuat, nodeConstraint.weight);\r\n        nodeConstraint.destination.rotationLocal = targetQuat;\r\n    }\r\n    _updateSpringBones(dt) {\r\n        /* Pre-compute collider positions */\r\n        this._sphereColliders.forEach(({ object, shape, cache }) => {\r\n            const offset = vec3.copy(cache.head, shape.offset);\r\n            object.transformVectorWorld(offset);\r\n            vec3.add(cache.head, object.getTranslationWorld(this._tempV3), offset);\r\n        });\r\n        this._capsuleColliders.forEach(({ object, shape, cache }) => {\r\n            const shapeCenter = object.getTranslationWorld(this._tempV3A);\r\n            const headOffset = vec3.copy(cache.head, shape.offset);\r\n            object.transformVectorWorld(headOffset);\r\n            vec3.add(cache.head, shapeCenter, headOffset);\r\n            const tailOffset = vec3.copy(cache.tail, shape.tail);\r\n            object.transformVectorWorld(tailOffset);\r\n            vec3.add(cache.tail, shapeCenter, tailOffset);\r\n        });\r\n        /* Update spring chains */\r\n        this._springChains.forEach((springChain) => {\r\n            for (let i = 0; i < springChain.joints.length - 1; ++i) {\r\n                const joint = springChain.joints[i];\r\n                const parentWorldRotation = joint.node.parent\r\n                    ? joint.node.parent.rotationWorld\r\n                    : this._identityQuat;\r\n                /* 1. Forces */\r\n                /* inertia = (currentTail - prevTail) * (1.0f - dragForce); */\r\n                const inertia = this._inertia;\r\n                if (springChain.center) {\r\n                    vec3.sub(inertia, joint.state.currentTailCenter, joint.state.prevTailCenter);\r\n                    springChain.center.transformVectorWorld(inertia);\r\n                }\r\n                else {\r\n                    vec3.sub(inertia, joint.state.currentTail, joint.state.prevTail);\r\n                }\r\n                vec3.scale(inertia, inertia, 1.0 - joint.dragForce);\r\n                /* stiffness = deltaTime * parentWorldRotation * localRotation * boneAxis * stiffnessForce; */\r\n                const stiffness = vec3.copy(this._stiffness, joint.state.boneAxis);\r\n                vec3.transformQuat(stiffness, stiffness, joint.state.initialLocalRotation);\r\n                vec3.transformQuat(stiffness, stiffness, parentWorldRotation);\r\n                vec3.scale(stiffness, stiffness, dt * joint.stiffness);\r\n                /* external = deltaTime * gravityDir * gravityPower; */\r\n                const external = vec3.scale(this._external, joint.gravityDir, dt * joint.gravityPower);\r\n                /* nextTail = currentTail + inertia + stiffness + external; */\r\n                const nextTail = vec3.copy(this._tempV3A, joint.state.currentTail);\r\n                vec3.add(nextTail, nextTail, inertia);\r\n                vec3.add(nextTail, nextTail, stiffness);\r\n                vec3.add(nextTail, nextTail, external);\r\n                /* constrain the length */\r\n                /* nextTail = worldPosition + (nextTail - worldPosition).normalized * boneLength; */\r\n                const worldPosition = joint.node.getTranslationWorld(this._tempV3B);\r\n                vec3.sub(nextTail, nextTail, worldPosition);\r\n                vec3.normalize(nextTail, nextTail);\r\n                vec3.scaleAndAdd(nextTail, worldPosition, nextTail, joint.state.boneLength);\r\n                /* 2. Collision with colliders */\r\n                /* Sphere colliders */\r\n                for (const { shape, cache } of springChain.sphereColliders) {\r\n                    let tailToShape = this._tailToShape;\r\n                    const sphereCenter = cache.head;\r\n                    tailToShape = vec3.sub(tailToShape, nextTail, sphereCenter);\r\n                    const radius = shape.radius + joint.hitRadius;\r\n                    const dist = vec3.length(tailToShape) - radius;\r\n                    if (dist < 0.0) {\r\n                        vec3.normalize(tailToShape, tailToShape);\r\n                        vec3.scaleAndAdd(nextTail, nextTail, tailToShape, -dist);\r\n                        /* constraint the length */\r\n                        vec3.sub(nextTail, nextTail, worldPosition);\r\n                        vec3.normalize(nextTail, nextTail);\r\n                        vec3.scaleAndAdd(nextTail, worldPosition, nextTail, joint.state.boneLength);\r\n                    }\r\n                }\r\n                /* Capsule colliders */\r\n                for (const { shape, cache } of springChain.capsuleColliders) {\r\n                    let tailToShape = this._tailToShape;\r\n                    const head = cache.head;\r\n                    const tail = cache.tail;\r\n                    /* Naively start with distance to the head */\r\n                    tailToShape = vec3.sub(tailToShape, nextTail, head);\r\n                    const headToTail = vec3.sub(this._headToTail, tail, head);\r\n                    const dot = vec3.dot(headToTail, tailToShape);\r\n                    if (vec3.squaredLength(headToTail) <= dot) {\r\n                        /* Closest to tail */\r\n                        vec3.sub(tailToShape, nextTail, tail);\r\n                    }\r\n                    else if (dot > 0.0) {\r\n                        /* Closest to middle */\r\n                        vec3.scale(headToTail, headToTail, dot / vec3.squaredLength(headToTail));\r\n                        vec3.sub(tailToShape, tailToShape, headToTail);\r\n                    }\r\n                    const radius = shape.radius + joint.hitRadius;\r\n                    const dist = vec3.length(tailToShape) - radius;\r\n                    if (dist < 0.0) {\r\n                        vec3.normalize(tailToShape, tailToShape);\r\n                        vec3.scaleAndAdd(nextTail, nextTail, tailToShape, -dist);\r\n                        /* constraint the length */\r\n                        vec3.sub(nextTail, nextTail, worldPosition);\r\n                        vec3.normalize(nextTail, nextTail);\r\n                        vec3.scaleAndAdd(nextTail, worldPosition, nextTail, joint.state.boneLength);\r\n                    }\r\n                }\r\n                /* 3. Applying rotation */\r\n                vec3.copy(joint.state.prevTail, joint.state.currentTail);\r\n                vec3.copy(joint.state.currentTail, nextTail);\r\n                if (springChain.center) {\r\n                    vec3.copy(joint.state.prevTailCenter, joint.state.currentTailCenter);\r\n                    vec3.copy(joint.state.currentTailCenter, nextTail);\r\n                    springChain.center.transformPointInverseWorld(joint.state.currentTailCenter);\r\n                }\r\n                /* to = (nextTail * (node.parent.worldMatrix * initialLocalMatrix).inverse).normalized */\r\n                joint.node.parent.transformPointInverseWorld(nextTail);\r\n                const nextTailDualQuat = quat2.fromTranslation(this._tempQuat2, nextTail);\r\n                quat2.multiply(nextTailDualQuat, joint.state.initialLocalTransformInvert, nextTailDualQuat);\r\n                quat2.getTranslation(nextTail, nextTailDualQuat);\r\n                vec3.normalize(nextTail, nextTail);\r\n                /* node.rotation = initialLocalRotation * Quaternion.fromToQuaternion(boneAxis, to); */\r\n                const jointRotation = quat.rotationTo(this._tempQuatA, joint.state.boneAxis, nextTail);\r\n                joint.node.rotationLocal = quat.mul(this._tempQuatA, joint.state.initialLocalRotation, jointRotation);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @param {boolean} firstPerson Whether the model should render for first person or third person views\r\n     */\r\n    set firstPerson(firstPerson) {\r\n        this._firstPersonAnnotations.forEach((annotation) => {\r\n            const visible = firstPerson == annotation.firstPerson ||\r\n                firstPerson != annotation.thirdPerson;\r\n            annotation.node.getComponents('mesh').forEach((mesh) => {\r\n                mesh.active = visible;\r\n            });\r\n        });\r\n    }\r\n}\r\nexport { Vrm };\r\n", "import { vec3 } from 'gl-matrix';\r\nimport { Component, Type } from '@wonderlandengine/api';\r\nconst _direction = new Float32Array(3);\r\n/**\r\n * Basic movement with W/A/S/D keys.\r\n */\r\nclass WasdControlsComponent extends Component {\r\n    static TypeName = 'wasd-controls';\r\n    static Properties = {\r\n        /** Movement speed in m/s. */\r\n        speed: { type: Type.Float, default: 0.1 },\r\n        /** Flag for only moving the object on the global x & z planes */\r\n        lockY: { type: Type.Bool, default: false },\r\n        /** Object of which the orientation is used to determine forward direction */\r\n        headObject: { type: Type.Object },\r\n    };\r\n    init() {\r\n        this.up = false;\r\n        this.right = false;\r\n        this.down = false;\r\n        this.left = false;\r\n        window.addEventListener('keydown', this.press.bind(this));\r\n        window.addEventListener('keyup', this.release.bind(this));\r\n    }\r\n    start() {\r\n        this.headObject = this.headObject || this.object;\r\n    }\r\n    update() {\r\n        vec3.zero(_direction);\r\n        if (this.up)\r\n            _direction[2] -= 1.0;\r\n        if (this.down)\r\n            _direction[2] += 1.0;\r\n        if (this.left)\r\n            _direction[0] -= 1.0;\r\n        if (this.right)\r\n            _direction[0] += 1.0;\r\n        vec3.normalize(_direction, _direction);\r\n        _direction[0] *= this.speed;\r\n        _direction[2] *= this.speed;\r\n        vec3.transformQuat(_direction, _direction, this.headObject.transformWorld);\r\n        if (this.lockY) {\r\n            _direction[1] = 0;\r\n            vec3.normalize(_direction, _direction);\r\n            vec3.scale(_direction, _direction, this.speed);\r\n        }\r\n        this.object.translateLocal(_direction);\r\n    }\r\n    press(e) {\r\n        if (e.keyCode === 38 /* up */ ||\r\n            e.keyCode === 87 /* w */ ||\r\n            e.keyCode === 90 /* z */) {\r\n            this.up = true;\r\n        }\r\n        else if (e.keyCode === 39 /* right */ || e.keyCode === 68 /* d */) {\r\n            this.right = true;\r\n        }\r\n        else if (e.keyCode === 40 /* down */ || e.keyCode === 83 /* s */) {\r\n            this.down = true;\r\n        }\r\n        else if (e.keyCode === 37 /* left */ ||\r\n            e.keyCode === 65 /* a */ ||\r\n            e.keyCode === 81 /* q */) {\r\n            this.left = true;\r\n        }\r\n    }\r\n    release(e) {\r\n        if (e.keyCode === 38 /* up */ ||\r\n            e.keyCode === 87 /* w */ ||\r\n            e.keyCode === 90 /* z */) {\r\n            this.up = false;\r\n        }\r\n        else if (e.keyCode === 39 /* right */ || e.keyCode === 68 /* d */) {\r\n            this.right = false;\r\n        }\r\n        else if (e.keyCode === 40 /* down */ || e.keyCode === 83 /* s */) {\r\n            this.down = false;\r\n        }\r\n        else if (e.keyCode === 37 /* left */ ||\r\n            e.keyCode === 65 /* a */ ||\r\n            e.keyCode === 81 /* q */) {\r\n            this.left = false;\r\n        }\r\n    }\r\n}\r\nexport { WasdControlsComponent };\r\n", "import {Component, InputComponent, MeshComponent, Property} from '@wonderlandengine/api';\r\nimport {CursorTarget, HowlerAudioSource} from '@wonderlandengine/components';\r\n\r\n/**\r\n * Helper function to trigger haptic feedback pulse.\r\n *\r\n * @param {Object} object An object with 'input' component attached\r\n * @param {number} strength Strength from 0.0 - 1.0\r\n * @param {number} duration Duration in milliseconds\r\n */\r\nexport function hapticFeedback(object, strength, duration) {\r\n    const input = object.getComponent(InputComponent);\r\n    if (input && input.xrInputSource) {\r\n        const gamepad = input.xrInputSource.gamepad;\r\n        if (gamepad && gamepad.hapticActuators)\r\n            gamepad.hapticActuators[0].pulse(strength, duration);\r\n    }\r\n}\r\n\r\n/**\r\n * Button component.\r\n *\r\n * Shows a 'hoverMaterial' on cursor hover, moves backward on cursor down,\r\n * returns to its position on cursor up, plays click/unclick sounds and haptic\r\n * feedback on hover.\r\n *\r\n * Use `target.onClick.add(() => {})` on the `cursor-target` component used\r\n * with the button to define the button's action.\r\n *\r\n * Supports interaction with `finger-cursor` component for hand tracking.\r\n */\r\nexport class ButtonComponent extends Component {\r\n    static TypeName = 'button';\r\n    static Properties = {\r\n        /** Object that has the button's mesh attached */\r\n        buttonMeshObject: Property.object(),\r\n        /** Material to apply when the user hovers the button */\r\n        hoverMaterial: Property.material(),\r\n    };\r\n\r\n    static onRegister(engine) {\r\n        engine.registerComponent(HowlerAudioSource);\r\n        engine.registerComponent(CursorTarget);\r\n    }\r\n\r\n    /* Position to return to when \"unpressing\" the button */\r\n    returnPos = new Float32Array(3);\r\n\r\n    start() {\r\n        this.mesh = this.buttonMeshObject.getComponent(MeshComponent);\r\n        this.defaultMaterial = this.mesh.material;\r\n        this.buttonMeshObject.getTranslationLocal(this.returnPos);\r\n\r\n        this.target =\r\n            this.object.getComponent(CursorTarget) ||\r\n            this.object.addComponent(CursorTarget);\r\n\r\n        this.soundClick = this.object.addComponent(HowlerAudioSource, {\r\n            src: 'sfx/click.wav',\r\n            spatial: true,\r\n        });\r\n        this.soundUnClick = this.object.addComponent(HowlerAudioSource, {\r\n            src: 'sfx/unclick.wav',\r\n            spatial: true,\r\n        });\r\n    }\r\n\r\n    onActivate() {\r\n        this.target.onHover.add(this.onHover);\r\n        this.target.onUnhover.add(this.onUnhover);\r\n        this.target.onDown.add(this.onDown);\r\n        this.target.onUp.add(this.onUp);\r\n    }\r\n\r\n    onDeactivate() {\r\n        this.target.onHover.remove(this.onHover);\r\n        this.target.onUnhover.remove(this.onUnhover);\r\n        this.target.onDown.remove(this.onDown);\r\n        this.target.onUp.remove(this.onUp);\r\n    }\r\n\r\n    /* Called by 'cursor-target' */\r\n    onHover = (_, cursor) => {\r\n        this.mesh.material = this.hoverMaterial;\r\n        if (cursor.type === 'finger-cursor') {\r\n            this.onDown(_, cursor);\r\n        }\r\n\r\n        hapticFeedback(cursor.object, 0.5, 50);\r\n    }\r\n\r\n    /* Called by 'cursor-target' */\r\n    onDown = (_, cursor) => {\r\n        this.soundClick.play();\r\n        this.buttonMeshObject.translate([0.0, -0.1, 0.0]);\r\n        hapticFeedback(cursor.object, 1.0, 20);\r\n    }\r\n\r\n    /* Called by 'cursor-target' */\r\n    onUp = (_, cursor) => {\r\n        this.soundUnClick.play();\r\n        this.buttonMeshObject.setTranslationLocal(this.returnPos);\r\n        hapticFeedback(cursor.object, 0.7, 20);\r\n    }\r\n\r\n    /* Called by 'cursor-target' */\r\n    onUnhover = (_, cursor) => {\r\n        this.mesh.material = this.defaultMaterial;\r\n        if (cursor.type === 'finger-cursor') {\r\n            this.onUp(_, cursor);\r\n        }\r\n\r\n        hapticFeedback(cursor.object, 0.3, 50);\r\n    }\r\n}\r\n", "/**\r\n * /!\\ This file is auto-generated.\r\n *\r\n * This is the entry point of your standalone application.\r\n *\r\n * There are multiple tags used by the editor to inject code automatically:\r\n *     - `wle:auto-imports:start` and `wle:auto-imports:end`: The list of import statements\r\n *     - `wle:auto-register:start` and `wle:auto-register:end`: The list of component to register\r\n *     - `wle:auto-constants:start` and `wle:auto-constants:end`: The project's constants,\r\n *        such as the project's name, whether it should use the physx runtime, etc...\r\n *     - `wle:auto-benchmark:start` and `wle:auto-benchmark:end`: Append the benchmarking code\r\n */\r\n\r\n/* wle:auto-imports:start */\nimport {Cursor} from '@wonderlandengine/components';\nimport {CursorTarget} from '@wonderlandengine/components';\nimport {FingerCursor} from '@wonderlandengine/components';\nimport {HandTracking} from '@wonderlandengine/components';\nimport {HowlerAudioListener} from '@wonderlandengine/components';\nimport {MouseLookComponent} from '@wonderlandengine/components';\nimport {PlayerHeight} from '@wonderlandengine/components';\nimport {TeleportComponent} from '@wonderlandengine/components';\nimport {VrModeActiveSwitch} from '@wonderlandengine/components';\nimport {ButtonComponent} from './button.js';\n/* wle:auto-imports:end */\r\n\r\nimport {loadRuntime} from '@wonderlandengine/api';\r\nimport * as API from '@wonderlandengine/api'; // Deprecated: Backward compatibility.\r\n\r\n/* wle:auto-constants:start */\nconst Constants = {\n    ProjectName: 'Project.wlp',\n    RuntimeBaseName: 'WonderlandRuntime',\n    WebXRRequiredFeatures: ['local',],\n    WebXROptionalFeatures: ['local','local-floor','hand-tracking','hit-test',],\n};\nconst RuntimeOptions = {\n    physx: false,\n    loader: false,\n    xrFramebufferScaleFactor: 1,\n    xrOfferSession: {\n        mode: 'auto',\n        features: Constants.WebXRRequiredFeatures,\n        optionalFeatures: Constants.WebXROptionalFeatures,\n    },\n    canvas: 'canvas',\n};\n/* wle:auto-constants:end */\r\n\r\nconst engine = await loadRuntime(Constants.RuntimeBaseName, RuntimeOptions);\r\nObject.assign(engine, API); // Deprecated: Backward compatibility.\r\nwindow.WL = engine; // Deprecated: Backward compatibility.\r\n\r\nengine.onSceneLoaded.once(() => {\r\n    const el = document.getElementById('version');\r\n    if (el) setTimeout(() => el.remove(), 2000);\r\n});\r\n\r\n/* WebXR setup. */\r\n\r\nfunction requestSession(mode) {\r\n    engine\r\n        .requestXRSession(mode, Constants.WebXRRequiredFeatures, Constants.WebXROptionalFeatures)\r\n        .catch((e) => console.error(e));\r\n}\r\n\r\nfunction setupButtonsXR() {\r\n    /* Setup AR / VR buttons */\r\n    const arButton = document.getElementById('ar-button');\r\n    if (arButton) {\r\n        arButton.dataset.supported = engine.arSupported;\r\n        arButton.addEventListener('click', () => requestSession('immersive-ar'));\r\n    }\r\n    const vrButton = document.getElementById('vr-button');\r\n    if (vrButton) {\r\n        vrButton.dataset.supported = engine.vrSupported;\r\n        vrButton.addEventListener('click', () => requestSession('immersive-vr'));\r\n    }\r\n}\r\n\r\nif (document.readyState === 'loading') {\r\n    window.addEventListener('load', setupButtonsXR);\r\n} else {\r\n    setupButtonsXR();\r\n}\r\n\r\n/* wle:auto-register:start */\nengine.registerComponent(Cursor);\nengine.registerComponent(CursorTarget);\nengine.registerComponent(FingerCursor);\nengine.registerComponent(HandTracking);\nengine.registerComponent(HowlerAudioListener);\nengine.registerComponent(MouseLookComponent);\nengine.registerComponent(PlayerHeight);\nengine.registerComponent(TeleportComponent);\nengine.registerComponent(VrModeActiveSwitch);\nengine.registerComponent(ButtonComponent);\n/* wle:auto-register:end */\r\n\r\nengine.scene.load(`${Constants.ProjectName}.bin`).catch((e) => {\r\n    console.error(e);\r\n    window.alert(`Failed to load ${Constants.ProjectName}.bin:`, e);\r\n});\r\n\r\n/* wle:auto-benchmark:start */\n/* wle:auto-benchmark:end */\r\n"],
  "mappings": "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,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI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",
  "names": ["HowlerGlobal", "self", "Howler", "e", "i", "Howl", "str", "Sound", "timeout", "len", "earcut", "equals", "len", "e", "Type", "TransactionType", "LogTag", "Collider", "Alignment", "Justification", "TextEffect", "InputType", "LightType", "AnimationState", "ForceMode", "CollisionEventType", "Shape", "MeshAttribute", "MaterialParamType", "engine", "length", "angle", "LockAxis", "offset", "MeshIndexType", "MeshSkinningType", "canvas", "animId", "engine", "engine", "min", "max", "engine", "size", "engine", "LogLevel", "threads", "str", "engine", "checkXRSupport", "simd", "threads", "canvas", "filename", "engine", "__decorate", "tempQuat", "create", "create", "len", "scale", "add", "clone", "copy", "create", "dot", "equals", "exactEquals", "fromValues", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "random", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "mul", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "scale", "len", "rotateX", "rotateY", "rotateZ", "str", "exactEquals", "equals", "sub", "mul", "offset", "create", "clone", "fromValues", "copy", "set", "add", "scale", "length", "squaredLength", "normalize", "len", "dot", "lerp", "exactEquals", "equals", "forEach", "create", "offset", "create", "identity", "dot", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "random", "invert", "str", "clone", "fromValues", "copy", "set", "add", "mul", "lerp", "length", "len", "squaredLength", "sqrLen", "normalize", "exactEquals", "equals", "add", "clone", "conjugate", "copy", "create", "dot", "equals", "exactEquals", "fromRotation", "fromRotationTranslation", "fromTranslation", "fromValues", "getTranslation", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "translate", "create", "clone", "fromValues", "fromRotationTranslation", "fromTranslation", "fromRotation", "copy", "identity", "set", "getTranslation", "translate", "rotateX", "rotateY", "rotateZ", "add", "multiply", "mul", "scale", "dot", "lerp", "invert", "squaredLength", "conjugate", "length", "len", "sqrLen", "normalize", "str", "exactEquals", "equals", "__decorate", "__decorate", "tempVec", "engine", "canvas", "dist", "__decorate", "__decorate", "import_howler", "__decorate", "canvas", "__decorate", "a", "direction", "clamp", "tempQuat", "targetPos", "__decorate", "tempVec3", "engine", "earcut", "tempVec3", "__decorate", "lookAt", "offset", "dist", "dot", "engine"]
}
