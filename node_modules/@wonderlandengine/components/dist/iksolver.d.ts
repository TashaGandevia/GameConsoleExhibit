/**
 * Inverse Kinematics for two-joint chains (e.g. knees or ellbows)
 */
export class IKSolverComponent extends Component {
    static Properties: {
        /** Root bone, never moves */
        root: import("@wonderlandengine/api").ComponentProperty;
        /** Bone attached to the root */
        middle: import("@wonderlandengine/api").ComponentProperty;
        /** Bone attached to the middle */
        end: import("@wonderlandengine/api").ComponentProperty;
        /** Target the joins should reach for */
        target: import("@wonderlandengine/api").ComponentProperty;
        /** Flag for copying rotation from target to end */
        copyTargetRotation: import("@wonderlandengine/api").ComponentProperty;
        /** Helper object to use to determine joint rotation axis */
        helper: import("@wonderlandengine/api").ComponentProperty;
    };
    init(): void;
    count: number | undefined;
    pos: Float32Array | undefined;
    p: Float32Array[] | undefined;
    bBend: boolean | undefined;
    resetRoot: boolean | undefined;
    afixed(ar: any, dp: any): string;
    update(): void;
    rootstart: Float32Array | undefined;
    midstart: any;
    endstart: any;
    helper: any;
}
import { Component } from "@wonderlandengine/api";
